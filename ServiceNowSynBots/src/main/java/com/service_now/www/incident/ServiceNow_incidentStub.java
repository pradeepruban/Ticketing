
/**
 * ServiceNow_incidentStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.5.6  Built on : Aug 30, 2011 (10:00:16 CEST)
 */
        package com.service_now.www.incident;

        

        /*
        *  ServiceNow_incidentStub java implementation
        */

        
        public class ServiceNow_incidentStub extends org.apache.axis2.client.Stub
        {
        protected org.apache.axis2.description.AxisOperation[] _operations;

        //hashmaps to keep the fault mapping
        private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
        private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
        private java.util.HashMap faultMessageMap = new java.util.HashMap();

        private static int counter = 0;

        private static synchronized java.lang.String getUniqueSuffix(){
            // reset the counter if it is greater than 99999
            if (counter > 99999){
                counter = 0;
            }
            counter = counter + 1; 
            return java.lang.Long.toString(java.lang.System.currentTimeMillis()) + "_" + counter;
        }

    
    private void populateAxisService() throws org.apache.axis2.AxisFault {

     //creating the Service with a unique name
     _service = new org.apache.axis2.description.AxisService("ServiceNow_incident" + getUniqueSuffix());
     addAnonymousOperations();

        //creating the operations
        org.apache.axis2.description.AxisOperation __operation;

        _operations = new org.apache.axis2.description.AxisOperation[7];
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.service-now.com/incident", "getKeys"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[0]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.service-now.com/incident", "update"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[1]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.service-now.com/incident", "getRecords"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[2]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.service-now.com/incident", "deleteMultiple"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[3]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.service-now.com/incident", "get"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[4]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.service-now.com/incident", "insert"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[5]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.service-now.com/incident", "deleteRecord"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[6]=__operation;
            
        
        }

    //populates the faults
    private void populateFaults(){
         


    }

    /**
      *Constructor that takes in a configContext
      */

    public ServiceNow_incidentStub(org.apache.axis2.context.ConfigurationContext configurationContext,
       java.lang.String targetEndpoint)
       throws org.apache.axis2.AxisFault {
         this(configurationContext,targetEndpoint,false);
   }


   /**
     * Constructor that takes in a configContext  and useseperate listner
     */
   public ServiceNow_incidentStub(org.apache.axis2.context.ConfigurationContext configurationContext,
        java.lang.String targetEndpoint, boolean useSeparateListener)
        throws org.apache.axis2.AxisFault {
         //To populate AxisService
         populateAxisService();
         populateFaults();

        _serviceClient = new org.apache.axis2.client.ServiceClient(configurationContext,_service);
        
	
        _serviceClient.getOptions().setTo(new org.apache.axis2.addressing.EndpointReference(
                targetEndpoint));
        _serviceClient.getOptions().setUseSeparateListener(useSeparateListener);
        
    
    }

    /**
     * Default Constructor
     */
    public ServiceNow_incidentStub(org.apache.axis2.context.ConfigurationContext configurationContext) throws org.apache.axis2.AxisFault {
        
                    this(configurationContext,"https://syntelincdev.service-now.com/incident.do?SOAP" );
                
    }

    /**
     * Default Constructor
     */
    public ServiceNow_incidentStub() throws org.apache.axis2.AxisFault {
        
                    this("https://syntelincdev.service-now.com/incident.do?SOAP" );
                
    }

    /**
     * Constructor taking the target endpoint
     */
    public ServiceNow_incidentStub(java.lang.String targetEndpoint) throws org.apache.axis2.AxisFault {
        this(null,targetEndpoint);
    }



        
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.service_now.www.incident.ServiceNow_incident#getKeys
                     * @param getKeys0
                    
                     */

                    

                            public  com.service_now.www.incident.ServiceNow_incidentStub.GetKeysResponse getKeys(

                            com.service_now.www.incident.ServiceNow_incidentStub.GetKeys getKeys0)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
              _operationClient.getOptions().setAction("http://www.service-now.com/incident/getKeys");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getKeys0,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                    "getKeys")));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.service_now.www.incident.ServiceNow_incidentStub.GetKeysResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.service_now.www.incident.ServiceNow_incidentStub.GetKeysResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(faultElt.getQName())){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.Exception ex=
                                (java.lang.Exception) exceptionClass.newInstance();
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.service_now.www.incident.ServiceNow_incident#startgetKeys
                    * @param getKeys0
                
                */
                public  void startgetKeys(

                 com.service_now.www.incident.ServiceNow_incidentStub.GetKeys getKeys0,

                  final com.service_now.www.incident.ServiceNow_incidentCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
             _operationClient.getOptions().setAction("http://www.service-now.com/incident/getKeys");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getKeys0,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                    "getKeys")));
                                                
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.service_now.www.incident.ServiceNow_incidentStub.GetKeysResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetKeys(
                                        (com.service_now.www.incident.ServiceNow_incidentStub.GetKeysResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetKeys(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(faultElt.getQName())){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.Exception ex=
														(java.lang.Exception) exceptionClass.newInstance();
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetKeys(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeys(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeys(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeys(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeys(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeys(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeys(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeys(f);
                                            }
									    } else {
										    callback.receiveErrorgetKeys(f);
									    }
									} else {
									    callback.receiveErrorgetKeys(f);
									}
								} else {
								    callback.receiveErrorgetKeys(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetKeys(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[0].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[0].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.service_now.www.incident.ServiceNow_incident#update
                     * @param update2
                    
                     */

                    

                            public  com.service_now.www.incident.ServiceNow_incidentStub.UpdateResponse update(

                            com.service_now.www.incident.ServiceNow_incidentStub.Update update2)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
              _operationClient.getOptions().setAction("http://www.service-now.com/incident/update");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    update2,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                    "update")));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.service_now.www.incident.ServiceNow_incidentStub.UpdateResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.service_now.www.incident.ServiceNow_incidentStub.UpdateResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(faultElt.getQName())){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.Exception ex=
                                (java.lang.Exception) exceptionClass.newInstance();
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.service_now.www.incident.ServiceNow_incident#startupdate
                    * @param update2
                
                */
                public  void startupdate(

                 com.service_now.www.incident.ServiceNow_incidentStub.Update update2,

                  final com.service_now.www.incident.ServiceNow_incidentCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
             _operationClient.getOptions().setAction("http://www.service-now.com/incident/update");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    update2,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                    "update")));
                                                
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.service_now.www.incident.ServiceNow_incidentStub.UpdateResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdate(
                                        (com.service_now.www.incident.ServiceNow_incidentStub.UpdateResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdate(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(faultElt.getQName())){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.Exception ex=
														(java.lang.Exception) exceptionClass.newInstance();
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorupdate(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdate(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdate(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdate(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdate(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdate(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdate(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdate(f);
                                            }
									    } else {
										    callback.receiveErrorupdate(f);
									    }
									} else {
									    callback.receiveErrorupdate(f);
									}
								} else {
								    callback.receiveErrorupdate(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdate(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[1].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[1].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.service_now.www.incident.ServiceNow_incident#getRecords
                     * @param getRecords4
                    
                     */

                    

                            public  com.service_now.www.incident.ServiceNow_incidentStub.GetRecordsResponse getRecords(

                            com.service_now.www.incident.ServiceNow_incidentStub.GetRecords getRecords4)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
              _operationClient.getOptions().setAction("http://www.service-now.com/incident/getRecords");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRecords4,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                    "getRecords")));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.service_now.www.incident.ServiceNow_incidentStub.GetRecordsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.service_now.www.incident.ServiceNow_incidentStub.GetRecordsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(faultElt.getQName())){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.Exception ex=
                                (java.lang.Exception) exceptionClass.newInstance();
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.service_now.www.incident.ServiceNow_incident#startgetRecords
                    * @param getRecords4
                
                */
                public  void startgetRecords(

                 com.service_now.www.incident.ServiceNow_incidentStub.GetRecords getRecords4,

                  final com.service_now.www.incident.ServiceNow_incidentCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
             _operationClient.getOptions().setAction("http://www.service-now.com/incident/getRecords");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRecords4,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                    "getRecords")));
                                                
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.service_now.www.incident.ServiceNow_incidentStub.GetRecordsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetRecords(
                                        (com.service_now.www.incident.ServiceNow_incidentStub.GetRecordsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetRecords(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(faultElt.getQName())){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.Exception ex=
														(java.lang.Exception) exceptionClass.newInstance();
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorgetRecords(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRecords(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRecords(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRecords(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRecords(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRecords(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRecords(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRecords(f);
                                            }
									    } else {
										    callback.receiveErrorgetRecords(f);
									    }
									} else {
									    callback.receiveErrorgetRecords(f);
									}
								} else {
								    callback.receiveErrorgetRecords(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetRecords(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[2].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[2].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.service_now.www.incident.ServiceNow_incident#deleteMultiple
                     * @param deleteMultiple6
                    
                     */

                    

                            public  com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultipleResponse deleteMultiple(

                            com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultiple deleteMultiple6)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[3].getName());
              _operationClient.getOptions().setAction("http://www.service-now.com/incident/deleteMultiple");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteMultiple6,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                    "deleteMultiple")));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultipleResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultipleResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(faultElt.getQName())){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.Exception ex=
                                (java.lang.Exception) exceptionClass.newInstance();
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.service_now.www.incident.ServiceNow_incident#startdeleteMultiple
                    * @param deleteMultiple6
                
                */
                public  void startdeleteMultiple(

                 com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultiple deleteMultiple6,

                  final com.service_now.www.incident.ServiceNow_incidentCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[3].getName());
             _operationClient.getOptions().setAction("http://www.service-now.com/incident/deleteMultiple");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteMultiple6,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                    "deleteMultiple")));
                                                
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultipleResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteMultiple(
                                        (com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultipleResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteMultiple(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(faultElt.getQName())){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.Exception ex=
														(java.lang.Exception) exceptionClass.newInstance();
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrordeleteMultiple(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteMultiple(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteMultiple(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteMultiple(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteMultiple(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteMultiple(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteMultiple(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteMultiple(f);
                                            }
									    } else {
										    callback.receiveErrordeleteMultiple(f);
									    }
									} else {
									    callback.receiveErrordeleteMultiple(f);
									}
								} else {
								    callback.receiveErrordeleteMultiple(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteMultiple(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[3].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[3].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.service_now.www.incident.ServiceNow_incident#get
                     * @param get8
                    
                     */

                    

                            public  com.service_now.www.incident.ServiceNow_incidentStub.GetResponse get(

                            com.service_now.www.incident.ServiceNow_incidentStub.Get get8)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[4].getName());
              _operationClient.getOptions().setAction("http://www.service-now.com/incident/get");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    get8,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                    "get")));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.service_now.www.incident.ServiceNow_incidentStub.GetResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.service_now.www.incident.ServiceNow_incidentStub.GetResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(faultElt.getQName())){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.Exception ex=
                                (java.lang.Exception) exceptionClass.newInstance();
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.service_now.www.incident.ServiceNow_incident#startget
                    * @param get8
                
                */
                public  void startget(

                 com.service_now.www.incident.ServiceNow_incidentStub.Get get8,

                  final com.service_now.www.incident.ServiceNow_incidentCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[4].getName());
             _operationClient.getOptions().setAction("http://www.service-now.com/incident/get");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    get8,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                    "get")));
                                                
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.service_now.www.incident.ServiceNow_incidentStub.GetResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultget(
                                        (com.service_now.www.incident.ServiceNow_incidentStub.GetResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorget(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(faultElt.getQName())){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.Exception ex=
														(java.lang.Exception) exceptionClass.newInstance();
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorget(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorget(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorget(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorget(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorget(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorget(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorget(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorget(f);
                                            }
									    } else {
										    callback.receiveErrorget(f);
									    }
									} else {
									    callback.receiveErrorget(f);
									}
								} else {
								    callback.receiveErrorget(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorget(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[4].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[4].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.service_now.www.incident.ServiceNow_incident#insert
                     * @param insert10
                    
                     */

                    

                            public  com.service_now.www.incident.ServiceNow_incidentStub.InsertResponse insert(

                            com.service_now.www.incident.ServiceNow_incidentStub.Insert insert10)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[5].getName());
              _operationClient.getOptions().setAction("http://www.service-now.com/incident/insert");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    insert10,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                    "insert")));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.service_now.www.incident.ServiceNow_incidentStub.InsertResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.service_now.www.incident.ServiceNow_incidentStub.InsertResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(faultElt.getQName())){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.Exception ex=
                                (java.lang.Exception) exceptionClass.newInstance();
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.service_now.www.incident.ServiceNow_incident#startinsert
                    * @param insert10
                
                */
                public  void startinsert(

                 com.service_now.www.incident.ServiceNow_incidentStub.Insert insert10,

                  final com.service_now.www.incident.ServiceNow_incidentCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[5].getName());
             _operationClient.getOptions().setAction("http://www.service-now.com/incident/insert");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    insert10,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                    "insert")));
                                                
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.service_now.www.incident.ServiceNow_incidentStub.InsertResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultinsert(
                                        (com.service_now.www.incident.ServiceNow_incidentStub.InsertResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorinsert(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(faultElt.getQName())){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.Exception ex=
														(java.lang.Exception) exceptionClass.newInstance();
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrorinsert(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorinsert(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorinsert(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorinsert(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorinsert(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorinsert(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorinsert(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorinsert(f);
                                            }
									    } else {
										    callback.receiveErrorinsert(f);
									    }
									} else {
									    callback.receiveErrorinsert(f);
									}
								} else {
								    callback.receiveErrorinsert(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorinsert(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[5].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[5].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.service_now.www.incident.ServiceNow_incident#deleteRecord
                     * @param deleteRecord12
                    
                     */

                    

                            public  com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecordResponse deleteRecord(

                            com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecord deleteRecord12)
                        

                    throws java.rmi.RemoteException
                    
                    {
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[6].getName());
              _operationClient.getOptions().setAction("http://www.service-now.com/incident/deleteRecord");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteRecord12,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                    "deleteRecord")));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecordResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecordResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(faultElt.getQName())){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.Exception ex=
                                (java.lang.Exception) exceptionClass.newInstance();
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.service_now.www.incident.ServiceNow_incident#startdeleteRecord
                    * @param deleteRecord12
                
                */
                public  void startdeleteRecord(

                 com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecord deleteRecord12,

                  final com.service_now.www.incident.ServiceNow_incidentCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[6].getName());
             _operationClient.getOptions().setAction("http://www.service-now.com/incident/deleteRecord");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteRecord12,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                    "deleteRecord")));
                                                
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecordResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteRecord(
                                        (com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecordResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteRecord(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(faultElt.getQName())){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.Exception ex=
														(java.lang.Exception) exceptionClass.newInstance();
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
					
										            callback.receiveErrordeleteRecord(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteRecord(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteRecord(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteRecord(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteRecord(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteRecord(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteRecord(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteRecord(f);
                                            }
									    } else {
										    callback.receiveErrordeleteRecord(f);
									    }
									} else {
									    callback.receiveErrordeleteRecord(f);
									}
								} else {
								    callback.receiveErrordeleteRecord(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteRecord(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[6].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[6].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                


       /**
        *  A utility method that copies the namepaces from the SOAPEnvelope
        */
       private java.util.Map getEnvelopeNamespaces(org.apache.axiom.soap.SOAPEnvelope env){
        java.util.Map returnMap = new java.util.HashMap();
        java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
        while (namespaceIterator.hasNext()) {
            org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator.next();
            returnMap.put(ns.getPrefix(),ns.getNamespaceURI());
        }
       return returnMap;
    }

    
    
    private javax.xml.namespace.QName[] opNameArray = null;
    private boolean optimizeContent(javax.xml.namespace.QName opName) {
        

        if (opNameArray == null) {
            return false;
        }
        for (int i = 0; i < opNameArray.length; i++) {
            if (opName.equals(opNameArray[i])) {
                return true;   
            }
        }
        return false;
    }
     //https://syntelincdev.service-now.com/incident.do?SOAP
        public static class GetResponse
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.service-now.com/incident",
                "getResponse",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for Active
                        */

                        
                                    protected boolean localActive ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActiveTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getActive(){
                               return localActive;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Active
                               */
                               public void setActive(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localActiveTracker = false;
                                              
                                       } else {
                                          localActiveTracker = true;
                                       }
                                   
                                            this.localActive=param;
                                    

                               }
                            

                        /**
                        * field for Activity_due
                        */

                        
                                    protected java.lang.String localActivity_due ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActivity_dueTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getActivity_due(){
                               return localActivity_due;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Activity_due
                               */
                               public void setActivity_due(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localActivity_dueTracker = true;
                                       } else {
                                          localActivity_dueTracker = false;
                                              
                                       }
                                   
                                            this.localActivity_due=param;
                                    

                               }
                            

                        /**
                        * field for Approval
                        */

                        
                                    protected java.lang.String localApproval ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApprovalTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval(){
                               return localApproval;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval
                               */
                               public void setApproval(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApprovalTracker = true;
                                       } else {
                                          localApprovalTracker = false;
                                              
                                       }
                                   
                                            this.localApproval=param;
                                    

                               }
                            

                        /**
                        * field for Approval_set
                        */

                        
                                    protected java.lang.String localApproval_set ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApproval_setTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval_set(){
                               return localApproval_set;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval_set
                               */
                               public void setApproval_set(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApproval_setTracker = true;
                                       } else {
                                          localApproval_setTracker = false;
                                              
                                       }
                                   
                                            this.localApproval_set=param;
                                    

                               }
                            

                        /**
                        * field for Assigned_to
                        */

                        
                                    protected java.lang.String localAssigned_to ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAssigned_toTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssigned_to(){
                               return localAssigned_to;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Assigned_to
                               */
                               public void setAssigned_to(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAssigned_toTracker = true;
                                       } else {
                                          localAssigned_toTracker = false;
                                              
                                       }
                                   
                                            this.localAssigned_to=param;
                                    

                               }
                            

                        /**
                        * field for Assignment_group
                        */

                        
                                    protected java.lang.String localAssignment_group ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAssignment_groupTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssignment_group(){
                               return localAssignment_group;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Assignment_group
                               */
                               public void setAssignment_group(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAssignment_groupTracker = true;
                                       } else {
                                          localAssignment_groupTracker = false;
                                              
                                       }
                                   
                                            this.localAssignment_group=param;
                                    

                               }
                            

                        /**
                        * field for Business_duration
                        */

                        
                                    protected java.lang.String localBusiness_duration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusiness_durationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBusiness_duration(){
                               return localBusiness_duration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Business_duration
                               */
                               public void setBusiness_duration(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBusiness_durationTracker = true;
                                       } else {
                                          localBusiness_durationTracker = false;
                                              
                                       }
                                   
                                            this.localBusiness_duration=param;
                                    

                               }
                            

                        /**
                        * field for Business_stc
                        */

                        
                                    protected java.math.BigInteger localBusiness_stc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusiness_stcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getBusiness_stc(){
                               return localBusiness_stc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Business_stc
                               */
                               public void setBusiness_stc(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBusiness_stcTracker = true;
                                       } else {
                                          localBusiness_stcTracker = false;
                                              
                                       }
                                   
                                            this.localBusiness_stc=param;
                                    

                               }
                            

                        /**
                        * field for Calendar_duration
                        */

                        
                                    protected java.lang.String localCalendar_duration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalendar_durationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCalendar_duration(){
                               return localCalendar_duration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calendar_duration
                               */
                               public void setCalendar_duration(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCalendar_durationTracker = true;
                                       } else {
                                          localCalendar_durationTracker = false;
                                              
                                       }
                                   
                                            this.localCalendar_duration=param;
                                    

                               }
                            

                        /**
                        * field for Calendar_stc
                        */

                        
                                    protected java.math.BigInteger localCalendar_stc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalendar_stcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getCalendar_stc(){
                               return localCalendar_stc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calendar_stc
                               */
                               public void setCalendar_stc(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCalendar_stcTracker = true;
                                       } else {
                                          localCalendar_stcTracker = false;
                                              
                                       }
                                   
                                            this.localCalendar_stc=param;
                                    

                               }
                            

                        /**
                        * field for Caller_id
                        */

                        
                                    protected java.lang.String localCaller_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCaller_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCaller_id(){
                               return localCaller_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Caller_id
                               */
                               public void setCaller_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCaller_idTracker = true;
                                       } else {
                                          localCaller_idTracker = false;
                                              
                                       }
                                   
                                            this.localCaller_id=param;
                                    

                               }
                            

                        /**
                        * field for Category
                        */

                        
                                    protected java.lang.String localCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCategoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCategory(){
                               return localCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Category
                               */
                               public void setCategory(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCategoryTracker = true;
                                       } else {
                                          localCategoryTracker = false;
                                              
                                       }
                                   
                                            this.localCategory=param;
                                    

                               }
                            

                        /**
                        * field for Caused_by
                        */

                        
                                    protected java.lang.String localCaused_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCaused_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCaused_by(){
                               return localCaused_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Caused_by
                               */
                               public void setCaused_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCaused_byTracker = true;
                                       } else {
                                          localCaused_byTracker = false;
                                              
                                       }
                                   
                                            this.localCaused_by=param;
                                    

                               }
                            

                        /**
                        * field for Child_incidents
                        */

                        
                                    protected java.math.BigInteger localChild_incidents ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChild_incidentsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getChild_incidents(){
                               return localChild_incidents;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Child_incidents
                               */
                               public void setChild_incidents(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localChild_incidentsTracker = true;
                                       } else {
                                          localChild_incidentsTracker = false;
                                              
                                       }
                                   
                                            this.localChild_incidents=param;
                                    

                               }
                            

                        /**
                        * field for Close_code
                        */

                        
                                    protected java.lang.String localClose_code ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClose_codeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClose_code(){
                               return localClose_code;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Close_code
                               */
                               public void setClose_code(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClose_codeTracker = true;
                                       } else {
                                          localClose_codeTracker = false;
                                              
                                       }
                                   
                                            this.localClose_code=param;
                                    

                               }
                            

                        /**
                        * field for Close_notes
                        */

                        
                                    protected java.lang.String localClose_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClose_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClose_notes(){
                               return localClose_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Close_notes
                               */
                               public void setClose_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClose_notesTracker = true;
                                       } else {
                                          localClose_notesTracker = false;
                                              
                                       }
                                   
                                            this.localClose_notes=param;
                                    

                               }
                            

                        /**
                        * field for Closed_at
                        */

                        
                                    protected java.lang.String localClosed_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosed_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosed_at(){
                               return localClosed_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Closed_at
                               */
                               public void setClosed_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClosed_atTracker = true;
                                       } else {
                                          localClosed_atTracker = false;
                                              
                                       }
                                   
                                            this.localClosed_at=param;
                                    

                               }
                            

                        /**
                        * field for Closed_by
                        */

                        
                                    protected java.lang.String localClosed_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosed_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosed_by(){
                               return localClosed_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Closed_by
                               */
                               public void setClosed_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClosed_byTracker = true;
                                       } else {
                                          localClosed_byTracker = false;
                                              
                                       }
                                   
                                            this.localClosed_by=param;
                                    

                               }
                            

                        /**
                        * field for Cmdb_ci
                        */

                        
                                    protected java.lang.String localCmdb_ci ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCmdb_ciTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCmdb_ci(){
                               return localCmdb_ci;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cmdb_ci
                               */
                               public void setCmdb_ci(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCmdb_ciTracker = true;
                                       } else {
                                          localCmdb_ciTracker = false;
                                              
                                       }
                                   
                                            this.localCmdb_ci=param;
                                    

                               }
                            

                        /**
                        * field for Comments_and_work_notes
                        */

                        
                                    protected java.lang.String localComments_and_work_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localComments_and_work_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getComments_and_work_notes(){
                               return localComments_and_work_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Comments_and_work_notes
                               */
                               public void setComments_and_work_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localComments_and_work_notesTracker = true;
                                       } else {
                                          localComments_and_work_notesTracker = false;
                                              
                                       }
                                   
                                            this.localComments_and_work_notes=param;
                                    

                               }
                            

                        /**
                        * field for Company
                        */

                        
                                    protected java.lang.String localCompany ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompany(){
                               return localCompany;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Company
                               */
                               public void setCompany(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCompanyTracker = true;
                                       } else {
                                          localCompanyTracker = false;
                                              
                                       }
                                   
                                            this.localCompany=param;
                                    

                               }
                            

                        /**
                        * field for Contact_type
                        */

                        
                                    protected java.lang.String localContact_type ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localContact_typeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getContact_type(){
                               return localContact_type;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Contact_type
                               */
                               public void setContact_type(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localContact_typeTracker = true;
                                       } else {
                                          localContact_typeTracker = false;
                                              
                                       }
                                   
                                            this.localContact_type=param;
                                    

                               }
                            

                        /**
                        * field for Correlation_display
                        */

                        
                                    protected java.lang.String localCorrelation_display ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelation_displayTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelation_display(){
                               return localCorrelation_display;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Correlation_display
                               */
                               public void setCorrelation_display(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCorrelation_displayTracker = true;
                                       } else {
                                          localCorrelation_displayTracker = false;
                                              
                                       }
                                   
                                            this.localCorrelation_display=param;
                                    

                               }
                            

                        /**
                        * field for Correlation_id
                        */

                        
                                    protected java.lang.String localCorrelation_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelation_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelation_id(){
                               return localCorrelation_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Correlation_id
                               */
                               public void setCorrelation_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCorrelation_idTracker = true;
                                       } else {
                                          localCorrelation_idTracker = false;
                                              
                                       }
                                   
                                            this.localCorrelation_id=param;
                                    

                               }
                            

                        /**
                        * field for Delivery_plan
                        */

                        
                                    protected java.lang.String localDelivery_plan ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelivery_planTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelivery_plan(){
                               return localDelivery_plan;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Delivery_plan
                               */
                               public void setDelivery_plan(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDelivery_planTracker = true;
                                       } else {
                                          localDelivery_planTracker = false;
                                              
                                       }
                                   
                                            this.localDelivery_plan=param;
                                    

                               }
                            

                        /**
                        * field for Delivery_task
                        */

                        
                                    protected java.lang.String localDelivery_task ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelivery_taskTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelivery_task(){
                               return localDelivery_task;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Delivery_task
                               */
                               public void setDelivery_task(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDelivery_taskTracker = true;
                                       } else {
                                          localDelivery_taskTracker = false;
                                              
                                       }
                                   
                                            this.localDelivery_task=param;
                                    

                               }
                            

                        /**
                        * field for Description
                        */

                        
                                    protected java.lang.String localDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescriptionTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDescription(){
                               return localDescription;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Description
                               */
                               public void setDescription(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDescriptionTracker = true;
                                       } else {
                                          localDescriptionTracker = false;
                                              
                                       }
                                   
                                            this.localDescription=param;
                                    

                               }
                            

                        /**
                        * field for Due_date
                        */

                        
                                    protected java.lang.String localDue_date ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDue_dateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDue_date(){
                               return localDue_date;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Due_date
                               */
                               public void setDue_date(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDue_dateTracker = true;
                                       } else {
                                          localDue_dateTracker = false;
                                              
                                       }
                                   
                                            this.localDue_date=param;
                                    

                               }
                            

                        /**
                        * field for Escalation
                        */

                        
                                    protected java.math.BigInteger localEscalation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEscalationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getEscalation(){
                               return localEscalation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Escalation
                               */
                               public void setEscalation(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localEscalationTracker = true;
                                       } else {
                                          localEscalationTracker = false;
                                              
                                       }
                                   
                                            this.localEscalation=param;
                                    

                               }
                            

                        /**
                        * field for Expected_start
                        */

                        
                                    protected java.lang.String localExpected_start ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpected_startTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExpected_start(){
                               return localExpected_start;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Expected_start
                               */
                               public void setExpected_start(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localExpected_startTracker = true;
                                       } else {
                                          localExpected_startTracker = false;
                                              
                                       }
                                   
                                            this.localExpected_start=param;
                                    

                               }
                            

                        /**
                        * field for Follow_up
                        */

                        
                                    protected java.lang.String localFollow_up ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFollow_upTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFollow_up(){
                               return localFollow_up;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Follow_up
                               */
                               public void setFollow_up(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFollow_upTracker = true;
                                       } else {
                                          localFollow_upTracker = false;
                                              
                                       }
                                   
                                            this.localFollow_up=param;
                                    

                               }
                            

                        /**
                        * field for Group_list
                        */

                        
                                    protected java.lang.String localGroup_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGroup_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGroup_list(){
                               return localGroup_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Group_list
                               */
                               public void setGroup_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localGroup_listTracker = true;
                                       } else {
                                          localGroup_listTracker = false;
                                              
                                       }
                                   
                                            this.localGroup_list=param;
                                    

                               }
                            

                        /**
                        * field for Impact
                        */

                        
                                    protected java.math.BigInteger localImpact ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImpactTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getImpact(){
                               return localImpact;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Impact
                               */
                               public void setImpact(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localImpactTracker = true;
                                       } else {
                                          localImpactTracker = false;
                                              
                                       }
                                   
                                            this.localImpact=param;
                                    

                               }
                            

                        /**
                        * field for Incident_state
                        */

                        
                                    protected java.math.BigInteger localIncident_state ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIncident_stateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getIncident_state(){
                               return localIncident_state;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Incident_state
                               */
                               public void setIncident_state(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localIncident_stateTracker = true;
                                       } else {
                                          localIncident_stateTracker = false;
                                              
                                       }
                                   
                                            this.localIncident_state=param;
                                    

                               }
                            

                        /**
                        * field for Knowledge
                        */

                        
                                    protected boolean localKnowledge ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localKnowledgeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getKnowledge(){
                               return localKnowledge;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Knowledge
                               */
                               public void setKnowledge(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localKnowledgeTracker = false;
                                              
                                       } else {
                                          localKnowledgeTracker = true;
                                       }
                                   
                                            this.localKnowledge=param;
                                    

                               }
                            

                        /**
                        * field for Location
                        */

                        
                                    protected java.lang.String localLocation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLocationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLocation(){
                               return localLocation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Location
                               */
                               public void setLocation(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localLocationTracker = true;
                                       } else {
                                          localLocationTracker = false;
                                              
                                       }
                                   
                                            this.localLocation=param;
                                    

                               }
                            

                        /**
                        * field for Made_sla
                        */

                        
                                    protected boolean localMade_sla ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMade_slaTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getMade_sla(){
                               return localMade_sla;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Made_sla
                               */
                               public void setMade_sla(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localMade_slaTracker = false;
                                              
                                       } else {
                                          localMade_slaTracker = true;
                                       }
                                   
                                            this.localMade_sla=param;
                                    

                               }
                            

                        /**
                        * field for Notify
                        */

                        
                                    protected java.math.BigInteger localNotify ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNotifyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getNotify(){
                               return localNotify;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Notify
                               */
                               public void setNotify(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNotifyTracker = true;
                                       } else {
                                          localNotifyTracker = false;
                                              
                                       }
                                   
                                            this.localNotify=param;
                                    

                               }
                            

                        /**
                        * field for Number
                        */

                        
                                    protected java.lang.String localNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumberTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumber(){
                               return localNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Number
                               */
                               public void setNumber(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNumberTracker = true;
                                       } else {
                                          localNumberTracker = false;
                                              
                                       }
                                   
                                            this.localNumber=param;
                                    

                               }
                            

                        /**
                        * field for Opened_at
                        */

                        
                                    protected java.lang.String localOpened_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpened_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpened_at(){
                               return localOpened_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Opened_at
                               */
                               public void setOpened_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOpened_atTracker = true;
                                       } else {
                                          localOpened_atTracker = false;
                                              
                                       }
                                   
                                            this.localOpened_at=param;
                                    

                               }
                            

                        /**
                        * field for Opened_by
                        */

                        
                                    protected java.lang.String localOpened_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpened_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpened_by(){
                               return localOpened_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Opened_by
                               */
                               public void setOpened_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOpened_byTracker = true;
                                       } else {
                                          localOpened_byTracker = false;
                                              
                                       }
                                   
                                            this.localOpened_by=param;
                                    

                               }
                            

                        /**
                        * field for Order
                        */

                        
                                    protected java.math.BigInteger localOrder ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOrderTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getOrder(){
                               return localOrder;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Order
                               */
                               public void setOrder(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOrderTracker = true;
                                       } else {
                                          localOrderTracker = false;
                                              
                                       }
                                   
                                            this.localOrder=param;
                                    

                               }
                            

                        /**
                        * field for Parent
                        */

                        
                                    protected java.lang.String localParent ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localParentTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getParent(){
                               return localParent;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Parent
                               */
                               public void setParent(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localParentTracker = true;
                                       } else {
                                          localParentTracker = false;
                                              
                                       }
                                   
                                            this.localParent=param;
                                    

                               }
                            

                        /**
                        * field for Parent_incident
                        */

                        
                                    protected java.lang.String localParent_incident ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localParent_incidentTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getParent_incident(){
                               return localParent_incident;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Parent_incident
                               */
                               public void setParent_incident(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localParent_incidentTracker = true;
                                       } else {
                                          localParent_incidentTracker = false;
                                              
                                       }
                                   
                                            this.localParent_incident=param;
                                    

                               }
                            

                        /**
                        * field for Priority
                        */

                        
                                    protected java.math.BigInteger localPriority ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPriorityTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getPriority(){
                               return localPriority;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Priority
                               */
                               public void setPriority(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localPriorityTracker = true;
                                       } else {
                                          localPriorityTracker = false;
                                              
                                       }
                                   
                                            this.localPriority=param;
                                    

                               }
                            

                        /**
                        * field for Problem_id
                        */

                        
                                    protected java.lang.String localProblem_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProblem_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProblem_id(){
                               return localProblem_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Problem_id
                               */
                               public void setProblem_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localProblem_idTracker = true;
                                       } else {
                                          localProblem_idTracker = false;
                                              
                                       }
                                   
                                            this.localProblem_id=param;
                                    

                               }
                            

                        /**
                        * field for Reassignment_count
                        */

                        
                                    protected java.math.BigInteger localReassignment_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReassignment_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getReassignment_count(){
                               return localReassignment_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reassignment_count
                               */
                               public void setReassignment_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReassignment_countTracker = true;
                                       } else {
                                          localReassignment_countTracker = false;
                                              
                                       }
                                   
                                            this.localReassignment_count=param;
                                    

                               }
                            

                        /**
                        * field for Reopen_count
                        */

                        
                                    protected java.math.BigInteger localReopen_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReopen_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getReopen_count(){
                               return localReopen_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reopen_count
                               */
                               public void setReopen_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReopen_countTracker = true;
                                       } else {
                                          localReopen_countTracker = false;
                                              
                                       }
                                   
                                            this.localReopen_count=param;
                                    

                               }
                            

                        /**
                        * field for Resolved_at
                        */

                        
                                    protected java.lang.String localResolved_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResolved_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResolved_at(){
                               return localResolved_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Resolved_at
                               */
                               public void setResolved_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localResolved_atTracker = true;
                                       } else {
                                          localResolved_atTracker = false;
                                              
                                       }
                                   
                                            this.localResolved_at=param;
                                    

                               }
                            

                        /**
                        * field for Resolved_by
                        */

                        
                                    protected java.lang.String localResolved_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResolved_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResolved_by(){
                               return localResolved_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Resolved_by
                               */
                               public void setResolved_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localResolved_byTracker = true;
                                       } else {
                                          localResolved_byTracker = false;
                                              
                                       }
                                   
                                            this.localResolved_by=param;
                                    

                               }
                            

                        /**
                        * field for Rfc
                        */

                        
                                    protected java.lang.String localRfc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRfcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRfc(){
                               return localRfc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Rfc
                               */
                               public void setRfc(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localRfcTracker = true;
                                       } else {
                                          localRfcTracker = false;
                                              
                                       }
                                   
                                            this.localRfc=param;
                                    

                               }
                            

                        /**
                        * field for Severity
                        */

                        
                                    protected java.math.BigInteger localSeverity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSeverityTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getSeverity(){
                               return localSeverity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Severity
                               */
                               public void setSeverity(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSeverityTracker = true;
                                       } else {
                                          localSeverityTracker = false;
                                              
                                       }
                                   
                                            this.localSeverity=param;
                                    

                               }
                            

                        /**
                        * field for Short_description
                        */

                        
                                    protected java.lang.String localShort_description ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShort_descriptionTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShort_description(){
                               return localShort_description;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Short_description
                               */
                               public void setShort_description(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localShort_descriptionTracker = true;
                                       } else {
                                          localShort_descriptionTracker = false;
                                              
                                       }
                                   
                                            this.localShort_description=param;
                                    

                               }
                            

                        /**
                        * field for Skills
                        */

                        
                                    protected java.lang.String localSkills ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSkillsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSkills(){
                               return localSkills;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Skills
                               */
                               public void setSkills(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSkillsTracker = true;
                                       } else {
                                          localSkillsTracker = false;
                                              
                                       }
                                   
                                            this.localSkills=param;
                                    

                               }
                            

                        /**
                        * field for Sla_due
                        */

                        
                                    protected java.lang.String localSla_due ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSla_dueTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSla_due(){
                               return localSla_due;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sla_due
                               */
                               public void setSla_due(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSla_dueTracker = true;
                                       } else {
                                          localSla_dueTracker = false;
                                              
                                       }
                                   
                                            this.localSla_due=param;
                                    

                               }
                            

                        /**
                        * field for State
                        */

                        
                                    protected java.math.BigInteger localState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getState(){
                               return localState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param State
                               */
                               public void setState(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localStateTracker = true;
                                       } else {
                                          localStateTracker = false;
                                              
                                       }
                                   
                                            this.localState=param;
                                    

                               }
                            

                        /**
                        * field for Subcategory
                        */

                        
                                    protected java.lang.String localSubcategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSubcategoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSubcategory(){
                               return localSubcategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Subcategory
                               */
                               public void setSubcategory(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSubcategoryTracker = true;
                                       } else {
                                          localSubcategoryTracker = false;
                                              
                                       }
                                   
                                            this.localSubcategory=param;
                                    

                               }
                            

                        /**
                        * field for Sys_class_name
                        */

                        
                                    protected java.lang.String localSys_class_name ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_class_nameTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_class_name(){
                               return localSys_class_name;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_class_name
                               */
                               public void setSys_class_name(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_class_nameTracker = true;
                                       } else {
                                          localSys_class_nameTracker = false;
                                              
                                       }
                                   
                                            this.localSys_class_name=param;
                                    

                               }
                            

                        /**
                        * field for Sys_created_by
                        */

                        
                                    protected java.lang.String localSys_created_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_created_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_created_by(){
                               return localSys_created_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_created_by
                               */
                               public void setSys_created_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_created_byTracker = true;
                                       } else {
                                          localSys_created_byTracker = false;
                                              
                                       }
                                   
                                            this.localSys_created_by=param;
                                    

                               }
                            

                        /**
                        * field for Sys_created_on
                        */

                        
                                    protected java.lang.String localSys_created_on ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_created_onTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_created_on(){
                               return localSys_created_on;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_created_on
                               */
                               public void setSys_created_on(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_created_onTracker = true;
                                       } else {
                                          localSys_created_onTracker = false;
                                              
                                       }
                                   
                                            this.localSys_created_on=param;
                                    

                               }
                            

                        /**
                        * field for Sys_domain
                        */

                        
                                    protected java.lang.String localSys_domain ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_domainTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_domain(){
                               return localSys_domain;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_domain
                               */
                               public void setSys_domain(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_domainTracker = true;
                                       } else {
                                          localSys_domainTracker = false;
                                              
                                       }
                                   
                                            this.localSys_domain=param;
                                    

                               }
                            

                        /**
                        * field for Sys_id
                        */

                        
                                    protected java.lang.String localSys_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_id(){
                               return localSys_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_id
                               */
                               public void setSys_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_idTracker = true;
                                       } else {
                                          localSys_idTracker = false;
                                              
                                       }
                                   
                                            this.localSys_id=param;
                                    

                               }
                            

                        /**
                        * field for Sys_mod_count
                        */

                        
                                    protected java.math.BigInteger localSys_mod_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_mod_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getSys_mod_count(){
                               return localSys_mod_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_mod_count
                               */
                               public void setSys_mod_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_mod_countTracker = true;
                                       } else {
                                          localSys_mod_countTracker = false;
                                              
                                       }
                                   
                                            this.localSys_mod_count=param;
                                    

                               }
                            

                        /**
                        * field for Sys_tags
                        */

                        
                                    protected java.lang.String localSys_tags ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_tagsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_tags(){
                               return localSys_tags;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_tags
                               */
                               public void setSys_tags(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_tagsTracker = true;
                                       } else {
                                          localSys_tagsTracker = false;
                                              
                                       }
                                   
                                            this.localSys_tags=param;
                                    

                               }
                            

                        /**
                        * field for Sys_updated_by
                        */

                        
                                    protected java.lang.String localSys_updated_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_updated_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_updated_by(){
                               return localSys_updated_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_updated_by
                               */
                               public void setSys_updated_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_updated_byTracker = true;
                                       } else {
                                          localSys_updated_byTracker = false;
                                              
                                       }
                                   
                                            this.localSys_updated_by=param;
                                    

                               }
                            

                        /**
                        * field for Sys_updated_on
                        */

                        
                                    protected java.lang.String localSys_updated_on ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_updated_onTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_updated_on(){
                               return localSys_updated_on;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_updated_on
                               */
                               public void setSys_updated_on(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_updated_onTracker = true;
                                       } else {
                                          localSys_updated_onTracker = false;
                                              
                                       }
                                   
                                            this.localSys_updated_on=param;
                                    

                               }
                            

                        /**
                        * field for Time_worked
                        */

                        
                                    protected java.lang.String localTime_worked ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTime_workedTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTime_worked(){
                               return localTime_worked;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Time_worked
                               */
                               public void setTime_worked(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTime_workedTracker = true;
                                       } else {
                                          localTime_workedTracker = false;
                                              
                                       }
                                   
                                            this.localTime_worked=param;
                                    

                               }
                            

                        /**
                        * field for U_actual_elapsed_time
                        */

                        
                                    protected java.math.BigInteger localU_actual_elapsed_time ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localU_actual_elapsed_timeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getU_actual_elapsed_time(){
                               return localU_actual_elapsed_time;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param U_actual_elapsed_time
                               */
                               public void setU_actual_elapsed_time(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localU_actual_elapsed_timeTracker = true;
                                       } else {
                                          localU_actual_elapsed_timeTracker = false;
                                              
                                       }
                                   
                                            this.localU_actual_elapsed_time=param;
                                    

                               }
                            

                        /**
                        * field for U_aging_category
                        */

                        
                                    protected java.lang.String localU_aging_category ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localU_aging_categoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getU_aging_category(){
                               return localU_aging_category;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param U_aging_category
                               */
                               public void setU_aging_category(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localU_aging_categoryTracker = true;
                                       } else {
                                          localU_aging_categoryTracker = false;
                                              
                                       }
                                   
                                            this.localU_aging_category=param;
                                    

                               }
                            

                        /**
                        * field for Upon_approval
                        */

                        
                                    protected java.lang.String localUpon_approval ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUpon_approvalTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUpon_approval(){
                               return localUpon_approval;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Upon_approval
                               */
                               public void setUpon_approval(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUpon_approvalTracker = true;
                                       } else {
                                          localUpon_approvalTracker = false;
                                              
                                       }
                                   
                                            this.localUpon_approval=param;
                                    

                               }
                            

                        /**
                        * field for Upon_reject
                        */

                        
                                    protected java.lang.String localUpon_reject ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUpon_rejectTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUpon_reject(){
                               return localUpon_reject;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Upon_reject
                               */
                               public void setUpon_reject(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUpon_rejectTracker = true;
                                       } else {
                                          localUpon_rejectTracker = false;
                                              
                                       }
                                   
                                            this.localUpon_reject=param;
                                    

                               }
                            

                        /**
                        * field for Urgency
                        */

                        
                                    protected java.math.BigInteger localUrgency ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUrgencyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getUrgency(){
                               return localUrgency;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Urgency
                               */
                               public void setUrgency(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUrgencyTracker = true;
                                       } else {
                                          localUrgencyTracker = false;
                                              
                                       }
                                   
                                            this.localUrgency=param;
                                    

                               }
                            

                        /**
                        * field for User_input
                        */

                        
                                    protected java.lang.String localUser_input ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUser_inputTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUser_input(){
                               return localUser_input;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param User_input
                               */
                               public void setUser_input(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUser_inputTracker = true;
                                       } else {
                                          localUser_inputTracker = false;
                                              
                                       }
                                   
                                            this.localUser_input=param;
                                    

                               }
                            

                        /**
                        * field for Watch_list
                        */

                        
                                    protected java.lang.String localWatch_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWatch_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWatch_list(){
                               return localWatch_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Watch_list
                               */
                               public void setWatch_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWatch_listTracker = true;
                                       } else {
                                          localWatch_listTracker = false;
                                              
                                       }
                                   
                                            this.localWatch_list=param;
                                    

                               }
                            

                        /**
                        * field for Work_end
                        */

                        
                                    protected java.lang.String localWork_end ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_endTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_end(){
                               return localWork_end;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_end
                               */
                               public void setWork_end(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_endTracker = true;
                                       } else {
                                          localWork_endTracker = false;
                                              
                                       }
                                   
                                            this.localWork_end=param;
                                    

                               }
                            

                        /**
                        * field for Work_notes_list
                        */

                        
                                    protected java.lang.String localWork_notes_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_notes_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_notes_list(){
                               return localWork_notes_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_notes_list
                               */
                               public void setWork_notes_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_notes_listTracker = true;
                                       } else {
                                          localWork_notes_listTracker = false;
                                              
                                       }
                                   
                                            this.localWork_notes_list=param;
                                    

                               }
                            

                        /**
                        * field for Work_start
                        */

                        
                                    protected java.lang.String localWork_start ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_startTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_start(){
                               return localWork_start;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_start
                               */
                               public void setWork_start(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_startTracker = true;
                                       } else {
                                          localWork_startTracker = false;
                                              
                                       }
                                   
                                            this.localWork_start=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       GetResponse.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":getResponse",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "getResponse",
                           xmlWriter);
                   }

               
                   }
                if (localActiveTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"active", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"active");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("active");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("active cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActive));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localActivity_dueTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"activity_due", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"activity_due");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("activity_due");
                                    }
                                

                                          if (localActivity_due==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("activity_due cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localActivity_due);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApprovalTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval");
                                    }
                                

                                          if (localApproval==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApproval_setTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval_set", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval_set");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval_set");
                                    }
                                

                                          if (localApproval_set==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval_set cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval_set);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAssigned_toTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"assigned_to", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"assigned_to");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("assigned_to");
                                    }
                                

                                          if (localAssigned_to==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assigned_to cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssigned_to);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAssignment_groupTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"assignment_group", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"assignment_group");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("assignment_group");
                                    }
                                

                                          if (localAssignment_group==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assignment_group cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssignment_group);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusiness_durationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"business_duration", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"business_duration");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("business_duration");
                                    }
                                

                                          if (localBusiness_duration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("business_duration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBusiness_duration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusiness_stcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"business_stc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"business_stc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("business_stc");
                                    }
                                

                                          if (localBusiness_stc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("business_stc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_stc));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalendar_durationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"calendar_duration", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"calendar_duration");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("calendar_duration");
                                    }
                                

                                          if (localCalendar_duration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("calendar_duration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCalendar_duration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalendar_stcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"calendar_stc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"calendar_stc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("calendar_stc");
                                    }
                                

                                          if (localCalendar_stc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("calendar_stc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_stc));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCaller_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"caller_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"caller_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("caller_id");
                                    }
                                

                                          if (localCaller_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("caller_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCaller_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCategoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"category", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"category");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("category");
                                    }
                                

                                          if (localCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCaused_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"caused_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"caused_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("caused_by");
                                    }
                                

                                          if (localCaused_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("caused_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCaused_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localChild_incidentsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"child_incidents", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"child_incidents");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("child_incidents");
                                    }
                                

                                          if (localChild_incidents==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("child_incidents cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChild_incidents));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClose_codeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"close_code", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"close_code");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("close_code");
                                    }
                                

                                          if (localClose_code==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("close_code cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClose_code);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClose_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"close_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"close_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("close_notes");
                                    }
                                

                                          if (localClose_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("close_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClose_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosed_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"closed_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"closed_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("closed_at");
                                    }
                                

                                          if (localClosed_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closed_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosed_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosed_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"closed_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"closed_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("closed_by");
                                    }
                                

                                          if (localClosed_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closed_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosed_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCmdb_ciTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"cmdb_ci", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"cmdb_ci");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("cmdb_ci");
                                    }
                                

                                          if (localCmdb_ci==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cmdb_ci cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCmdb_ci);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localComments_and_work_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"comments_and_work_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"comments_and_work_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("comments_and_work_notes");
                                    }
                                

                                          if (localComments_and_work_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("comments_and_work_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localComments_and_work_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"company", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"company");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("company");
                                    }
                                

                                          if (localCompany==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("company cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompany);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localContact_typeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"contact_type", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"contact_type");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("contact_type");
                                    }
                                

                                          if (localContact_type==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("contact_type cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localContact_type);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelation_displayTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"correlation_display", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"correlation_display");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("correlation_display");
                                    }
                                

                                          if (localCorrelation_display==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlation_display cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelation_display);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelation_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"correlation_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"correlation_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("correlation_id");
                                    }
                                

                                          if (localCorrelation_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlation_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelation_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelivery_planTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"delivery_plan", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"delivery_plan");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("delivery_plan");
                                    }
                                

                                          if (localDelivery_plan==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delivery_plan cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelivery_plan);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelivery_taskTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"delivery_task", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"delivery_task");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("delivery_task");
                                    }
                                

                                          if (localDelivery_task==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delivery_task cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelivery_task);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDescriptionTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"description", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"description");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("description");
                                    }
                                

                                          if (localDescription==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDescription);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDue_dateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"due_date", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"due_date");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("due_date");
                                    }
                                

                                          if (localDue_date==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDue_date);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEscalationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"escalation", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"escalation");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("escalation");
                                    }
                                

                                          if (localEscalation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("escalation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEscalation));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExpected_startTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"expected_start", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"expected_start");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("expected_start");
                                    }
                                

                                          if (localExpected_start==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("expected_start cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExpected_start);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFollow_upTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"follow_up", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"follow_up");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("follow_up");
                                    }
                                

                                          if (localFollow_up==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("follow_up cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFollow_up);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGroup_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"group_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"group_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("group_list");
                                    }
                                

                                          if (localGroup_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("group_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGroup_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localImpactTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"impact", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"impact");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("impact");
                                    }
                                

                                          if (localImpact==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("impact cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpact));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIncident_stateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"incident_state", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"incident_state");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("incident_state");
                                    }
                                

                                          if (localIncident_state==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("incident_state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIncident_state));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localKnowledgeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"knowledge", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"knowledge");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("knowledge");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("knowledge cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKnowledge));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLocationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"location", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"location");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("location");
                                    }
                                

                                          if (localLocation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("location cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLocation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMade_slaTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"made_sla", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"made_sla");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("made_sla");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("made_sla cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMade_sla));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNotifyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"notify", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"notify");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("notify");
                                    }
                                

                                          if (localNotify==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("notify cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNotify));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNumberTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"number", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"number");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("number");
                                    }
                                

                                          if (localNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpened_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"opened_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"opened_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("opened_at");
                                    }
                                

                                          if (localOpened_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("opened_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpened_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpened_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"opened_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"opened_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("opened_by");
                                    }
                                

                                          if (localOpened_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("opened_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpened_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOrderTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"order", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"order");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("order");
                                    }
                                

                                          if (localOrder==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("order cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrder));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localParentTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"parent", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"parent");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("parent");
                                    }
                                

                                          if (localParent==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("parent cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localParent);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localParent_incidentTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"parent_incident", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"parent_incident");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("parent_incident");
                                    }
                                

                                          if (localParent_incident==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("parent_incident cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localParent_incident);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPriorityTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"priority", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"priority");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("priority");
                                    }
                                

                                          if (localPriority==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("priority cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPriority));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProblem_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"problem_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"problem_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("problem_id");
                                    }
                                

                                          if (localProblem_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("problem_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProblem_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReassignment_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"reassignment_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"reassignment_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("reassignment_count");
                                    }
                                

                                          if (localReassignment_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reassignment_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReassignment_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReopen_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"reopen_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"reopen_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("reopen_count");
                                    }
                                

                                          if (localReopen_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reopen_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReopen_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResolved_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"resolved_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"resolved_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("resolved_at");
                                    }
                                

                                          if (localResolved_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resolved_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResolved_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResolved_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"resolved_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"resolved_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("resolved_by");
                                    }
                                

                                          if (localResolved_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resolved_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResolved_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRfcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"rfc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"rfc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("rfc");
                                    }
                                

                                          if (localRfc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("rfc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRfc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSeverityTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"severity", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"severity");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("severity");
                                    }
                                

                                          if (localSeverity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("severity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeverity));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShort_descriptionTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"short_description", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"short_description");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("short_description");
                                    }
                                

                                          if (localShort_description==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("short_description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShort_description);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSkillsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"skills", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"skills");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("skills");
                                    }
                                

                                          if (localSkills==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("skills cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSkills);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSla_dueTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sla_due", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sla_due");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sla_due");
                                    }
                                

                                          if (localSla_due==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sla_due cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSla_due);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"state", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"state");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("state");
                                    }
                                

                                          if (localState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSubcategoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"subcategory", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"subcategory");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("subcategory");
                                    }
                                

                                          if (localSubcategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("subcategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSubcategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_class_nameTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_class_name", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_class_name");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_class_name");
                                    }
                                

                                          if (localSys_class_name==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_class_name cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_class_name);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_created_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_created_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_created_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_created_by");
                                    }
                                

                                          if (localSys_created_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_created_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_created_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_created_onTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_created_on", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_created_on");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_created_on");
                                    }
                                

                                          if (localSys_created_on==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_created_on cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_created_on);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_domainTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_domain", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_domain");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_domain");
                                    }
                                

                                          if (localSys_domain==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_domain cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_domain);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_id");
                                    }
                                

                                          if (localSys_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_mod_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_mod_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_mod_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_mod_count");
                                    }
                                

                                          if (localSys_mod_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_mod_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_mod_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_tagsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_tags", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_tags");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_tags");
                                    }
                                

                                          if (localSys_tags==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_tags cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_tags);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_updated_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_updated_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_updated_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_updated_by");
                                    }
                                

                                          if (localSys_updated_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_updated_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_updated_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_updated_onTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_updated_on", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_updated_on");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_updated_on");
                                    }
                                

                                          if (localSys_updated_on==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_updated_on cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_updated_on);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTime_workedTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"time_worked", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"time_worked");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("time_worked");
                                    }
                                

                                          if (localTime_worked==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("time_worked cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTime_worked);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localU_actual_elapsed_timeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"u_actual_elapsed_time", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"u_actual_elapsed_time");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("u_actual_elapsed_time");
                                    }
                                

                                          if (localU_actual_elapsed_time==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("u_actual_elapsed_time cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_actual_elapsed_time));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localU_aging_categoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"u_aging_category", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"u_aging_category");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("u_aging_category");
                                    }
                                

                                          if (localU_aging_category==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("u_aging_category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localU_aging_category);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUpon_approvalTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"upon_approval", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"upon_approval");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("upon_approval");
                                    }
                                

                                          if (localUpon_approval==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("upon_approval cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUpon_approval);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUpon_rejectTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"upon_reject", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"upon_reject");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("upon_reject");
                                    }
                                

                                          if (localUpon_reject==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("upon_reject cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUpon_reject);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUrgencyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"urgency", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"urgency");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("urgency");
                                    }
                                

                                          if (localUrgency==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("urgency cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrgency));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUser_inputTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"user_input", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"user_input");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("user_input");
                                    }
                                

                                          if (localUser_input==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("user_input cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUser_input);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWatch_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"watch_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"watch_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("watch_list");
                                    }
                                

                                          if (localWatch_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("watch_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWatch_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_endTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_end", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_end");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_end");
                                    }
                                

                                          if (localWork_end==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_end cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_end);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_notes_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_notes_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_notes_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_notes_list");
                                    }
                                

                                          if (localWork_notes_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_notes_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_notes_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_startTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_start", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_start");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_start");
                                    }
                                

                                          if (localWork_start==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_start cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_start);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localActiveTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "active"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActive));
                            } if (localActivity_dueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "activity_due"));
                                 
                                        if (localActivity_due != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActivity_due));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("activity_due cannot be null!!");
                                        }
                                    } if (localApprovalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval"));
                                 
                                        if (localApproval != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval cannot be null!!");
                                        }
                                    } if (localApproval_setTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval_set"));
                                 
                                        if (localApproval_set != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval_set));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval_set cannot be null!!");
                                        }
                                    } if (localAssigned_toTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "assigned_to"));
                                 
                                        if (localAssigned_to != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssigned_to));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assigned_to cannot be null!!");
                                        }
                                    } if (localAssignment_groupTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "assignment_group"));
                                 
                                        if (localAssignment_group != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssignment_group));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assignment_group cannot be null!!");
                                        }
                                    } if (localBusiness_durationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "business_duration"));
                                 
                                        if (localBusiness_duration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_duration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("business_duration cannot be null!!");
                                        }
                                    } if (localBusiness_stcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "business_stc"));
                                 
                                        if (localBusiness_stc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_stc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("business_stc cannot be null!!");
                                        }
                                    } if (localCalendar_durationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "calendar_duration"));
                                 
                                        if (localCalendar_duration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_duration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("calendar_duration cannot be null!!");
                                        }
                                    } if (localCalendar_stcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "calendar_stc"));
                                 
                                        if (localCalendar_stc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_stc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("calendar_stc cannot be null!!");
                                        }
                                    } if (localCaller_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "caller_id"));
                                 
                                        if (localCaller_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCaller_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("caller_id cannot be null!!");
                                        }
                                    } if (localCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "category"));
                                 
                                        if (localCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                        }
                                    } if (localCaused_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "caused_by"));
                                 
                                        if (localCaused_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCaused_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("caused_by cannot be null!!");
                                        }
                                    } if (localChild_incidentsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "child_incidents"));
                                 
                                        if (localChild_incidents != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChild_incidents));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("child_incidents cannot be null!!");
                                        }
                                    } if (localClose_codeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "close_code"));
                                 
                                        if (localClose_code != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClose_code));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("close_code cannot be null!!");
                                        }
                                    } if (localClose_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "close_notes"));
                                 
                                        if (localClose_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClose_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("close_notes cannot be null!!");
                                        }
                                    } if (localClosed_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "closed_at"));
                                 
                                        if (localClosed_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosed_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closed_at cannot be null!!");
                                        }
                                    } if (localClosed_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "closed_by"));
                                 
                                        if (localClosed_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosed_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closed_by cannot be null!!");
                                        }
                                    } if (localCmdb_ciTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "cmdb_ci"));
                                 
                                        if (localCmdb_ci != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCmdb_ci));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cmdb_ci cannot be null!!");
                                        }
                                    } if (localComments_and_work_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "comments_and_work_notes"));
                                 
                                        if (localComments_and_work_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComments_and_work_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("comments_and_work_notes cannot be null!!");
                                        }
                                    } if (localCompanyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "company"));
                                 
                                        if (localCompany != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompany));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("company cannot be null!!");
                                        }
                                    } if (localContact_typeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "contact_type"));
                                 
                                        if (localContact_type != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localContact_type));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("contact_type cannot be null!!");
                                        }
                                    } if (localCorrelation_displayTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "correlation_display"));
                                 
                                        if (localCorrelation_display != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelation_display));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlation_display cannot be null!!");
                                        }
                                    } if (localCorrelation_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "correlation_id"));
                                 
                                        if (localCorrelation_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelation_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlation_id cannot be null!!");
                                        }
                                    } if (localDelivery_planTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "delivery_plan"));
                                 
                                        if (localDelivery_plan != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelivery_plan));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delivery_plan cannot be null!!");
                                        }
                                    } if (localDelivery_taskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "delivery_task"));
                                 
                                        if (localDelivery_task != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelivery_task));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delivery_task cannot be null!!");
                                        }
                                    } if (localDescriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "description"));
                                 
                                        if (localDescription != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescription));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                        }
                                    } if (localDue_dateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "due_date"));
                                 
                                        if (localDue_date != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDue_date));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                        }
                                    } if (localEscalationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "escalation"));
                                 
                                        if (localEscalation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEscalation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("escalation cannot be null!!");
                                        }
                                    } if (localExpected_startTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "expected_start"));
                                 
                                        if (localExpected_start != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExpected_start));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("expected_start cannot be null!!");
                                        }
                                    } if (localFollow_upTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "follow_up"));
                                 
                                        if (localFollow_up != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFollow_up));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("follow_up cannot be null!!");
                                        }
                                    } if (localGroup_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "group_list"));
                                 
                                        if (localGroup_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGroup_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("group_list cannot be null!!");
                                        }
                                    } if (localImpactTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "impact"));
                                 
                                        if (localImpact != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpact));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("impact cannot be null!!");
                                        }
                                    } if (localIncident_stateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "incident_state"));
                                 
                                        if (localIncident_state != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIncident_state));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("incident_state cannot be null!!");
                                        }
                                    } if (localKnowledgeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "knowledge"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKnowledge));
                            } if (localLocationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "location"));
                                 
                                        if (localLocation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLocation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("location cannot be null!!");
                                        }
                                    } if (localMade_slaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "made_sla"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMade_sla));
                            } if (localNotifyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "notify"));
                                 
                                        if (localNotify != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNotify));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("notify cannot be null!!");
                                        }
                                    } if (localNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "number"));
                                 
                                        if (localNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                        }
                                    } if (localOpened_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "opened_at"));
                                 
                                        if (localOpened_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpened_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("opened_at cannot be null!!");
                                        }
                                    } if (localOpened_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "opened_by"));
                                 
                                        if (localOpened_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpened_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("opened_by cannot be null!!");
                                        }
                                    } if (localOrderTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "order"));
                                 
                                        if (localOrder != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrder));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("order cannot be null!!");
                                        }
                                    } if (localParentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "parent"));
                                 
                                        if (localParent != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParent));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("parent cannot be null!!");
                                        }
                                    } if (localParent_incidentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "parent_incident"));
                                 
                                        if (localParent_incident != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParent_incident));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("parent_incident cannot be null!!");
                                        }
                                    } if (localPriorityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "priority"));
                                 
                                        if (localPriority != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPriority));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("priority cannot be null!!");
                                        }
                                    } if (localProblem_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "problem_id"));
                                 
                                        if (localProblem_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProblem_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("problem_id cannot be null!!");
                                        }
                                    } if (localReassignment_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "reassignment_count"));
                                 
                                        if (localReassignment_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReassignment_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reassignment_count cannot be null!!");
                                        }
                                    } if (localReopen_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "reopen_count"));
                                 
                                        if (localReopen_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReopen_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reopen_count cannot be null!!");
                                        }
                                    } if (localResolved_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "resolved_at"));
                                 
                                        if (localResolved_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResolved_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resolved_at cannot be null!!");
                                        }
                                    } if (localResolved_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "resolved_by"));
                                 
                                        if (localResolved_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResolved_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resolved_by cannot be null!!");
                                        }
                                    } if (localRfcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "rfc"));
                                 
                                        if (localRfc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRfc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("rfc cannot be null!!");
                                        }
                                    } if (localSeverityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "severity"));
                                 
                                        if (localSeverity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeverity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("severity cannot be null!!");
                                        }
                                    } if (localShort_descriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "short_description"));
                                 
                                        if (localShort_description != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShort_description));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("short_description cannot be null!!");
                                        }
                                    } if (localSkillsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "skills"));
                                 
                                        if (localSkills != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSkills));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("skills cannot be null!!");
                                        }
                                    } if (localSla_dueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sla_due"));
                                 
                                        if (localSla_due != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSla_due));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sla_due cannot be null!!");
                                        }
                                    } if (localStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "state"));
                                 
                                        if (localState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                        }
                                    } if (localSubcategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "subcategory"));
                                 
                                        if (localSubcategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSubcategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("subcategory cannot be null!!");
                                        }
                                    } if (localSys_class_nameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_class_name"));
                                 
                                        if (localSys_class_name != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_class_name));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_class_name cannot be null!!");
                                        }
                                    } if (localSys_created_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_created_by"));
                                 
                                        if (localSys_created_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_created_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_created_by cannot be null!!");
                                        }
                                    } if (localSys_created_onTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_created_on"));
                                 
                                        if (localSys_created_on != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_created_on));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_created_on cannot be null!!");
                                        }
                                    } if (localSys_domainTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_domain"));
                                 
                                        if (localSys_domain != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_domain));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_domain cannot be null!!");
                                        }
                                    } if (localSys_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_id"));
                                 
                                        if (localSys_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                        }
                                    } if (localSys_mod_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_mod_count"));
                                 
                                        if (localSys_mod_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_mod_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_mod_count cannot be null!!");
                                        }
                                    } if (localSys_tagsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_tags"));
                                 
                                        if (localSys_tags != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_tags));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_tags cannot be null!!");
                                        }
                                    } if (localSys_updated_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_updated_by"));
                                 
                                        if (localSys_updated_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_updated_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_updated_by cannot be null!!");
                                        }
                                    } if (localSys_updated_onTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_updated_on"));
                                 
                                        if (localSys_updated_on != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_updated_on));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_updated_on cannot be null!!");
                                        }
                                    } if (localTime_workedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "time_worked"));
                                 
                                        if (localTime_worked != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTime_worked));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("time_worked cannot be null!!");
                                        }
                                    } if (localU_actual_elapsed_timeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "u_actual_elapsed_time"));
                                 
                                        if (localU_actual_elapsed_time != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_actual_elapsed_time));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("u_actual_elapsed_time cannot be null!!");
                                        }
                                    } if (localU_aging_categoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "u_aging_category"));
                                 
                                        if (localU_aging_category != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_aging_category));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("u_aging_category cannot be null!!");
                                        }
                                    } if (localUpon_approvalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "upon_approval"));
                                 
                                        if (localUpon_approval != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUpon_approval));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("upon_approval cannot be null!!");
                                        }
                                    } if (localUpon_rejectTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "upon_reject"));
                                 
                                        if (localUpon_reject != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUpon_reject));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("upon_reject cannot be null!!");
                                        }
                                    } if (localUrgencyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "urgency"));
                                 
                                        if (localUrgency != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrgency));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("urgency cannot be null!!");
                                        }
                                    } if (localUser_inputTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "user_input"));
                                 
                                        if (localUser_input != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUser_input));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("user_input cannot be null!!");
                                        }
                                    } if (localWatch_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "watch_list"));
                                 
                                        if (localWatch_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWatch_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("watch_list cannot be null!!");
                                        }
                                    } if (localWork_endTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_end"));
                                 
                                        if (localWork_end != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_end));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_end cannot be null!!");
                                        }
                                    } if (localWork_notes_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_notes_list"));
                                 
                                        if (localWork_notes_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_notes_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_notes_list cannot be null!!");
                                        }
                                    } if (localWork_startTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_start"));
                                 
                                        if (localWork_start != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_start));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_start cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static GetResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            GetResponse object =
                new GetResponse();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"getResponse".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (GetResponse)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","active").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActive(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","activity_due").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActivity_due(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval_set").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval_set(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","assigned_to").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssigned_to(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","assignment_group").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssignment_group(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","business_duration").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusiness_duration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","business_stc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusiness_stc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","calendar_duration").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalendar_duration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","calendar_stc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalendar_stc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","caller_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCaller_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","category").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","caused_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCaused_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","child_incidents").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setChild_incidents(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","close_code").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClose_code(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","close_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClose_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","closed_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosed_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","closed_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosed_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","cmdb_ci").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCmdb_ci(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","comments_and_work_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setComments_and_work_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","company").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompany(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","contact_type").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setContact_type(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","correlation_display").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelation_display(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","correlation_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelation_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","delivery_plan").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelivery_plan(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","delivery_task").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelivery_task(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","description").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDescription(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","due_date").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDue_date(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","escalation").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEscalation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","expected_start").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExpected_start(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","follow_up").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFollow_up(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","group_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGroup_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","impact").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImpact(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","incident_state").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIncident_state(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","knowledge").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setKnowledge(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","location").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLocation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","made_sla").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMade_sla(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","notify").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNotify(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","number").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","opened_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpened_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","opened_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpened_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","order").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOrder(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","parent").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setParent(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","parent_incident").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setParent_incident(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","priority").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPriority(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","problem_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProblem_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","reassignment_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReassignment_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","reopen_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReopen_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","resolved_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResolved_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","resolved_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResolved_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","rfc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRfc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","severity").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSeverity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","short_description").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShort_description(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","skills").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSkills(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sla_due").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSla_due(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","state").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","subcategory").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSubcategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_class_name").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_class_name(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_created_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_created_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_created_on").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_created_on(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_domain").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_domain(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_mod_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_mod_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_tags").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_tags(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_updated_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_updated_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_updated_on").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_updated_on(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","time_worked").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTime_worked(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","u_actual_elapsed_time").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setU_actual_elapsed_time(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","u_aging_category").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setU_aging_category(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","upon_approval").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUpon_approval(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","upon_reject").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUpon_reject(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","urgency").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUrgency(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","user_input").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUser_input(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","watch_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWatch_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_end").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_end(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_notes_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_notes_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_start").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_start(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class GetRecordsResponse
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.service-now.com/incident",
                "getRecordsResponse",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for GetRecordsResult
                        * This was an Array!
                        */

                        
                                    protected GetRecordsResult_type0[] localGetRecordsResult ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGetRecordsResultTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return GetRecordsResult_type0[]
                           */
                           public  GetRecordsResult_type0[] getGetRecordsResult(){
                               return localGetRecordsResult;
                           }

                           
                        


                               
                              /**
                               * validate the array for GetRecordsResult
                               */
                              protected void validateGetRecordsResult(GetRecordsResult_type0[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param GetRecordsResult
                              */
                              public void setGetRecordsResult(GetRecordsResult_type0[] param){
                              
                                   validateGetRecordsResult(param);

                               
                                          if (param != null){
                                             //update the setting tracker
                                             localGetRecordsResultTracker = true;
                                          } else {
                                             localGetRecordsResultTracker = false;
                                                 
                                          }
                                      
                                      this.localGetRecordsResult=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param GetRecordsResult_type0
                             */
                             public void addGetRecordsResult(GetRecordsResult_type0 param){
                                   if (localGetRecordsResult == null){
                                   localGetRecordsResult = new GetRecordsResult_type0[]{};
                                   }

                            
                                 //update the setting tracker
                                localGetRecordsResultTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localGetRecordsResult);
                               list.add(param);
                               this.localGetRecordsResult =
                             (GetRecordsResult_type0[])list.toArray(
                            new GetRecordsResult_type0[list.size()]);

                             }
                             

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       GetRecordsResponse.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":getRecordsResponse",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "getRecordsResponse",
                           xmlWriter);
                   }

               
                   }
                if (localGetRecordsResultTracker){
                                       if (localGetRecordsResult!=null){
                                            for (int i = 0;i < localGetRecordsResult.length;i++){
                                                if (localGetRecordsResult[i] != null){
                                                 localGetRecordsResult[i].serialize(new javax.xml.namespace.QName("http://www.service-now.com/incident","getRecordsResult"),
                                                           factory,xmlWriter);
                                                } else {
                                                   
                                                        // we don't have to do any thing since minOccures is zero
                                                    
                                                }

                                            }
                                     } else {
                                        
                                               throw new org.apache.axis2.databinding.ADBException("getRecordsResult cannot be null!!");
                                        
                                    }
                                 }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localGetRecordsResultTracker){
                             if (localGetRecordsResult!=null) {
                                 for (int i = 0;i < localGetRecordsResult.length;i++){

                                    if (localGetRecordsResult[i] != null){
                                         elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                          "getRecordsResult"));
                                         elementList.add(localGetRecordsResult[i]);
                                    } else {
                                        
                                                // nothing to do
                                            
                                    }

                                 }
                             } else {
                                 
                                        throw new org.apache.axis2.databinding.ADBException("getRecordsResult cannot be null!!");
                                    
                             }

                        }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static GetRecordsResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            GetRecordsResponse object =
                new GetRecordsResponse();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"getRecordsResponse".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (GetRecordsResponse)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","getRecordsResult").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(GetRecordsResult_type0.Factory.parse(reader));
                                                                
                                                        //loop until we find a start element that is not part of this array
                                                        boolean loopDone1 = false;
                                                        while(!loopDone1){
                                                            // We should be at the end element, but make sure
                                                            while (!reader.isEndElement())
                                                                reader.next();
                                                            // Step out of this element
                                                            reader.next();
                                                            // Step to next element event.
                                                            while (!reader.isStartElement() && !reader.isEndElement())
                                                                reader.next();
                                                            if (reader.isEndElement()){
                                                                //two continuous end elements means we are exiting the xml structure
                                                                loopDone1 = true;
                                                            } else {
                                                                if (new javax.xml.namespace.QName("http://www.service-now.com/incident","getRecordsResult").equals(reader.getName())){
                                                                    list1.add(GetRecordsResult_type0.Factory.parse(reader));
                                                                        
                                                                }else{
                                                                    loopDone1 = true;
                                                                }
                                                            }
                                                        }
                                                        // call the converter utility  to convert and set the array
                                                        
                                                        object.setGetRecordsResult((GetRecordsResult_type0[])
                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
                                                                GetRecordsResult_type0.class,
                                                                list1));
                                                            
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class DeleteMultiple
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.service-now.com/incident",
                "deleteMultiple",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for Active
                        */

                        
                                    protected boolean localActive ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActiveTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getActive(){
                               return localActive;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Active
                               */
                               public void setActive(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localActiveTracker = false;
                                              
                                       } else {
                                          localActiveTracker = true;
                                       }
                                   
                                            this.localActive=param;
                                    

                               }
                            

                        /**
                        * field for Activity_due
                        */

                        
                                    protected java.lang.String localActivity_due ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActivity_dueTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getActivity_due(){
                               return localActivity_due;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Activity_due
                               */
                               public void setActivity_due(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localActivity_dueTracker = true;
                                       } else {
                                          localActivity_dueTracker = false;
                                              
                                       }
                                   
                                            this.localActivity_due=param;
                                    

                               }
                            

                        /**
                        * field for Approval
                        */

                        
                                    protected java.lang.String localApproval ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApprovalTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval(){
                               return localApproval;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval
                               */
                               public void setApproval(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApprovalTracker = true;
                                       } else {
                                          localApprovalTracker = false;
                                              
                                       }
                                   
                                            this.localApproval=param;
                                    

                               }
                            

                        /**
                        * field for Approval_history
                        */

                        
                                    protected java.lang.String localApproval_history ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApproval_historyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval_history(){
                               return localApproval_history;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval_history
                               */
                               public void setApproval_history(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApproval_historyTracker = true;
                                       } else {
                                          localApproval_historyTracker = false;
                                              
                                       }
                                   
                                            this.localApproval_history=param;
                                    

                               }
                            

                        /**
                        * field for Approval_set
                        */

                        
                                    protected java.lang.String localApproval_set ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApproval_setTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval_set(){
                               return localApproval_set;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval_set
                               */
                               public void setApproval_set(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApproval_setTracker = true;
                                       } else {
                                          localApproval_setTracker = false;
                                              
                                       }
                                   
                                            this.localApproval_set=param;
                                    

                               }
                            

                        /**
                        * field for Assigned_to
                        */

                        
                                    protected java.lang.String localAssigned_to ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAssigned_toTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssigned_to(){
                               return localAssigned_to;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Assigned_to
                               */
                               public void setAssigned_to(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAssigned_toTracker = true;
                                       } else {
                                          localAssigned_toTracker = false;
                                              
                                       }
                                   
                                            this.localAssigned_to=param;
                                    

                               }
                            

                        /**
                        * field for Assignment_group
                        */

                        
                                    protected java.lang.String localAssignment_group ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAssignment_groupTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssignment_group(){
                               return localAssignment_group;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Assignment_group
                               */
                               public void setAssignment_group(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAssignment_groupTracker = true;
                                       } else {
                                          localAssignment_groupTracker = false;
                                              
                                       }
                                   
                                            this.localAssignment_group=param;
                                    

                               }
                            

                        /**
                        * field for Business_duration
                        */

                        
                                    protected java.lang.String localBusiness_duration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusiness_durationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBusiness_duration(){
                               return localBusiness_duration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Business_duration
                               */
                               public void setBusiness_duration(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBusiness_durationTracker = true;
                                       } else {
                                          localBusiness_durationTracker = false;
                                              
                                       }
                                   
                                            this.localBusiness_duration=param;
                                    

                               }
                            

                        /**
                        * field for Business_stc
                        */

                        
                                    protected java.math.BigInteger localBusiness_stc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusiness_stcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getBusiness_stc(){
                               return localBusiness_stc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Business_stc
                               */
                               public void setBusiness_stc(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBusiness_stcTracker = true;
                                       } else {
                                          localBusiness_stcTracker = false;
                                              
                                       }
                                   
                                            this.localBusiness_stc=param;
                                    

                               }
                            

                        /**
                        * field for Calendar_duration
                        */

                        
                                    protected java.lang.String localCalendar_duration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalendar_durationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCalendar_duration(){
                               return localCalendar_duration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calendar_duration
                               */
                               public void setCalendar_duration(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCalendar_durationTracker = true;
                                       } else {
                                          localCalendar_durationTracker = false;
                                              
                                       }
                                   
                                            this.localCalendar_duration=param;
                                    

                               }
                            

                        /**
                        * field for Calendar_stc
                        */

                        
                                    protected java.math.BigInteger localCalendar_stc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalendar_stcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getCalendar_stc(){
                               return localCalendar_stc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calendar_stc
                               */
                               public void setCalendar_stc(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCalendar_stcTracker = true;
                                       } else {
                                          localCalendar_stcTracker = false;
                                              
                                       }
                                   
                                            this.localCalendar_stc=param;
                                    

                               }
                            

                        /**
                        * field for Caller_id
                        */

                        
                                    protected java.lang.String localCaller_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCaller_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCaller_id(){
                               return localCaller_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Caller_id
                               */
                               public void setCaller_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCaller_idTracker = true;
                                       } else {
                                          localCaller_idTracker = false;
                                              
                                       }
                                   
                                            this.localCaller_id=param;
                                    

                               }
                            

                        /**
                        * field for Category
                        */

                        
                                    protected java.lang.String localCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCategoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCategory(){
                               return localCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Category
                               */
                               public void setCategory(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCategoryTracker = true;
                                       } else {
                                          localCategoryTracker = false;
                                              
                                       }
                                   
                                            this.localCategory=param;
                                    

                               }
                            

                        /**
                        * field for Caused_by
                        */

                        
                                    protected java.lang.String localCaused_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCaused_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCaused_by(){
                               return localCaused_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Caused_by
                               */
                               public void setCaused_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCaused_byTracker = true;
                                       } else {
                                          localCaused_byTracker = false;
                                              
                                       }
                                   
                                            this.localCaused_by=param;
                                    

                               }
                            

                        /**
                        * field for Child_incidents
                        */

                        
                                    protected java.math.BigInteger localChild_incidents ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChild_incidentsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getChild_incidents(){
                               return localChild_incidents;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Child_incidents
                               */
                               public void setChild_incidents(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localChild_incidentsTracker = true;
                                       } else {
                                          localChild_incidentsTracker = false;
                                              
                                       }
                                   
                                            this.localChild_incidents=param;
                                    

                               }
                            

                        /**
                        * field for Close_code
                        */

                        
                                    protected java.lang.String localClose_code ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClose_codeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClose_code(){
                               return localClose_code;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Close_code
                               */
                               public void setClose_code(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClose_codeTracker = true;
                                       } else {
                                          localClose_codeTracker = false;
                                              
                                       }
                                   
                                            this.localClose_code=param;
                                    

                               }
                            

                        /**
                        * field for Close_notes
                        */

                        
                                    protected java.lang.String localClose_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClose_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClose_notes(){
                               return localClose_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Close_notes
                               */
                               public void setClose_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClose_notesTracker = true;
                                       } else {
                                          localClose_notesTracker = false;
                                              
                                       }
                                   
                                            this.localClose_notes=param;
                                    

                               }
                            

                        /**
                        * field for Closed_at
                        */

                        
                                    protected java.lang.String localClosed_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosed_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosed_at(){
                               return localClosed_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Closed_at
                               */
                               public void setClosed_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClosed_atTracker = true;
                                       } else {
                                          localClosed_atTracker = false;
                                              
                                       }
                                   
                                            this.localClosed_at=param;
                                    

                               }
                            

                        /**
                        * field for Closed_by
                        */

                        
                                    protected java.lang.String localClosed_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosed_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosed_by(){
                               return localClosed_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Closed_by
                               */
                               public void setClosed_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClosed_byTracker = true;
                                       } else {
                                          localClosed_byTracker = false;
                                              
                                       }
                                   
                                            this.localClosed_by=param;
                                    

                               }
                            

                        /**
                        * field for Cmdb_ci
                        */

                        
                                    protected java.lang.String localCmdb_ci ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCmdb_ciTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCmdb_ci(){
                               return localCmdb_ci;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cmdb_ci
                               */
                               public void setCmdb_ci(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCmdb_ciTracker = true;
                                       } else {
                                          localCmdb_ciTracker = false;
                                              
                                       }
                                   
                                            this.localCmdb_ci=param;
                                    

                               }
                            

                        /**
                        * field for Comments
                        */

                        
                                    protected java.lang.String localComments ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCommentsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getComments(){
                               return localComments;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Comments
                               */
                               public void setComments(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCommentsTracker = true;
                                       } else {
                                          localCommentsTracker = false;
                                              
                                       }
                                   
                                            this.localComments=param;
                                    

                               }
                            

                        /**
                        * field for Comments_and_work_notes
                        */

                        
                                    protected java.lang.String localComments_and_work_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localComments_and_work_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getComments_and_work_notes(){
                               return localComments_and_work_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Comments_and_work_notes
                               */
                               public void setComments_and_work_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localComments_and_work_notesTracker = true;
                                       } else {
                                          localComments_and_work_notesTracker = false;
                                              
                                       }
                                   
                                            this.localComments_and_work_notes=param;
                                    

                               }
                            

                        /**
                        * field for Company
                        */

                        
                                    protected java.lang.String localCompany ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompany(){
                               return localCompany;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Company
                               */
                               public void setCompany(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCompanyTracker = true;
                                       } else {
                                          localCompanyTracker = false;
                                              
                                       }
                                   
                                            this.localCompany=param;
                                    

                               }
                            

                        /**
                        * field for Contact_type
                        */

                        
                                    protected java.lang.String localContact_type ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localContact_typeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getContact_type(){
                               return localContact_type;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Contact_type
                               */
                               public void setContact_type(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localContact_typeTracker = true;
                                       } else {
                                          localContact_typeTracker = false;
                                              
                                       }
                                   
                                            this.localContact_type=param;
                                    

                               }
                            

                        /**
                        * field for Correlation_display
                        */

                        
                                    protected java.lang.String localCorrelation_display ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelation_displayTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelation_display(){
                               return localCorrelation_display;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Correlation_display
                               */
                               public void setCorrelation_display(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCorrelation_displayTracker = true;
                                       } else {
                                          localCorrelation_displayTracker = false;
                                              
                                       }
                                   
                                            this.localCorrelation_display=param;
                                    

                               }
                            

                        /**
                        * field for Correlation_id
                        */

                        
                                    protected java.lang.String localCorrelation_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelation_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelation_id(){
                               return localCorrelation_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Correlation_id
                               */
                               public void setCorrelation_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCorrelation_idTracker = true;
                                       } else {
                                          localCorrelation_idTracker = false;
                                              
                                       }
                                   
                                            this.localCorrelation_id=param;
                                    

                               }
                            

                        /**
                        * field for Delivery_plan
                        */

                        
                                    protected java.lang.String localDelivery_plan ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelivery_planTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelivery_plan(){
                               return localDelivery_plan;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Delivery_plan
                               */
                               public void setDelivery_plan(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDelivery_planTracker = true;
                                       } else {
                                          localDelivery_planTracker = false;
                                              
                                       }
                                   
                                            this.localDelivery_plan=param;
                                    

                               }
                            

                        /**
                        * field for Delivery_task
                        */

                        
                                    protected java.lang.String localDelivery_task ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelivery_taskTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelivery_task(){
                               return localDelivery_task;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Delivery_task
                               */
                               public void setDelivery_task(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDelivery_taskTracker = true;
                                       } else {
                                          localDelivery_taskTracker = false;
                                              
                                       }
                                   
                                            this.localDelivery_task=param;
                                    

                               }
                            

                        /**
                        * field for Description
                        */

                        
                                    protected java.lang.String localDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescriptionTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDescription(){
                               return localDescription;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Description
                               */
                               public void setDescription(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDescriptionTracker = true;
                                       } else {
                                          localDescriptionTracker = false;
                                              
                                       }
                                   
                                            this.localDescription=param;
                                    

                               }
                            

                        /**
                        * field for Due_date
                        */

                        
                                    protected java.lang.String localDue_date ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDue_dateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDue_date(){
                               return localDue_date;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Due_date
                               */
                               public void setDue_date(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDue_dateTracker = true;
                                       } else {
                                          localDue_dateTracker = false;
                                              
                                       }
                                   
                                            this.localDue_date=param;
                                    

                               }
                            

                        /**
                        * field for Escalation
                        */

                        
                                    protected java.math.BigInteger localEscalation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEscalationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getEscalation(){
                               return localEscalation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Escalation
                               */
                               public void setEscalation(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localEscalationTracker = true;
                                       } else {
                                          localEscalationTracker = false;
                                              
                                       }
                                   
                                            this.localEscalation=param;
                                    

                               }
                            

                        /**
                        * field for Expected_start
                        */

                        
                                    protected java.lang.String localExpected_start ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpected_startTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExpected_start(){
                               return localExpected_start;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Expected_start
                               */
                               public void setExpected_start(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localExpected_startTracker = true;
                                       } else {
                                          localExpected_startTracker = false;
                                              
                                       }
                                   
                                            this.localExpected_start=param;
                                    

                               }
                            

                        /**
                        * field for Follow_up
                        */

                        
                                    protected java.lang.String localFollow_up ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFollow_upTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFollow_up(){
                               return localFollow_up;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Follow_up
                               */
                               public void setFollow_up(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFollow_upTracker = true;
                                       } else {
                                          localFollow_upTracker = false;
                                              
                                       }
                                   
                                            this.localFollow_up=param;
                                    

                               }
                            

                        /**
                        * field for Group_list
                        */

                        
                                    protected java.lang.String localGroup_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGroup_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGroup_list(){
                               return localGroup_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Group_list
                               */
                               public void setGroup_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localGroup_listTracker = true;
                                       } else {
                                          localGroup_listTracker = false;
                                              
                                       }
                                   
                                            this.localGroup_list=param;
                                    

                               }
                            

                        /**
                        * field for Impact
                        */

                        
                                    protected java.math.BigInteger localImpact ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImpactTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getImpact(){
                               return localImpact;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Impact
                               */
                               public void setImpact(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localImpactTracker = true;
                                       } else {
                                          localImpactTracker = false;
                                              
                                       }
                                   
                                            this.localImpact=param;
                                    

                               }
                            

                        /**
                        * field for Incident_state
                        */

                        
                                    protected java.math.BigInteger localIncident_state ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIncident_stateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getIncident_state(){
                               return localIncident_state;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Incident_state
                               */
                               public void setIncident_state(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localIncident_stateTracker = true;
                                       } else {
                                          localIncident_stateTracker = false;
                                              
                                       }
                                   
                                            this.localIncident_state=param;
                                    

                               }
                            

                        /**
                        * field for Knowledge
                        */

                        
                                    protected boolean localKnowledge ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localKnowledgeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getKnowledge(){
                               return localKnowledge;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Knowledge
                               */
                               public void setKnowledge(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localKnowledgeTracker = false;
                                              
                                       } else {
                                          localKnowledgeTracker = true;
                                       }
                                   
                                            this.localKnowledge=param;
                                    

                               }
                            

                        /**
                        * field for Location
                        */

                        
                                    protected java.lang.String localLocation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLocationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLocation(){
                               return localLocation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Location
                               */
                               public void setLocation(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localLocationTracker = true;
                                       } else {
                                          localLocationTracker = false;
                                              
                                       }
                                   
                                            this.localLocation=param;
                                    

                               }
                            

                        /**
                        * field for Made_sla
                        */

                        
                                    protected boolean localMade_sla ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMade_slaTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getMade_sla(){
                               return localMade_sla;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Made_sla
                               */
                               public void setMade_sla(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localMade_slaTracker = false;
                                              
                                       } else {
                                          localMade_slaTracker = true;
                                       }
                                   
                                            this.localMade_sla=param;
                                    

                               }
                            

                        /**
                        * field for Notify
                        */

                        
                                    protected java.math.BigInteger localNotify ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNotifyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getNotify(){
                               return localNotify;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Notify
                               */
                               public void setNotify(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNotifyTracker = true;
                                       } else {
                                          localNotifyTracker = false;
                                              
                                       }
                                   
                                            this.localNotify=param;
                                    

                               }
                            

                        /**
                        * field for Number
                        */

                        
                                    protected java.lang.String localNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumberTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumber(){
                               return localNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Number
                               */
                               public void setNumber(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNumberTracker = true;
                                       } else {
                                          localNumberTracker = false;
                                              
                                       }
                                   
                                            this.localNumber=param;
                                    

                               }
                            

                        /**
                        * field for Opened_at
                        */

                        
                                    protected java.lang.String localOpened_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpened_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpened_at(){
                               return localOpened_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Opened_at
                               */
                               public void setOpened_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOpened_atTracker = true;
                                       } else {
                                          localOpened_atTracker = false;
                                              
                                       }
                                   
                                            this.localOpened_at=param;
                                    

                               }
                            

                        /**
                        * field for Opened_by
                        */

                        
                                    protected java.lang.String localOpened_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpened_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpened_by(){
                               return localOpened_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Opened_by
                               */
                               public void setOpened_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOpened_byTracker = true;
                                       } else {
                                          localOpened_byTracker = false;
                                              
                                       }
                                   
                                            this.localOpened_by=param;
                                    

                               }
                            

                        /**
                        * field for Order
                        */

                        
                                    protected java.math.BigInteger localOrder ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOrderTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getOrder(){
                               return localOrder;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Order
                               */
                               public void setOrder(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOrderTracker = true;
                                       } else {
                                          localOrderTracker = false;
                                              
                                       }
                                   
                                            this.localOrder=param;
                                    

                               }
                            

                        /**
                        * field for Parent
                        */

                        
                                    protected java.lang.String localParent ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localParentTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getParent(){
                               return localParent;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Parent
                               */
                               public void setParent(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localParentTracker = true;
                                       } else {
                                          localParentTracker = false;
                                              
                                       }
                                   
                                            this.localParent=param;
                                    

                               }
                            

                        /**
                        * field for Parent_incident
                        */

                        
                                    protected java.lang.String localParent_incident ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localParent_incidentTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getParent_incident(){
                               return localParent_incident;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Parent_incident
                               */
                               public void setParent_incident(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localParent_incidentTracker = true;
                                       } else {
                                          localParent_incidentTracker = false;
                                              
                                       }
                                   
                                            this.localParent_incident=param;
                                    

                               }
                            

                        /**
                        * field for Priority
                        */

                        
                                    protected java.math.BigInteger localPriority ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPriorityTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getPriority(){
                               return localPriority;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Priority
                               */
                               public void setPriority(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localPriorityTracker = true;
                                       } else {
                                          localPriorityTracker = false;
                                              
                                       }
                                   
                                            this.localPriority=param;
                                    

                               }
                            

                        /**
                        * field for Problem_id
                        */

                        
                                    protected java.lang.String localProblem_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProblem_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProblem_id(){
                               return localProblem_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Problem_id
                               */
                               public void setProblem_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localProblem_idTracker = true;
                                       } else {
                                          localProblem_idTracker = false;
                                              
                                       }
                                   
                                            this.localProblem_id=param;
                                    

                               }
                            

                        /**
                        * field for Reassignment_count
                        */

                        
                                    protected java.math.BigInteger localReassignment_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReassignment_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getReassignment_count(){
                               return localReassignment_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reassignment_count
                               */
                               public void setReassignment_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReassignment_countTracker = true;
                                       } else {
                                          localReassignment_countTracker = false;
                                              
                                       }
                                   
                                            this.localReassignment_count=param;
                                    

                               }
                            

                        /**
                        * field for Reopen_count
                        */

                        
                                    protected java.math.BigInteger localReopen_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReopen_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getReopen_count(){
                               return localReopen_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reopen_count
                               */
                               public void setReopen_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReopen_countTracker = true;
                                       } else {
                                          localReopen_countTracker = false;
                                              
                                       }
                                   
                                            this.localReopen_count=param;
                                    

                               }
                            

                        /**
                        * field for Resolved_at
                        */

                        
                                    protected java.lang.String localResolved_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResolved_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResolved_at(){
                               return localResolved_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Resolved_at
                               */
                               public void setResolved_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localResolved_atTracker = true;
                                       } else {
                                          localResolved_atTracker = false;
                                              
                                       }
                                   
                                            this.localResolved_at=param;
                                    

                               }
                            

                        /**
                        * field for Resolved_by
                        */

                        
                                    protected java.lang.String localResolved_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResolved_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResolved_by(){
                               return localResolved_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Resolved_by
                               */
                               public void setResolved_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localResolved_byTracker = true;
                                       } else {
                                          localResolved_byTracker = false;
                                              
                                       }
                                   
                                            this.localResolved_by=param;
                                    

                               }
                            

                        /**
                        * field for Rfc
                        */

                        
                                    protected java.lang.String localRfc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRfcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRfc(){
                               return localRfc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Rfc
                               */
                               public void setRfc(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localRfcTracker = true;
                                       } else {
                                          localRfcTracker = false;
                                              
                                       }
                                   
                                            this.localRfc=param;
                                    

                               }
                            

                        /**
                        * field for Severity
                        */

                        
                                    protected java.math.BigInteger localSeverity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSeverityTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getSeverity(){
                               return localSeverity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Severity
                               */
                               public void setSeverity(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSeverityTracker = true;
                                       } else {
                                          localSeverityTracker = false;
                                              
                                       }
                                   
                                            this.localSeverity=param;
                                    

                               }
                            

                        /**
                        * field for Short_description
                        */

                        
                                    protected java.lang.String localShort_description ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShort_descriptionTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShort_description(){
                               return localShort_description;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Short_description
                               */
                               public void setShort_description(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localShort_descriptionTracker = true;
                                       } else {
                                          localShort_descriptionTracker = false;
                                              
                                       }
                                   
                                            this.localShort_description=param;
                                    

                               }
                            

                        /**
                        * field for Skills
                        */

                        
                                    protected java.lang.String localSkills ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSkillsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSkills(){
                               return localSkills;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Skills
                               */
                               public void setSkills(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSkillsTracker = true;
                                       } else {
                                          localSkillsTracker = false;
                                              
                                       }
                                   
                                            this.localSkills=param;
                                    

                               }
                            

                        /**
                        * field for Sla_due
                        */

                        
                                    protected java.lang.String localSla_due ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSla_dueTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSla_due(){
                               return localSla_due;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sla_due
                               */
                               public void setSla_due(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSla_dueTracker = true;
                                       } else {
                                          localSla_dueTracker = false;
                                              
                                       }
                                   
                                            this.localSla_due=param;
                                    

                               }
                            

                        /**
                        * field for State
                        */

                        
                                    protected java.math.BigInteger localState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getState(){
                               return localState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param State
                               */
                               public void setState(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localStateTracker = true;
                                       } else {
                                          localStateTracker = false;
                                              
                                       }
                                   
                                            this.localState=param;
                                    

                               }
                            

                        /**
                        * field for Subcategory
                        */

                        
                                    protected java.lang.String localSubcategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSubcategoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSubcategory(){
                               return localSubcategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Subcategory
                               */
                               public void setSubcategory(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSubcategoryTracker = true;
                                       } else {
                                          localSubcategoryTracker = false;
                                              
                                       }
                                   
                                            this.localSubcategory=param;
                                    

                               }
                            

                        /**
                        * field for Sys_class_name
                        */

                        
                                    protected java.lang.String localSys_class_name ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_class_nameTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_class_name(){
                               return localSys_class_name;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_class_name
                               */
                               public void setSys_class_name(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_class_nameTracker = true;
                                       } else {
                                          localSys_class_nameTracker = false;
                                              
                                       }
                                   
                                            this.localSys_class_name=param;
                                    

                               }
                            

                        /**
                        * field for Sys_created_by
                        */

                        
                                    protected java.lang.String localSys_created_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_created_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_created_by(){
                               return localSys_created_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_created_by
                               */
                               public void setSys_created_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_created_byTracker = true;
                                       } else {
                                          localSys_created_byTracker = false;
                                              
                                       }
                                   
                                            this.localSys_created_by=param;
                                    

                               }
                            

                        /**
                        * field for Sys_created_on
                        */

                        
                                    protected java.lang.String localSys_created_on ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_created_onTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_created_on(){
                               return localSys_created_on;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_created_on
                               */
                               public void setSys_created_on(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_created_onTracker = true;
                                       } else {
                                          localSys_created_onTracker = false;
                                              
                                       }
                                   
                                            this.localSys_created_on=param;
                                    

                               }
                            

                        /**
                        * field for Sys_domain
                        */

                        
                                    protected java.lang.String localSys_domain ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_domainTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_domain(){
                               return localSys_domain;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_domain
                               */
                               public void setSys_domain(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_domainTracker = true;
                                       } else {
                                          localSys_domainTracker = false;
                                              
                                       }
                                   
                                            this.localSys_domain=param;
                                    

                               }
                            

                        /**
                        * field for Sys_id
                        */

                        
                                    protected java.lang.String localSys_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_id(){
                               return localSys_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_id
                               */
                               public void setSys_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_idTracker = true;
                                       } else {
                                          localSys_idTracker = false;
                                              
                                       }
                                   
                                            this.localSys_id=param;
                                    

                               }
                            

                        /**
                        * field for Sys_mod_count
                        */

                        
                                    protected java.math.BigInteger localSys_mod_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_mod_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getSys_mod_count(){
                               return localSys_mod_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_mod_count
                               */
                               public void setSys_mod_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_mod_countTracker = true;
                                       } else {
                                          localSys_mod_countTracker = false;
                                              
                                       }
                                   
                                            this.localSys_mod_count=param;
                                    

                               }
                            

                        /**
                        * field for Sys_tags
                        */

                        
                                    protected java.lang.String localSys_tags ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_tagsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_tags(){
                               return localSys_tags;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_tags
                               */
                               public void setSys_tags(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_tagsTracker = true;
                                       } else {
                                          localSys_tagsTracker = false;
                                              
                                       }
                                   
                                            this.localSys_tags=param;
                                    

                               }
                            

                        /**
                        * field for Sys_updated_by
                        */

                        
                                    protected java.lang.String localSys_updated_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_updated_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_updated_by(){
                               return localSys_updated_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_updated_by
                               */
                               public void setSys_updated_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_updated_byTracker = true;
                                       } else {
                                          localSys_updated_byTracker = false;
                                              
                                       }
                                   
                                            this.localSys_updated_by=param;
                                    

                               }
                            

                        /**
                        * field for Sys_updated_on
                        */

                        
                                    protected java.lang.String localSys_updated_on ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_updated_onTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_updated_on(){
                               return localSys_updated_on;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_updated_on
                               */
                               public void setSys_updated_on(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_updated_onTracker = true;
                                       } else {
                                          localSys_updated_onTracker = false;
                                              
                                       }
                                   
                                            this.localSys_updated_on=param;
                                    

                               }
                            

                        /**
                        * field for Time_worked
                        */

                        
                                    protected java.lang.String localTime_worked ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTime_workedTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTime_worked(){
                               return localTime_worked;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Time_worked
                               */
                               public void setTime_worked(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTime_workedTracker = true;
                                       } else {
                                          localTime_workedTracker = false;
                                              
                                       }
                                   
                                            this.localTime_worked=param;
                                    

                               }
                            

                        /**
                        * field for U_actual_elapsed_time
                        */

                        
                                    protected java.math.BigInteger localU_actual_elapsed_time ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localU_actual_elapsed_timeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getU_actual_elapsed_time(){
                               return localU_actual_elapsed_time;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param U_actual_elapsed_time
                               */
                               public void setU_actual_elapsed_time(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localU_actual_elapsed_timeTracker = true;
                                       } else {
                                          localU_actual_elapsed_timeTracker = false;
                                              
                                       }
                                   
                                            this.localU_actual_elapsed_time=param;
                                    

                               }
                            

                        /**
                        * field for U_aging_category
                        */

                        
                                    protected java.lang.String localU_aging_category ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localU_aging_categoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getU_aging_category(){
                               return localU_aging_category;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param U_aging_category
                               */
                               public void setU_aging_category(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localU_aging_categoryTracker = true;
                                       } else {
                                          localU_aging_categoryTracker = false;
                                              
                                       }
                                   
                                            this.localU_aging_category=param;
                                    

                               }
                            

                        /**
                        * field for Upon_approval
                        */

                        
                                    protected java.lang.String localUpon_approval ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUpon_approvalTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUpon_approval(){
                               return localUpon_approval;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Upon_approval
                               */
                               public void setUpon_approval(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUpon_approvalTracker = true;
                                       } else {
                                          localUpon_approvalTracker = false;
                                              
                                       }
                                   
                                            this.localUpon_approval=param;
                                    

                               }
                            

                        /**
                        * field for Upon_reject
                        */

                        
                                    protected java.lang.String localUpon_reject ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUpon_rejectTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUpon_reject(){
                               return localUpon_reject;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Upon_reject
                               */
                               public void setUpon_reject(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUpon_rejectTracker = true;
                                       } else {
                                          localUpon_rejectTracker = false;
                                              
                                       }
                                   
                                            this.localUpon_reject=param;
                                    

                               }
                            

                        /**
                        * field for Urgency
                        */

                        
                                    protected java.math.BigInteger localUrgency ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUrgencyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getUrgency(){
                               return localUrgency;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Urgency
                               */
                               public void setUrgency(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUrgencyTracker = true;
                                       } else {
                                          localUrgencyTracker = false;
                                              
                                       }
                                   
                                            this.localUrgency=param;
                                    

                               }
                            

                        /**
                        * field for User_input
                        */

                        
                                    protected java.lang.String localUser_input ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUser_inputTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUser_input(){
                               return localUser_input;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param User_input
                               */
                               public void setUser_input(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUser_inputTracker = true;
                                       } else {
                                          localUser_inputTracker = false;
                                              
                                       }
                                   
                                            this.localUser_input=param;
                                    

                               }
                            

                        /**
                        * field for Watch_list
                        */

                        
                                    protected java.lang.String localWatch_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWatch_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWatch_list(){
                               return localWatch_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Watch_list
                               */
                               public void setWatch_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWatch_listTracker = true;
                                       } else {
                                          localWatch_listTracker = false;
                                              
                                       }
                                   
                                            this.localWatch_list=param;
                                    

                               }
                            

                        /**
                        * field for Work_end
                        */

                        
                                    protected java.lang.String localWork_end ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_endTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_end(){
                               return localWork_end;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_end
                               */
                               public void setWork_end(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_endTracker = true;
                                       } else {
                                          localWork_endTracker = false;
                                              
                                       }
                                   
                                            this.localWork_end=param;
                                    

                               }
                            

                        /**
                        * field for Work_notes
                        */

                        
                                    protected java.lang.String localWork_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_notes(){
                               return localWork_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_notes
                               */
                               public void setWork_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_notesTracker = true;
                                       } else {
                                          localWork_notesTracker = false;
                                              
                                       }
                                   
                                            this.localWork_notes=param;
                                    

                               }
                            

                        /**
                        * field for Work_notes_list
                        */

                        
                                    protected java.lang.String localWork_notes_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_notes_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_notes_list(){
                               return localWork_notes_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_notes_list
                               */
                               public void setWork_notes_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_notes_listTracker = true;
                                       } else {
                                          localWork_notes_listTracker = false;
                                              
                                       }
                                   
                                            this.localWork_notes_list=param;
                                    

                               }
                            

                        /**
                        * field for Work_start
                        */

                        
                                    protected java.lang.String localWork_start ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_startTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_start(){
                               return localWork_start;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_start
                               */
                               public void setWork_start(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_startTracker = true;
                                       } else {
                                          localWork_startTracker = false;
                                              
                                       }
                                   
                                            this.localWork_start=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       DeleteMultiple.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":deleteMultiple",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "deleteMultiple",
                           xmlWriter);
                   }

               
                   }
                if (localActiveTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"active", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"active");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("active");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("active cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActive));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localActivity_dueTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"activity_due", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"activity_due");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("activity_due");
                                    }
                                

                                          if (localActivity_due==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("activity_due cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localActivity_due);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApprovalTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval");
                                    }
                                

                                          if (localApproval==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApproval_historyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval_history", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval_history");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval_history");
                                    }
                                

                                          if (localApproval_history==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval_history cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval_history);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApproval_setTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval_set", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval_set");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval_set");
                                    }
                                

                                          if (localApproval_set==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval_set cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval_set);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAssigned_toTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"assigned_to", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"assigned_to");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("assigned_to");
                                    }
                                

                                          if (localAssigned_to==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assigned_to cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssigned_to);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAssignment_groupTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"assignment_group", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"assignment_group");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("assignment_group");
                                    }
                                

                                          if (localAssignment_group==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assignment_group cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssignment_group);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusiness_durationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"business_duration", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"business_duration");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("business_duration");
                                    }
                                

                                          if (localBusiness_duration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("business_duration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBusiness_duration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusiness_stcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"business_stc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"business_stc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("business_stc");
                                    }
                                

                                          if (localBusiness_stc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("business_stc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_stc));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalendar_durationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"calendar_duration", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"calendar_duration");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("calendar_duration");
                                    }
                                

                                          if (localCalendar_duration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("calendar_duration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCalendar_duration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalendar_stcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"calendar_stc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"calendar_stc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("calendar_stc");
                                    }
                                

                                          if (localCalendar_stc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("calendar_stc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_stc));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCaller_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"caller_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"caller_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("caller_id");
                                    }
                                

                                          if (localCaller_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("caller_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCaller_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCategoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"category", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"category");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("category");
                                    }
                                

                                          if (localCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCaused_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"caused_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"caused_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("caused_by");
                                    }
                                

                                          if (localCaused_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("caused_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCaused_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localChild_incidentsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"child_incidents", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"child_incidents");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("child_incidents");
                                    }
                                

                                          if (localChild_incidents==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("child_incidents cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChild_incidents));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClose_codeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"close_code", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"close_code");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("close_code");
                                    }
                                

                                          if (localClose_code==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("close_code cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClose_code);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClose_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"close_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"close_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("close_notes");
                                    }
                                

                                          if (localClose_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("close_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClose_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosed_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"closed_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"closed_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("closed_at");
                                    }
                                

                                          if (localClosed_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closed_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosed_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosed_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"closed_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"closed_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("closed_by");
                                    }
                                

                                          if (localClosed_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closed_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosed_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCmdb_ciTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"cmdb_ci", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"cmdb_ci");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("cmdb_ci");
                                    }
                                

                                          if (localCmdb_ci==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cmdb_ci cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCmdb_ci);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCommentsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"comments", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"comments");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("comments");
                                    }
                                

                                          if (localComments==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("comments cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localComments);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localComments_and_work_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"comments_and_work_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"comments_and_work_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("comments_and_work_notes");
                                    }
                                

                                          if (localComments_and_work_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("comments_and_work_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localComments_and_work_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"company", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"company");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("company");
                                    }
                                

                                          if (localCompany==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("company cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompany);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localContact_typeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"contact_type", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"contact_type");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("contact_type");
                                    }
                                

                                          if (localContact_type==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("contact_type cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localContact_type);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelation_displayTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"correlation_display", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"correlation_display");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("correlation_display");
                                    }
                                

                                          if (localCorrelation_display==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlation_display cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelation_display);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelation_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"correlation_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"correlation_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("correlation_id");
                                    }
                                

                                          if (localCorrelation_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlation_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelation_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelivery_planTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"delivery_plan", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"delivery_plan");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("delivery_plan");
                                    }
                                

                                          if (localDelivery_plan==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delivery_plan cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelivery_plan);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelivery_taskTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"delivery_task", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"delivery_task");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("delivery_task");
                                    }
                                

                                          if (localDelivery_task==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delivery_task cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelivery_task);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDescriptionTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"description", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"description");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("description");
                                    }
                                

                                          if (localDescription==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDescription);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDue_dateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"due_date", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"due_date");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("due_date");
                                    }
                                

                                          if (localDue_date==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDue_date);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEscalationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"escalation", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"escalation");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("escalation");
                                    }
                                

                                          if (localEscalation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("escalation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEscalation));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExpected_startTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"expected_start", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"expected_start");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("expected_start");
                                    }
                                

                                          if (localExpected_start==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("expected_start cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExpected_start);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFollow_upTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"follow_up", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"follow_up");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("follow_up");
                                    }
                                

                                          if (localFollow_up==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("follow_up cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFollow_up);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGroup_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"group_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"group_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("group_list");
                                    }
                                

                                          if (localGroup_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("group_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGroup_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localImpactTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"impact", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"impact");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("impact");
                                    }
                                

                                          if (localImpact==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("impact cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpact));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIncident_stateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"incident_state", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"incident_state");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("incident_state");
                                    }
                                

                                          if (localIncident_state==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("incident_state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIncident_state));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localKnowledgeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"knowledge", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"knowledge");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("knowledge");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("knowledge cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKnowledge));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLocationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"location", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"location");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("location");
                                    }
                                

                                          if (localLocation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("location cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLocation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMade_slaTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"made_sla", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"made_sla");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("made_sla");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("made_sla cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMade_sla));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNotifyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"notify", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"notify");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("notify");
                                    }
                                

                                          if (localNotify==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("notify cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNotify));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNumberTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"number", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"number");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("number");
                                    }
                                

                                          if (localNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpened_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"opened_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"opened_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("opened_at");
                                    }
                                

                                          if (localOpened_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("opened_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpened_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpened_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"opened_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"opened_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("opened_by");
                                    }
                                

                                          if (localOpened_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("opened_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpened_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOrderTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"order", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"order");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("order");
                                    }
                                

                                          if (localOrder==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("order cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrder));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localParentTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"parent", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"parent");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("parent");
                                    }
                                

                                          if (localParent==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("parent cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localParent);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localParent_incidentTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"parent_incident", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"parent_incident");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("parent_incident");
                                    }
                                

                                          if (localParent_incident==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("parent_incident cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localParent_incident);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPriorityTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"priority", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"priority");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("priority");
                                    }
                                

                                          if (localPriority==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("priority cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPriority));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProblem_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"problem_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"problem_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("problem_id");
                                    }
                                

                                          if (localProblem_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("problem_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProblem_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReassignment_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"reassignment_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"reassignment_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("reassignment_count");
                                    }
                                

                                          if (localReassignment_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reassignment_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReassignment_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReopen_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"reopen_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"reopen_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("reopen_count");
                                    }
                                

                                          if (localReopen_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reopen_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReopen_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResolved_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"resolved_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"resolved_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("resolved_at");
                                    }
                                

                                          if (localResolved_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resolved_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResolved_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResolved_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"resolved_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"resolved_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("resolved_by");
                                    }
                                

                                          if (localResolved_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resolved_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResolved_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRfcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"rfc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"rfc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("rfc");
                                    }
                                

                                          if (localRfc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("rfc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRfc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSeverityTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"severity", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"severity");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("severity");
                                    }
                                

                                          if (localSeverity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("severity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeverity));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShort_descriptionTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"short_description", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"short_description");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("short_description");
                                    }
                                

                                          if (localShort_description==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("short_description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShort_description);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSkillsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"skills", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"skills");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("skills");
                                    }
                                

                                          if (localSkills==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("skills cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSkills);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSla_dueTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sla_due", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sla_due");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sla_due");
                                    }
                                

                                          if (localSla_due==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sla_due cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSla_due);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"state", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"state");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("state");
                                    }
                                

                                          if (localState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSubcategoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"subcategory", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"subcategory");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("subcategory");
                                    }
                                

                                          if (localSubcategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("subcategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSubcategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_class_nameTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_class_name", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_class_name");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_class_name");
                                    }
                                

                                          if (localSys_class_name==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_class_name cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_class_name);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_created_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_created_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_created_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_created_by");
                                    }
                                

                                          if (localSys_created_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_created_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_created_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_created_onTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_created_on", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_created_on");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_created_on");
                                    }
                                

                                          if (localSys_created_on==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_created_on cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_created_on);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_domainTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_domain", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_domain");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_domain");
                                    }
                                

                                          if (localSys_domain==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_domain cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_domain);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_id");
                                    }
                                

                                          if (localSys_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_mod_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_mod_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_mod_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_mod_count");
                                    }
                                

                                          if (localSys_mod_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_mod_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_mod_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_tagsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_tags", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_tags");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_tags");
                                    }
                                

                                          if (localSys_tags==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_tags cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_tags);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_updated_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_updated_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_updated_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_updated_by");
                                    }
                                

                                          if (localSys_updated_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_updated_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_updated_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_updated_onTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_updated_on", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_updated_on");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_updated_on");
                                    }
                                

                                          if (localSys_updated_on==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_updated_on cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_updated_on);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTime_workedTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"time_worked", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"time_worked");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("time_worked");
                                    }
                                

                                          if (localTime_worked==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("time_worked cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTime_worked);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localU_actual_elapsed_timeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"u_actual_elapsed_time", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"u_actual_elapsed_time");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("u_actual_elapsed_time");
                                    }
                                

                                          if (localU_actual_elapsed_time==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("u_actual_elapsed_time cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_actual_elapsed_time));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localU_aging_categoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"u_aging_category", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"u_aging_category");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("u_aging_category");
                                    }
                                

                                          if (localU_aging_category==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("u_aging_category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localU_aging_category);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUpon_approvalTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"upon_approval", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"upon_approval");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("upon_approval");
                                    }
                                

                                          if (localUpon_approval==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("upon_approval cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUpon_approval);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUpon_rejectTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"upon_reject", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"upon_reject");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("upon_reject");
                                    }
                                

                                          if (localUpon_reject==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("upon_reject cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUpon_reject);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUrgencyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"urgency", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"urgency");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("urgency");
                                    }
                                

                                          if (localUrgency==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("urgency cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrgency));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUser_inputTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"user_input", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"user_input");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("user_input");
                                    }
                                

                                          if (localUser_input==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("user_input cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUser_input);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWatch_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"watch_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"watch_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("watch_list");
                                    }
                                

                                          if (localWatch_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("watch_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWatch_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_endTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_end", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_end");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_end");
                                    }
                                

                                          if (localWork_end==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_end cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_end);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_notes");
                                    }
                                

                                          if (localWork_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_notes_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_notes_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_notes_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_notes_list");
                                    }
                                

                                          if (localWork_notes_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_notes_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_notes_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_startTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_start", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_start");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_start");
                                    }
                                

                                          if (localWork_start==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_start cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_start);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localActiveTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "active"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActive));
                            } if (localActivity_dueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "activity_due"));
                                 
                                        if (localActivity_due != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActivity_due));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("activity_due cannot be null!!");
                                        }
                                    } if (localApprovalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval"));
                                 
                                        if (localApproval != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval cannot be null!!");
                                        }
                                    } if (localApproval_historyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval_history"));
                                 
                                        if (localApproval_history != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval_history));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval_history cannot be null!!");
                                        }
                                    } if (localApproval_setTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval_set"));
                                 
                                        if (localApproval_set != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval_set));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval_set cannot be null!!");
                                        }
                                    } if (localAssigned_toTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "assigned_to"));
                                 
                                        if (localAssigned_to != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssigned_to));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assigned_to cannot be null!!");
                                        }
                                    } if (localAssignment_groupTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "assignment_group"));
                                 
                                        if (localAssignment_group != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssignment_group));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assignment_group cannot be null!!");
                                        }
                                    } if (localBusiness_durationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "business_duration"));
                                 
                                        if (localBusiness_duration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_duration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("business_duration cannot be null!!");
                                        }
                                    } if (localBusiness_stcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "business_stc"));
                                 
                                        if (localBusiness_stc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_stc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("business_stc cannot be null!!");
                                        }
                                    } if (localCalendar_durationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "calendar_duration"));
                                 
                                        if (localCalendar_duration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_duration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("calendar_duration cannot be null!!");
                                        }
                                    } if (localCalendar_stcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "calendar_stc"));
                                 
                                        if (localCalendar_stc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_stc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("calendar_stc cannot be null!!");
                                        }
                                    } if (localCaller_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "caller_id"));
                                 
                                        if (localCaller_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCaller_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("caller_id cannot be null!!");
                                        }
                                    } if (localCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "category"));
                                 
                                        if (localCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                        }
                                    } if (localCaused_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "caused_by"));
                                 
                                        if (localCaused_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCaused_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("caused_by cannot be null!!");
                                        }
                                    } if (localChild_incidentsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "child_incidents"));
                                 
                                        if (localChild_incidents != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChild_incidents));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("child_incidents cannot be null!!");
                                        }
                                    } if (localClose_codeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "close_code"));
                                 
                                        if (localClose_code != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClose_code));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("close_code cannot be null!!");
                                        }
                                    } if (localClose_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "close_notes"));
                                 
                                        if (localClose_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClose_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("close_notes cannot be null!!");
                                        }
                                    } if (localClosed_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "closed_at"));
                                 
                                        if (localClosed_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosed_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closed_at cannot be null!!");
                                        }
                                    } if (localClosed_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "closed_by"));
                                 
                                        if (localClosed_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosed_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closed_by cannot be null!!");
                                        }
                                    } if (localCmdb_ciTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "cmdb_ci"));
                                 
                                        if (localCmdb_ci != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCmdb_ci));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cmdb_ci cannot be null!!");
                                        }
                                    } if (localCommentsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "comments"));
                                 
                                        if (localComments != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComments));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("comments cannot be null!!");
                                        }
                                    } if (localComments_and_work_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "comments_and_work_notes"));
                                 
                                        if (localComments_and_work_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComments_and_work_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("comments_and_work_notes cannot be null!!");
                                        }
                                    } if (localCompanyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "company"));
                                 
                                        if (localCompany != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompany));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("company cannot be null!!");
                                        }
                                    } if (localContact_typeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "contact_type"));
                                 
                                        if (localContact_type != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localContact_type));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("contact_type cannot be null!!");
                                        }
                                    } if (localCorrelation_displayTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "correlation_display"));
                                 
                                        if (localCorrelation_display != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelation_display));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlation_display cannot be null!!");
                                        }
                                    } if (localCorrelation_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "correlation_id"));
                                 
                                        if (localCorrelation_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelation_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlation_id cannot be null!!");
                                        }
                                    } if (localDelivery_planTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "delivery_plan"));
                                 
                                        if (localDelivery_plan != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelivery_plan));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delivery_plan cannot be null!!");
                                        }
                                    } if (localDelivery_taskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "delivery_task"));
                                 
                                        if (localDelivery_task != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelivery_task));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delivery_task cannot be null!!");
                                        }
                                    } if (localDescriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "description"));
                                 
                                        if (localDescription != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescription));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                        }
                                    } if (localDue_dateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "due_date"));
                                 
                                        if (localDue_date != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDue_date));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                        }
                                    } if (localEscalationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "escalation"));
                                 
                                        if (localEscalation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEscalation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("escalation cannot be null!!");
                                        }
                                    } if (localExpected_startTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "expected_start"));
                                 
                                        if (localExpected_start != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExpected_start));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("expected_start cannot be null!!");
                                        }
                                    } if (localFollow_upTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "follow_up"));
                                 
                                        if (localFollow_up != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFollow_up));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("follow_up cannot be null!!");
                                        }
                                    } if (localGroup_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "group_list"));
                                 
                                        if (localGroup_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGroup_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("group_list cannot be null!!");
                                        }
                                    } if (localImpactTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "impact"));
                                 
                                        if (localImpact != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpact));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("impact cannot be null!!");
                                        }
                                    } if (localIncident_stateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "incident_state"));
                                 
                                        if (localIncident_state != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIncident_state));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("incident_state cannot be null!!");
                                        }
                                    } if (localKnowledgeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "knowledge"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKnowledge));
                            } if (localLocationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "location"));
                                 
                                        if (localLocation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLocation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("location cannot be null!!");
                                        }
                                    } if (localMade_slaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "made_sla"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMade_sla));
                            } if (localNotifyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "notify"));
                                 
                                        if (localNotify != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNotify));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("notify cannot be null!!");
                                        }
                                    } if (localNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "number"));
                                 
                                        if (localNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                        }
                                    } if (localOpened_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "opened_at"));
                                 
                                        if (localOpened_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpened_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("opened_at cannot be null!!");
                                        }
                                    } if (localOpened_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "opened_by"));
                                 
                                        if (localOpened_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpened_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("opened_by cannot be null!!");
                                        }
                                    } if (localOrderTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "order"));
                                 
                                        if (localOrder != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrder));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("order cannot be null!!");
                                        }
                                    } if (localParentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "parent"));
                                 
                                        if (localParent != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParent));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("parent cannot be null!!");
                                        }
                                    } if (localParent_incidentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "parent_incident"));
                                 
                                        if (localParent_incident != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParent_incident));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("parent_incident cannot be null!!");
                                        }
                                    } if (localPriorityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "priority"));
                                 
                                        if (localPriority != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPriority));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("priority cannot be null!!");
                                        }
                                    } if (localProblem_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "problem_id"));
                                 
                                        if (localProblem_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProblem_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("problem_id cannot be null!!");
                                        }
                                    } if (localReassignment_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "reassignment_count"));
                                 
                                        if (localReassignment_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReassignment_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reassignment_count cannot be null!!");
                                        }
                                    } if (localReopen_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "reopen_count"));
                                 
                                        if (localReopen_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReopen_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reopen_count cannot be null!!");
                                        }
                                    } if (localResolved_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "resolved_at"));
                                 
                                        if (localResolved_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResolved_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resolved_at cannot be null!!");
                                        }
                                    } if (localResolved_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "resolved_by"));
                                 
                                        if (localResolved_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResolved_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resolved_by cannot be null!!");
                                        }
                                    } if (localRfcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "rfc"));
                                 
                                        if (localRfc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRfc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("rfc cannot be null!!");
                                        }
                                    } if (localSeverityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "severity"));
                                 
                                        if (localSeverity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeverity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("severity cannot be null!!");
                                        }
                                    } if (localShort_descriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "short_description"));
                                 
                                        if (localShort_description != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShort_description));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("short_description cannot be null!!");
                                        }
                                    } if (localSkillsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "skills"));
                                 
                                        if (localSkills != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSkills));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("skills cannot be null!!");
                                        }
                                    } if (localSla_dueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sla_due"));
                                 
                                        if (localSla_due != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSla_due));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sla_due cannot be null!!");
                                        }
                                    } if (localStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "state"));
                                 
                                        if (localState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                        }
                                    } if (localSubcategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "subcategory"));
                                 
                                        if (localSubcategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSubcategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("subcategory cannot be null!!");
                                        }
                                    } if (localSys_class_nameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_class_name"));
                                 
                                        if (localSys_class_name != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_class_name));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_class_name cannot be null!!");
                                        }
                                    } if (localSys_created_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_created_by"));
                                 
                                        if (localSys_created_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_created_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_created_by cannot be null!!");
                                        }
                                    } if (localSys_created_onTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_created_on"));
                                 
                                        if (localSys_created_on != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_created_on));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_created_on cannot be null!!");
                                        }
                                    } if (localSys_domainTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_domain"));
                                 
                                        if (localSys_domain != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_domain));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_domain cannot be null!!");
                                        }
                                    } if (localSys_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_id"));
                                 
                                        if (localSys_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                        }
                                    } if (localSys_mod_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_mod_count"));
                                 
                                        if (localSys_mod_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_mod_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_mod_count cannot be null!!");
                                        }
                                    } if (localSys_tagsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_tags"));
                                 
                                        if (localSys_tags != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_tags));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_tags cannot be null!!");
                                        }
                                    } if (localSys_updated_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_updated_by"));
                                 
                                        if (localSys_updated_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_updated_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_updated_by cannot be null!!");
                                        }
                                    } if (localSys_updated_onTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_updated_on"));
                                 
                                        if (localSys_updated_on != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_updated_on));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_updated_on cannot be null!!");
                                        }
                                    } if (localTime_workedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "time_worked"));
                                 
                                        if (localTime_worked != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTime_worked));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("time_worked cannot be null!!");
                                        }
                                    } if (localU_actual_elapsed_timeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "u_actual_elapsed_time"));
                                 
                                        if (localU_actual_elapsed_time != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_actual_elapsed_time));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("u_actual_elapsed_time cannot be null!!");
                                        }
                                    } if (localU_aging_categoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "u_aging_category"));
                                 
                                        if (localU_aging_category != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_aging_category));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("u_aging_category cannot be null!!");
                                        }
                                    } if (localUpon_approvalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "upon_approval"));
                                 
                                        if (localUpon_approval != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUpon_approval));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("upon_approval cannot be null!!");
                                        }
                                    } if (localUpon_rejectTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "upon_reject"));
                                 
                                        if (localUpon_reject != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUpon_reject));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("upon_reject cannot be null!!");
                                        }
                                    } if (localUrgencyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "urgency"));
                                 
                                        if (localUrgency != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrgency));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("urgency cannot be null!!");
                                        }
                                    } if (localUser_inputTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "user_input"));
                                 
                                        if (localUser_input != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUser_input));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("user_input cannot be null!!");
                                        }
                                    } if (localWatch_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "watch_list"));
                                 
                                        if (localWatch_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWatch_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("watch_list cannot be null!!");
                                        }
                                    } if (localWork_endTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_end"));
                                 
                                        if (localWork_end != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_end));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_end cannot be null!!");
                                        }
                                    } if (localWork_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_notes"));
                                 
                                        if (localWork_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_notes cannot be null!!");
                                        }
                                    } if (localWork_notes_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_notes_list"));
                                 
                                        if (localWork_notes_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_notes_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_notes_list cannot be null!!");
                                        }
                                    } if (localWork_startTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_start"));
                                 
                                        if (localWork_start != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_start));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_start cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static DeleteMultiple parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            DeleteMultiple object =
                new DeleteMultiple();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"deleteMultiple".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (DeleteMultiple)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","active").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActive(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","activity_due").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActivity_due(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval_history").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval_history(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval_set").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval_set(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","assigned_to").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssigned_to(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","assignment_group").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssignment_group(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","business_duration").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusiness_duration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","business_stc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusiness_stc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","calendar_duration").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalendar_duration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","calendar_stc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalendar_stc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","caller_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCaller_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","category").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","caused_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCaused_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","child_incidents").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setChild_incidents(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","close_code").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClose_code(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","close_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClose_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","closed_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosed_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","closed_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosed_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","cmdb_ci").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCmdb_ci(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","comments").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setComments(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","comments_and_work_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setComments_and_work_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","company").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompany(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","contact_type").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setContact_type(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","correlation_display").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelation_display(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","correlation_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelation_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","delivery_plan").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelivery_plan(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","delivery_task").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelivery_task(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","description").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDescription(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","due_date").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDue_date(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","escalation").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEscalation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","expected_start").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExpected_start(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","follow_up").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFollow_up(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","group_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGroup_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","impact").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImpact(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","incident_state").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIncident_state(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","knowledge").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setKnowledge(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","location").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLocation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","made_sla").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMade_sla(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","notify").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNotify(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","number").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","opened_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpened_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","opened_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpened_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","order").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOrder(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","parent").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setParent(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","parent_incident").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setParent_incident(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","priority").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPriority(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","problem_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProblem_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","reassignment_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReassignment_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","reopen_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReopen_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","resolved_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResolved_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","resolved_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResolved_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","rfc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRfc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","severity").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSeverity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","short_description").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShort_description(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","skills").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSkills(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sla_due").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSla_due(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","state").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","subcategory").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSubcategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_class_name").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_class_name(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_created_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_created_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_created_on").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_created_on(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_domain").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_domain(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_mod_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_mod_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_tags").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_tags(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_updated_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_updated_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_updated_on").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_updated_on(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","time_worked").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTime_worked(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","u_actual_elapsed_time").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setU_actual_elapsed_time(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","u_aging_category").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setU_aging_category(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","upon_approval").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUpon_approval(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","upon_reject").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUpon_reject(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","urgency").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUrgency(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","user_input").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUser_input(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","watch_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWatch_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_end").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_end(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_notes_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_notes_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_start").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_start(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class Insert
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.service-now.com/incident",
                "insert",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for Active
                        */

                        
                                    protected boolean localActive ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActiveTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getActive(){
                               return localActive;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Active
                               */
                               public void setActive(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localActiveTracker = false;
                                              
                                       } else {
                                          localActiveTracker = true;
                                       }
                                   
                                            this.localActive=param;
                                    

                               }
                            

                        /**
                        * field for Activity_due
                        */

                        
                                    protected java.lang.String localActivity_due ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActivity_dueTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getActivity_due(){
                               return localActivity_due;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Activity_due
                               */
                               public void setActivity_due(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localActivity_dueTracker = true;
                                       } else {
                                          localActivity_dueTracker = false;
                                              
                                       }
                                   
                                            this.localActivity_due=param;
                                    

                               }
                            

                        /**
                        * field for Approval
                        */

                        
                                    protected java.lang.String localApproval ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApprovalTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval(){
                               return localApproval;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval
                               */
                               public void setApproval(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApprovalTracker = true;
                                       } else {
                                          localApprovalTracker = false;
                                              
                                       }
                                   
                                            this.localApproval=param;
                                    

                               }
                            

                        /**
                        * field for Approval_history
                        */

                        
                                    protected java.lang.String localApproval_history ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApproval_historyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval_history(){
                               return localApproval_history;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval_history
                               */
                               public void setApproval_history(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApproval_historyTracker = true;
                                       } else {
                                          localApproval_historyTracker = false;
                                              
                                       }
                                   
                                            this.localApproval_history=param;
                                    

                               }
                            

                        /**
                        * field for Approval_set
                        */

                        
                                    protected java.lang.String localApproval_set ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApproval_setTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval_set(){
                               return localApproval_set;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval_set
                               */
                               public void setApproval_set(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApproval_setTracker = true;
                                       } else {
                                          localApproval_setTracker = false;
                                              
                                       }
                                   
                                            this.localApproval_set=param;
                                    

                               }
                            

                        /**
                        * field for Assigned_to
                        */

                        
                                    protected java.lang.String localAssigned_to ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAssigned_toTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssigned_to(){
                               return localAssigned_to;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Assigned_to
                               */
                               public void setAssigned_to(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAssigned_toTracker = true;
                                       } else {
                                          localAssigned_toTracker = false;
                                              
                                       }
                                   
                                            this.localAssigned_to=param;
                                    

                               }
                            

                        /**
                        * field for Assignment_group
                        */

                        
                                    protected java.lang.String localAssignment_group ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssignment_group(){
                               return localAssignment_group;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Assignment_group
                               */
                               public void setAssignment_group(java.lang.String param){
                            
                                            this.localAssignment_group=param;
                                    

                               }
                            

                        /**
                        * field for Business_duration
                        */

                        
                                    protected java.lang.String localBusiness_duration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusiness_durationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBusiness_duration(){
                               return localBusiness_duration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Business_duration
                               */
                               public void setBusiness_duration(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBusiness_durationTracker = true;
                                       } else {
                                          localBusiness_durationTracker = false;
                                              
                                       }
                                   
                                            this.localBusiness_duration=param;
                                    

                               }
                            

                        /**
                        * field for Business_stc
                        */

                        
                                    protected java.math.BigInteger localBusiness_stc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusiness_stcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getBusiness_stc(){
                               return localBusiness_stc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Business_stc
                               */
                               public void setBusiness_stc(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBusiness_stcTracker = true;
                                       } else {
                                          localBusiness_stcTracker = false;
                                              
                                       }
                                   
                                            this.localBusiness_stc=param;
                                    

                               }
                            

                        /**
                        * field for Calendar_duration
                        */

                        
                                    protected java.lang.String localCalendar_duration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalendar_durationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCalendar_duration(){
                               return localCalendar_duration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calendar_duration
                               */
                               public void setCalendar_duration(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCalendar_durationTracker = true;
                                       } else {
                                          localCalendar_durationTracker = false;
                                              
                                       }
                                   
                                            this.localCalendar_duration=param;
                                    

                               }
                            

                        /**
                        * field for Calendar_stc
                        */

                        
                                    protected java.math.BigInteger localCalendar_stc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalendar_stcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getCalendar_stc(){
                               return localCalendar_stc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calendar_stc
                               */
                               public void setCalendar_stc(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCalendar_stcTracker = true;
                                       } else {
                                          localCalendar_stcTracker = false;
                                              
                                       }
                                   
                                            this.localCalendar_stc=param;
                                    

                               }
                            

                        /**
                        * field for Caller_id
                        */

                        
                                    protected java.lang.String localCaller_id ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCaller_id(){
                               return localCaller_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Caller_id
                               */
                               public void setCaller_id(java.lang.String param){
                            
                                            this.localCaller_id=param;
                                    

                               }
                            

                        /**
                        * field for Category
                        */

                        
                                    protected java.lang.String localCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCategoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCategory(){
                               return localCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Category
                               */
                               public void setCategory(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCategoryTracker = true;
                                       } else {
                                          localCategoryTracker = false;
                                              
                                       }
                                   
                                            this.localCategory=param;
                                    

                               }
                            

                        /**
                        * field for Caused_by
                        */

                        
                                    protected java.lang.String localCaused_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCaused_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCaused_by(){
                               return localCaused_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Caused_by
                               */
                               public void setCaused_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCaused_byTracker = true;
                                       } else {
                                          localCaused_byTracker = false;
                                              
                                       }
                                   
                                            this.localCaused_by=param;
                                    

                               }
                            

                        /**
                        * field for Child_incidents
                        */

                        
                                    protected java.math.BigInteger localChild_incidents ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChild_incidentsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getChild_incidents(){
                               return localChild_incidents;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Child_incidents
                               */
                               public void setChild_incidents(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localChild_incidentsTracker = true;
                                       } else {
                                          localChild_incidentsTracker = false;
                                              
                                       }
                                   
                                            this.localChild_incidents=param;
                                    

                               }
                            

                        /**
                        * field for Close_code
                        */

                        
                                    protected java.lang.String localClose_code ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClose_codeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClose_code(){
                               return localClose_code;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Close_code
                               */
                               public void setClose_code(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClose_codeTracker = true;
                                       } else {
                                          localClose_codeTracker = false;
                                              
                                       }
                                   
                                            this.localClose_code=param;
                                    

                               }
                            

                        /**
                        * field for Close_notes
                        */

                        
                                    protected java.lang.String localClose_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClose_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClose_notes(){
                               return localClose_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Close_notes
                               */
                               public void setClose_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClose_notesTracker = true;
                                       } else {
                                          localClose_notesTracker = false;
                                              
                                       }
                                   
                                            this.localClose_notes=param;
                                    

                               }
                            

                        /**
                        * field for Closed_at
                        */

                        
                                    protected java.lang.String localClosed_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosed_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosed_at(){
                               return localClosed_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Closed_at
                               */
                               public void setClosed_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClosed_atTracker = true;
                                       } else {
                                          localClosed_atTracker = false;
                                              
                                       }
                                   
                                            this.localClosed_at=param;
                                    

                               }
                            

                        /**
                        * field for Closed_by
                        */

                        
                                    protected java.lang.String localClosed_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosed_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosed_by(){
                               return localClosed_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Closed_by
                               */
                               public void setClosed_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClosed_byTracker = true;
                                       } else {
                                          localClosed_byTracker = false;
                                              
                                       }
                                   
                                            this.localClosed_by=param;
                                    

                               }
                            

                        /**
                        * field for Cmdb_ci
                        */

                        
                                    protected java.lang.String localCmdb_ci ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCmdb_ciTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCmdb_ci(){
                               return localCmdb_ci;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cmdb_ci
                               */
                               public void setCmdb_ci(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCmdb_ciTracker = true;
                                       } else {
                                          localCmdb_ciTracker = false;
                                              
                                       }
                                   
                                            this.localCmdb_ci=param;
                                    

                               }
                            

                        /**
                        * field for Comments
                        */

                        
                                    protected java.lang.String localComments ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCommentsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getComments(){
                               return localComments;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Comments
                               */
                               public void setComments(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCommentsTracker = true;
                                       } else {
                                          localCommentsTracker = false;
                                              
                                       }
                                   
                                            this.localComments=param;
                                    

                               }
                            

                        /**
                        * field for Comments_and_work_notes
                        */

                        
                                    protected java.lang.String localComments_and_work_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localComments_and_work_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getComments_and_work_notes(){
                               return localComments_and_work_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Comments_and_work_notes
                               */
                               public void setComments_and_work_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localComments_and_work_notesTracker = true;
                                       } else {
                                          localComments_and_work_notesTracker = false;
                                              
                                       }
                                   
                                            this.localComments_and_work_notes=param;
                                    

                               }
                            

                        /**
                        * field for Company
                        */

                        
                                    protected java.lang.String localCompany ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompany(){
                               return localCompany;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Company
                               */
                               public void setCompany(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCompanyTracker = true;
                                       } else {
                                          localCompanyTracker = false;
                                              
                                       }
                                   
                                            this.localCompany=param;
                                    

                               }
                            

                        /**
                        * field for Contact_type
                        */

                        
                                    protected java.lang.String localContact_type ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localContact_typeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getContact_type(){
                               return localContact_type;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Contact_type
                               */
                               public void setContact_type(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localContact_typeTracker = true;
                                       } else {
                                          localContact_typeTracker = false;
                                              
                                       }
                                   
                                            this.localContact_type=param;
                                    

                               }
                            

                        /**
                        * field for Correlation_display
                        */

                        
                                    protected java.lang.String localCorrelation_display ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelation_displayTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelation_display(){
                               return localCorrelation_display;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Correlation_display
                               */
                               public void setCorrelation_display(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCorrelation_displayTracker = true;
                                       } else {
                                          localCorrelation_displayTracker = false;
                                              
                                       }
                                   
                                            this.localCorrelation_display=param;
                                    

                               }
                            

                        /**
                        * field for Correlation_id
                        */

                        
                                    protected java.lang.String localCorrelation_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelation_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelation_id(){
                               return localCorrelation_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Correlation_id
                               */
                               public void setCorrelation_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCorrelation_idTracker = true;
                                       } else {
                                          localCorrelation_idTracker = false;
                                              
                                       }
                                   
                                            this.localCorrelation_id=param;
                                    

                               }
                            

                        /**
                        * field for Delivery_plan
                        */

                        
                                    protected java.lang.String localDelivery_plan ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelivery_planTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelivery_plan(){
                               return localDelivery_plan;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Delivery_plan
                               */
                               public void setDelivery_plan(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDelivery_planTracker = true;
                                       } else {
                                          localDelivery_planTracker = false;
                                              
                                       }
                                   
                                            this.localDelivery_plan=param;
                                    

                               }
                            

                        /**
                        * field for Delivery_task
                        */

                        
                                    protected java.lang.String localDelivery_task ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelivery_taskTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelivery_task(){
                               return localDelivery_task;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Delivery_task
                               */
                               public void setDelivery_task(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDelivery_taskTracker = true;
                                       } else {
                                          localDelivery_taskTracker = false;
                                              
                                       }
                                   
                                            this.localDelivery_task=param;
                                    

                               }
                            

                        /**
                        * field for Description
                        */

                        
                                    protected java.lang.String localDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescriptionTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDescription(){
                               return localDescription;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Description
                               */
                               public void setDescription(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDescriptionTracker = true;
                                       } else {
                                          localDescriptionTracker = false;
                                              
                                       }
                                   
                                            this.localDescription=param;
                                    

                               }
                            

                        /**
                        * field for Due_date
                        */

                        
                                    protected java.lang.String localDue_date ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDue_dateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDue_date(){
                               return localDue_date;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Due_date
                               */
                               public void setDue_date(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDue_dateTracker = true;
                                       } else {
                                          localDue_dateTracker = false;
                                              
                                       }
                                   
                                            this.localDue_date=param;
                                    

                               }
                            

                        /**
                        * field for Escalation
                        */

                        
                                    protected java.math.BigInteger localEscalation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEscalationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getEscalation(){
                               return localEscalation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Escalation
                               */
                               public void setEscalation(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localEscalationTracker = true;
                                       } else {
                                          localEscalationTracker = false;
                                              
                                       }
                                   
                                            this.localEscalation=param;
                                    

                               }
                            

                        /**
                        * field for Expected_start
                        */

                        
                                    protected java.lang.String localExpected_start ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpected_startTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExpected_start(){
                               return localExpected_start;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Expected_start
                               */
                               public void setExpected_start(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localExpected_startTracker = true;
                                       } else {
                                          localExpected_startTracker = false;
                                              
                                       }
                                   
                                            this.localExpected_start=param;
                                    

                               }
                            

                        /**
                        * field for Follow_up
                        */

                        
                                    protected java.lang.String localFollow_up ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFollow_upTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFollow_up(){
                               return localFollow_up;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Follow_up
                               */
                               public void setFollow_up(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFollow_upTracker = true;
                                       } else {
                                          localFollow_upTracker = false;
                                              
                                       }
                                   
                                            this.localFollow_up=param;
                                    

                               }
                            

                        /**
                        * field for Group_list
                        */

                        
                                    protected java.lang.String localGroup_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGroup_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGroup_list(){
                               return localGroup_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Group_list
                               */
                               public void setGroup_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localGroup_listTracker = true;
                                       } else {
                                          localGroup_listTracker = false;
                                              
                                       }
                                   
                                            this.localGroup_list=param;
                                    

                               }
                            

                        /**
                        * field for Impact
                        */

                        
                                    protected java.math.BigInteger localImpact ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImpactTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getImpact(){
                               return localImpact;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Impact
                               */
                               public void setImpact(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localImpactTracker = true;
                                       } else {
                                          localImpactTracker = false;
                                              
                                       }
                                   
                                            this.localImpact=param;
                                    

                               }
                            

                        /**
                        * field for Incident_state
                        */

                        
                                    protected java.math.BigInteger localIncident_state ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIncident_stateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getIncident_state(){
                               return localIncident_state;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Incident_state
                               */
                               public void setIncident_state(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localIncident_stateTracker = true;
                                       } else {
                                          localIncident_stateTracker = false;
                                              
                                       }
                                   
                                            this.localIncident_state=param;
                                    

                               }
                            

                        /**
                        * field for Knowledge
                        */

                        
                                    protected boolean localKnowledge ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localKnowledgeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getKnowledge(){
                               return localKnowledge;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Knowledge
                               */
                               public void setKnowledge(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localKnowledgeTracker = false;
                                              
                                       } else {
                                          localKnowledgeTracker = true;
                                       }
                                   
                                            this.localKnowledge=param;
                                    

                               }
                            

                        /**
                        * field for Location
                        */

                        
                                    protected java.lang.String localLocation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLocationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLocation(){
                               return localLocation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Location
                               */
                               public void setLocation(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localLocationTracker = true;
                                       } else {
                                          localLocationTracker = false;
                                              
                                       }
                                   
                                            this.localLocation=param;
                                    

                               }
                            

                        /**
                        * field for Made_sla
                        */

                        
                                    protected boolean localMade_sla ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMade_slaTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getMade_sla(){
                               return localMade_sla;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Made_sla
                               */
                               public void setMade_sla(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localMade_slaTracker = false;
                                              
                                       } else {
                                          localMade_slaTracker = true;
                                       }
                                   
                                            this.localMade_sla=param;
                                    

                               }
                            

                        /**
                        * field for Notify
                        */

                        
                                    protected java.math.BigInteger localNotify ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNotifyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getNotify(){
                               return localNotify;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Notify
                               */
                               public void setNotify(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNotifyTracker = true;
                                       } else {
                                          localNotifyTracker = false;
                                              
                                       }
                                   
                                            this.localNotify=param;
                                    

                               }
                            

                        /**
                        * field for Number
                        */

                        
                                    protected java.lang.String localNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumberTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumber(){
                               return localNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Number
                               */
                               public void setNumber(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNumberTracker = true;
                                       } else {
                                          localNumberTracker = false;
                                              
                                       }
                                   
                                            this.localNumber=param;
                                    

                               }
                            

                        /**
                        * field for Opened_at
                        */

                        
                                    protected java.lang.String localOpened_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpened_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpened_at(){
                               return localOpened_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Opened_at
                               */
                               public void setOpened_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOpened_atTracker = true;
                                       } else {
                                          localOpened_atTracker = false;
                                              
                                       }
                                   
                                            this.localOpened_at=param;
                                    

                               }
                            

                        /**
                        * field for Opened_by
                        */

                        
                                    protected java.lang.String localOpened_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpened_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpened_by(){
                               return localOpened_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Opened_by
                               */
                               public void setOpened_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOpened_byTracker = true;
                                       } else {
                                          localOpened_byTracker = false;
                                              
                                       }
                                   
                                            this.localOpened_by=param;
                                    

                               }
                            

                        /**
                        * field for Order
                        */

                        
                                    protected java.math.BigInteger localOrder ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOrderTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getOrder(){
                               return localOrder;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Order
                               */
                               public void setOrder(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOrderTracker = true;
                                       } else {
                                          localOrderTracker = false;
                                              
                                       }
                                   
                                            this.localOrder=param;
                                    

                               }
                            

                        /**
                        * field for Parent
                        */

                        
                                    protected java.lang.String localParent ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localParentTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getParent(){
                               return localParent;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Parent
                               */
                               public void setParent(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localParentTracker = true;
                                       } else {
                                          localParentTracker = false;
                                              
                                       }
                                   
                                            this.localParent=param;
                                    

                               }
                            

                        /**
                        * field for Parent_incident
                        */

                        
                                    protected java.lang.String localParent_incident ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localParent_incidentTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getParent_incident(){
                               return localParent_incident;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Parent_incident
                               */
                               public void setParent_incident(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localParent_incidentTracker = true;
                                       } else {
                                          localParent_incidentTracker = false;
                                              
                                       }
                                   
                                            this.localParent_incident=param;
                                    

                               }
                            

                        /**
                        * field for Priority
                        */

                        
                                    protected java.math.BigInteger localPriority ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPriorityTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getPriority(){
                               return localPriority;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Priority
                               */
                               public void setPriority(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localPriorityTracker = true;
                                       } else {
                                          localPriorityTracker = false;
                                              
                                       }
                                   
                                            this.localPriority=param;
                                    

                               }
                            

                        /**
                        * field for Problem_id
                        */

                        
                                    protected java.lang.String localProblem_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProblem_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProblem_id(){
                               return localProblem_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Problem_id
                               */
                               public void setProblem_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localProblem_idTracker = true;
                                       } else {
                                          localProblem_idTracker = false;
                                              
                                       }
                                   
                                            this.localProblem_id=param;
                                    

                               }
                            

                        /**
                        * field for Reassignment_count
                        */

                        
                                    protected java.math.BigInteger localReassignment_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReassignment_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getReassignment_count(){
                               return localReassignment_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reassignment_count
                               */
                               public void setReassignment_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReassignment_countTracker = true;
                                       } else {
                                          localReassignment_countTracker = false;
                                              
                                       }
                                   
                                            this.localReassignment_count=param;
                                    

                               }
                            

                        /**
                        * field for Reopen_count
                        */

                        
                                    protected java.math.BigInteger localReopen_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReopen_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getReopen_count(){
                               return localReopen_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reopen_count
                               */
                               public void setReopen_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReopen_countTracker = true;
                                       } else {
                                          localReopen_countTracker = false;
                                              
                                       }
                                   
                                            this.localReopen_count=param;
                                    

                               }
                            

                        /**
                        * field for Resolved_at
                        */

                        
                                    protected java.lang.String localResolved_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResolved_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResolved_at(){
                               return localResolved_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Resolved_at
                               */
                               public void setResolved_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localResolved_atTracker = true;
                                       } else {
                                          localResolved_atTracker = false;
                                              
                                       }
                                   
                                            this.localResolved_at=param;
                                    

                               }
                            

                        /**
                        * field for Resolved_by
                        */

                        
                                    protected java.lang.String localResolved_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResolved_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResolved_by(){
                               return localResolved_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Resolved_by
                               */
                               public void setResolved_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localResolved_byTracker = true;
                                       } else {
                                          localResolved_byTracker = false;
                                              
                                       }
                                   
                                            this.localResolved_by=param;
                                    

                               }
                            

                        /**
                        * field for Rfc
                        */

                        
                                    protected java.lang.String localRfc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRfcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRfc(){
                               return localRfc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Rfc
                               */
                               public void setRfc(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localRfcTracker = true;
                                       } else {
                                          localRfcTracker = false;
                                              
                                       }
                                   
                                            this.localRfc=param;
                                    

                               }
                            

                        /**
                        * field for Severity
                        */

                        
                                    protected java.math.BigInteger localSeverity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSeverityTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getSeverity(){
                               return localSeverity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Severity
                               */
                               public void setSeverity(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSeverityTracker = true;
                                       } else {
                                          localSeverityTracker = false;
                                              
                                       }
                                   
                                            this.localSeverity=param;
                                    

                               }
                            

                        /**
                        * field for Short_description
                        */

                        
                                    protected java.lang.String localShort_description ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShort_descriptionTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShort_description(){
                               return localShort_description;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Short_description
                               */
                               public void setShort_description(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localShort_descriptionTracker = true;
                                       } else {
                                          localShort_descriptionTracker = false;
                                              
                                       }
                                   
                                            this.localShort_description=param;
                                    

                               }
                            

                        /**
                        * field for Skills
                        */

                        
                                    protected java.lang.String localSkills ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSkillsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSkills(){
                               return localSkills;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Skills
                               */
                               public void setSkills(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSkillsTracker = true;
                                       } else {
                                          localSkillsTracker = false;
                                              
                                       }
                                   
                                            this.localSkills=param;
                                    

                               }
                            

                        /**
                        * field for Sla_due
                        */

                        
                                    protected java.lang.String localSla_due ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSla_dueTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSla_due(){
                               return localSla_due;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sla_due
                               */
                               public void setSla_due(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSla_dueTracker = true;
                                       } else {
                                          localSla_dueTracker = false;
                                              
                                       }
                                   
                                            this.localSla_due=param;
                                    

                               }
                            

                        /**
                        * field for State
                        */

                        
                                    protected java.math.BigInteger localState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getState(){
                               return localState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param State
                               */
                               public void setState(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localStateTracker = true;
                                       } else {
                                          localStateTracker = false;
                                              
                                       }
                                   
                                            this.localState=param;
                                    

                               }
                            

                        /**
                        * field for Subcategory
                        */

                        
                                    protected java.lang.String localSubcategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSubcategoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSubcategory(){
                               return localSubcategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Subcategory
                               */
                               public void setSubcategory(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSubcategoryTracker = true;
                                       } else {
                                          localSubcategoryTracker = false;
                                              
                                       }
                                   
                                            this.localSubcategory=param;
                                    

                               }
                            

                        /**
                        * field for Time_worked
                        */

                        
                                    protected java.lang.String localTime_worked ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTime_workedTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTime_worked(){
                               return localTime_worked;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Time_worked
                               */
                               public void setTime_worked(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTime_workedTracker = true;
                                       } else {
                                          localTime_workedTracker = false;
                                              
                                       }
                                   
                                            this.localTime_worked=param;
                                    

                               }
                            

                        /**
                        * field for U_actual_elapsed_time
                        */

                        
                                    protected java.math.BigInteger localU_actual_elapsed_time ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localU_actual_elapsed_timeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getU_actual_elapsed_time(){
                               return localU_actual_elapsed_time;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param U_actual_elapsed_time
                               */
                               public void setU_actual_elapsed_time(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localU_actual_elapsed_timeTracker = true;
                                       } else {
                                          localU_actual_elapsed_timeTracker = false;
                                              
                                       }
                                   
                                            this.localU_actual_elapsed_time=param;
                                    

                               }
                            

                        /**
                        * field for U_aging_category
                        */

                        
                                    protected java.lang.String localU_aging_category ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localU_aging_categoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getU_aging_category(){
                               return localU_aging_category;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param U_aging_category
                               */
                               public void setU_aging_category(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localU_aging_categoryTracker = true;
                                       } else {
                                          localU_aging_categoryTracker = false;
                                              
                                       }
                                   
                                            this.localU_aging_category=param;
                                    

                               }
                            

                        /**
                        * field for Upon_approval
                        */

                        
                                    protected java.lang.String localUpon_approval ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUpon_approvalTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUpon_approval(){
                               return localUpon_approval;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Upon_approval
                               */
                               public void setUpon_approval(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUpon_approvalTracker = true;
                                       } else {
                                          localUpon_approvalTracker = false;
                                              
                                       }
                                   
                                            this.localUpon_approval=param;
                                    

                               }
                            

                        /**
                        * field for Upon_reject
                        */

                        
                                    protected java.lang.String localUpon_reject ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUpon_rejectTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUpon_reject(){
                               return localUpon_reject;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Upon_reject
                               */
                               public void setUpon_reject(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUpon_rejectTracker = true;
                                       } else {
                                          localUpon_rejectTracker = false;
                                              
                                       }
                                   
                                            this.localUpon_reject=param;
                                    

                               }
                            

                        /**
                        * field for Urgency
                        */

                        
                                    protected java.math.BigInteger localUrgency ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUrgencyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getUrgency(){
                               return localUrgency;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Urgency
                               */
                               public void setUrgency(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUrgencyTracker = true;
                                       } else {
                                          localUrgencyTracker = false;
                                              
                                       }
                                   
                                            this.localUrgency=param;
                                    

                               }
                            

                        /**
                        * field for User_input
                        */

                        
                                    protected java.lang.String localUser_input ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUser_inputTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUser_input(){
                               return localUser_input;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param User_input
                               */
                               public void setUser_input(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUser_inputTracker = true;
                                       } else {
                                          localUser_inputTracker = false;
                                              
                                       }
                                   
                                            this.localUser_input=param;
                                    

                               }
                            

                        /**
                        * field for Watch_list
                        */

                        
                                    protected java.lang.String localWatch_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWatch_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWatch_list(){
                               return localWatch_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Watch_list
                               */
                               public void setWatch_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWatch_listTracker = true;
                                       } else {
                                          localWatch_listTracker = false;
                                              
                                       }
                                   
                                            this.localWatch_list=param;
                                    

                               }
                            

                        /**
                        * field for Work_end
                        */

                        
                                    protected java.lang.String localWork_end ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_endTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_end(){
                               return localWork_end;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_end
                               */
                               public void setWork_end(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_endTracker = true;
                                       } else {
                                          localWork_endTracker = false;
                                              
                                       }
                                   
                                            this.localWork_end=param;
                                    

                               }
                            

                        /**
                        * field for Work_notes
                        */

                        
                                    protected java.lang.String localWork_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_notes(){
                               return localWork_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_notes
                               */
                               public void setWork_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_notesTracker = true;
                                       } else {
                                          localWork_notesTracker = false;
                                              
                                       }
                                   
                                            this.localWork_notes=param;
                                    

                               }
                            

                        /**
                        * field for Work_notes_list
                        */

                        
                                    protected java.lang.String localWork_notes_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_notes_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_notes_list(){
                               return localWork_notes_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_notes_list
                               */
                               public void setWork_notes_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_notes_listTracker = true;
                                       } else {
                                          localWork_notes_listTracker = false;
                                              
                                       }
                                   
                                            this.localWork_notes_list=param;
                                    

                               }
                            

                        /**
                        * field for Work_start
                        */

                        
                                    protected java.lang.String localWork_start ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_startTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_start(){
                               return localWork_start;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_start
                               */
                               public void setWork_start(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_startTracker = true;
                                       } else {
                                          localWork_startTracker = false;
                                              
                                       }
                                   
                                            this.localWork_start=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       Insert.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":insert",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "insert",
                           xmlWriter);
                   }

               
                   }
                if (localActiveTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"active", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"active");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("active");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("active cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActive));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localActivity_dueTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"activity_due", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"activity_due");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("activity_due");
                                    }
                                

                                          if (localActivity_due==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("activity_due cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localActivity_due);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApprovalTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval");
                                    }
                                

                                          if (localApproval==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApproval_historyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval_history", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval_history");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval_history");
                                    }
                                

                                          if (localApproval_history==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval_history cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval_history);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApproval_setTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval_set", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval_set");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval_set");
                                    }
                                

                                          if (localApproval_set==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval_set cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval_set);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAssigned_toTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"assigned_to", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"assigned_to");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("assigned_to");
                                    }
                                

                                          if (localAssigned_to==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assigned_to cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssigned_to);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"assignment_group", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"assignment_group");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("assignment_group");
                                    }
                                

                                          if (localAssignment_group==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assignment_group cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssignment_group);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localBusiness_durationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"business_duration", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"business_duration");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("business_duration");
                                    }
                                

                                          if (localBusiness_duration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("business_duration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBusiness_duration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusiness_stcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"business_stc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"business_stc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("business_stc");
                                    }
                                

                                          if (localBusiness_stc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("business_stc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_stc));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalendar_durationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"calendar_duration", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"calendar_duration");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("calendar_duration");
                                    }
                                

                                          if (localCalendar_duration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("calendar_duration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCalendar_duration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalendar_stcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"calendar_stc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"calendar_stc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("calendar_stc");
                                    }
                                

                                          if (localCalendar_stc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("calendar_stc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_stc));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"caller_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"caller_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("caller_id");
                                    }
                                

                                          if (localCaller_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("caller_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCaller_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localCategoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"category", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"category");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("category");
                                    }
                                

                                          if (localCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCaused_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"caused_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"caused_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("caused_by");
                                    }
                                

                                          if (localCaused_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("caused_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCaused_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localChild_incidentsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"child_incidents", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"child_incidents");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("child_incidents");
                                    }
                                

                                          if (localChild_incidents==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("child_incidents cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChild_incidents));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClose_codeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"close_code", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"close_code");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("close_code");
                                    }
                                

                                          if (localClose_code==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("close_code cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClose_code);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClose_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"close_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"close_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("close_notes");
                                    }
                                

                                          if (localClose_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("close_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClose_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosed_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"closed_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"closed_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("closed_at");
                                    }
                                

                                          if (localClosed_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closed_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosed_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosed_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"closed_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"closed_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("closed_by");
                                    }
                                

                                          if (localClosed_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closed_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosed_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCmdb_ciTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"cmdb_ci", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"cmdb_ci");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("cmdb_ci");
                                    }
                                

                                          if (localCmdb_ci==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cmdb_ci cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCmdb_ci);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCommentsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"comments", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"comments");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("comments");
                                    }
                                

                                          if (localComments==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("comments cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localComments);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localComments_and_work_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"comments_and_work_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"comments_and_work_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("comments_and_work_notes");
                                    }
                                

                                          if (localComments_and_work_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("comments_and_work_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localComments_and_work_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"company", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"company");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("company");
                                    }
                                

                                          if (localCompany==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("company cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompany);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localContact_typeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"contact_type", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"contact_type");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("contact_type");
                                    }
                                

                                          if (localContact_type==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("contact_type cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localContact_type);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelation_displayTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"correlation_display", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"correlation_display");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("correlation_display");
                                    }
                                

                                          if (localCorrelation_display==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlation_display cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelation_display);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelation_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"correlation_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"correlation_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("correlation_id");
                                    }
                                

                                          if (localCorrelation_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlation_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelation_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelivery_planTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"delivery_plan", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"delivery_plan");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("delivery_plan");
                                    }
                                

                                          if (localDelivery_plan==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delivery_plan cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelivery_plan);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelivery_taskTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"delivery_task", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"delivery_task");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("delivery_task");
                                    }
                                

                                          if (localDelivery_task==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delivery_task cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelivery_task);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDescriptionTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"description", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"description");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("description");
                                    }
                                

                                          if (localDescription==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDescription);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDue_dateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"due_date", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"due_date");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("due_date");
                                    }
                                

                                          if (localDue_date==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDue_date);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEscalationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"escalation", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"escalation");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("escalation");
                                    }
                                

                                          if (localEscalation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("escalation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEscalation));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExpected_startTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"expected_start", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"expected_start");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("expected_start");
                                    }
                                

                                          if (localExpected_start==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("expected_start cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExpected_start);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFollow_upTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"follow_up", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"follow_up");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("follow_up");
                                    }
                                

                                          if (localFollow_up==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("follow_up cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFollow_up);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGroup_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"group_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"group_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("group_list");
                                    }
                                

                                          if (localGroup_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("group_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGroup_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localImpactTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"impact", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"impact");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("impact");
                                    }
                                

                                          if (localImpact==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("impact cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpact));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIncident_stateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"incident_state", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"incident_state");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("incident_state");
                                    }
                                

                                          if (localIncident_state==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("incident_state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIncident_state));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localKnowledgeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"knowledge", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"knowledge");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("knowledge");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("knowledge cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKnowledge));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLocationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"location", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"location");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("location");
                                    }
                                

                                          if (localLocation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("location cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLocation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMade_slaTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"made_sla", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"made_sla");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("made_sla");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("made_sla cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMade_sla));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNotifyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"notify", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"notify");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("notify");
                                    }
                                

                                          if (localNotify==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("notify cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNotify));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNumberTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"number", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"number");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("number");
                                    }
                                

                                          if (localNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpened_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"opened_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"opened_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("opened_at");
                                    }
                                

                                          if (localOpened_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("opened_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpened_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpened_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"opened_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"opened_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("opened_by");
                                    }
                                

                                          if (localOpened_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("opened_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpened_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOrderTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"order", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"order");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("order");
                                    }
                                

                                          if (localOrder==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("order cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrder));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localParentTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"parent", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"parent");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("parent");
                                    }
                                

                                          if (localParent==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("parent cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localParent);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localParent_incidentTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"parent_incident", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"parent_incident");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("parent_incident");
                                    }
                                

                                          if (localParent_incident==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("parent_incident cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localParent_incident);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPriorityTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"priority", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"priority");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("priority");
                                    }
                                

                                          if (localPriority==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("priority cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPriority));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProblem_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"problem_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"problem_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("problem_id");
                                    }
                                

                                          if (localProblem_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("problem_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProblem_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReassignment_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"reassignment_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"reassignment_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("reassignment_count");
                                    }
                                

                                          if (localReassignment_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reassignment_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReassignment_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReopen_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"reopen_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"reopen_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("reopen_count");
                                    }
                                

                                          if (localReopen_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reopen_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReopen_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResolved_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"resolved_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"resolved_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("resolved_at");
                                    }
                                

                                          if (localResolved_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resolved_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResolved_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResolved_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"resolved_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"resolved_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("resolved_by");
                                    }
                                

                                          if (localResolved_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resolved_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResolved_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRfcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"rfc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"rfc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("rfc");
                                    }
                                

                                          if (localRfc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("rfc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRfc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSeverityTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"severity", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"severity");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("severity");
                                    }
                                

                                          if (localSeverity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("severity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeverity));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShort_descriptionTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"short_description", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"short_description");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("short_description");
                                    }
                                

                                          if (localShort_description==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("short_description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShort_description);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSkillsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"skills", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"skills");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("skills");
                                    }
                                

                                          if (localSkills==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("skills cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSkills);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSla_dueTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sla_due", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sla_due");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sla_due");
                                    }
                                

                                          if (localSla_due==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sla_due cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSla_due);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"state", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"state");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("state");
                                    }
                                

                                          if (localState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSubcategoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"subcategory", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"subcategory");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("subcategory");
                                    }
                                

                                          if (localSubcategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("subcategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSubcategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTime_workedTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"time_worked", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"time_worked");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("time_worked");
                                    }
                                

                                          if (localTime_worked==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("time_worked cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTime_worked);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localU_actual_elapsed_timeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"u_actual_elapsed_time", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"u_actual_elapsed_time");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("u_actual_elapsed_time");
                                    }
                                

                                          if (localU_actual_elapsed_time==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("u_actual_elapsed_time cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_actual_elapsed_time));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localU_aging_categoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"u_aging_category", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"u_aging_category");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("u_aging_category");
                                    }
                                

                                          if (localU_aging_category==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("u_aging_category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localU_aging_category);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUpon_approvalTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"upon_approval", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"upon_approval");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("upon_approval");
                                    }
                                

                                          if (localUpon_approval==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("upon_approval cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUpon_approval);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUpon_rejectTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"upon_reject", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"upon_reject");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("upon_reject");
                                    }
                                

                                          if (localUpon_reject==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("upon_reject cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUpon_reject);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUrgencyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"urgency", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"urgency");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("urgency");
                                    }
                                

                                          if (localUrgency==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("urgency cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrgency));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUser_inputTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"user_input", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"user_input");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("user_input");
                                    }
                                

                                          if (localUser_input==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("user_input cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUser_input);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWatch_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"watch_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"watch_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("watch_list");
                                    }
                                

                                          if (localWatch_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("watch_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWatch_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_endTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_end", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_end");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_end");
                                    }
                                

                                          if (localWork_end==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_end cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_end);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_notes");
                                    }
                                

                                          if (localWork_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_notes_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_notes_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_notes_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_notes_list");
                                    }
                                

                                          if (localWork_notes_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_notes_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_notes_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_startTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_start", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_start");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_start");
                                    }
                                

                                          if (localWork_start==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_start cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_start);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localActiveTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "active"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActive));
                            } if (localActivity_dueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "activity_due"));
                                 
                                        if (localActivity_due != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActivity_due));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("activity_due cannot be null!!");
                                        }
                                    } if (localApprovalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval"));
                                 
                                        if (localApproval != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval cannot be null!!");
                                        }
                                    } if (localApproval_historyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval_history"));
                                 
                                        if (localApproval_history != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval_history));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval_history cannot be null!!");
                                        }
                                    } if (localApproval_setTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval_set"));
                                 
                                        if (localApproval_set != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval_set));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval_set cannot be null!!");
                                        }
                                    } if (localAssigned_toTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "assigned_to"));
                                 
                                        if (localAssigned_to != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssigned_to));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assigned_to cannot be null!!");
                                        }
                                    }
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "assignment_group"));
                                 
                                        if (localAssignment_group != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssignment_group));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assignment_group cannot be null!!");
                                        }
                                     if (localBusiness_durationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "business_duration"));
                                 
                                        if (localBusiness_duration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_duration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("business_duration cannot be null!!");
                                        }
                                    } if (localBusiness_stcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "business_stc"));
                                 
                                        if (localBusiness_stc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_stc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("business_stc cannot be null!!");
                                        }
                                    } if (localCalendar_durationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "calendar_duration"));
                                 
                                        if (localCalendar_duration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_duration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("calendar_duration cannot be null!!");
                                        }
                                    } if (localCalendar_stcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "calendar_stc"));
                                 
                                        if (localCalendar_stc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_stc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("calendar_stc cannot be null!!");
                                        }
                                    }
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "caller_id"));
                                 
                                        if (localCaller_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCaller_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("caller_id cannot be null!!");
                                        }
                                     if (localCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "category"));
                                 
                                        if (localCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                        }
                                    } if (localCaused_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "caused_by"));
                                 
                                        if (localCaused_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCaused_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("caused_by cannot be null!!");
                                        }
                                    } if (localChild_incidentsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "child_incidents"));
                                 
                                        if (localChild_incidents != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChild_incidents));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("child_incidents cannot be null!!");
                                        }
                                    } if (localClose_codeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "close_code"));
                                 
                                        if (localClose_code != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClose_code));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("close_code cannot be null!!");
                                        }
                                    } if (localClose_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "close_notes"));
                                 
                                        if (localClose_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClose_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("close_notes cannot be null!!");
                                        }
                                    } if (localClosed_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "closed_at"));
                                 
                                        if (localClosed_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosed_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closed_at cannot be null!!");
                                        }
                                    } if (localClosed_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "closed_by"));
                                 
                                        if (localClosed_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosed_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closed_by cannot be null!!");
                                        }
                                    } if (localCmdb_ciTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "cmdb_ci"));
                                 
                                        if (localCmdb_ci != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCmdb_ci));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cmdb_ci cannot be null!!");
                                        }
                                    } if (localCommentsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "comments"));
                                 
                                        if (localComments != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComments));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("comments cannot be null!!");
                                        }
                                    } if (localComments_and_work_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "comments_and_work_notes"));
                                 
                                        if (localComments_and_work_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComments_and_work_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("comments_and_work_notes cannot be null!!");
                                        }
                                    } if (localCompanyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "company"));
                                 
                                        if (localCompany != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompany));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("company cannot be null!!");
                                        }
                                    } if (localContact_typeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "contact_type"));
                                 
                                        if (localContact_type != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localContact_type));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("contact_type cannot be null!!");
                                        }
                                    } if (localCorrelation_displayTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "correlation_display"));
                                 
                                        if (localCorrelation_display != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelation_display));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlation_display cannot be null!!");
                                        }
                                    } if (localCorrelation_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "correlation_id"));
                                 
                                        if (localCorrelation_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelation_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlation_id cannot be null!!");
                                        }
                                    } if (localDelivery_planTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "delivery_plan"));
                                 
                                        if (localDelivery_plan != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelivery_plan));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delivery_plan cannot be null!!");
                                        }
                                    } if (localDelivery_taskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "delivery_task"));
                                 
                                        if (localDelivery_task != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelivery_task));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delivery_task cannot be null!!");
                                        }
                                    } if (localDescriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "description"));
                                 
                                        if (localDescription != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescription));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                        }
                                    } if (localDue_dateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "due_date"));
                                 
                                        if (localDue_date != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDue_date));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                        }
                                    } if (localEscalationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "escalation"));
                                 
                                        if (localEscalation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEscalation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("escalation cannot be null!!");
                                        }
                                    } if (localExpected_startTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "expected_start"));
                                 
                                        if (localExpected_start != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExpected_start));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("expected_start cannot be null!!");
                                        }
                                    } if (localFollow_upTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "follow_up"));
                                 
                                        if (localFollow_up != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFollow_up));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("follow_up cannot be null!!");
                                        }
                                    } if (localGroup_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "group_list"));
                                 
                                        if (localGroup_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGroup_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("group_list cannot be null!!");
                                        }
                                    } if (localImpactTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "impact"));
                                 
                                        if (localImpact != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpact));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("impact cannot be null!!");
                                        }
                                    } if (localIncident_stateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "incident_state"));
                                 
                                        if (localIncident_state != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIncident_state));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("incident_state cannot be null!!");
                                        }
                                    } if (localKnowledgeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "knowledge"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKnowledge));
                            } if (localLocationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "location"));
                                 
                                        if (localLocation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLocation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("location cannot be null!!");
                                        }
                                    } if (localMade_slaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "made_sla"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMade_sla));
                            } if (localNotifyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "notify"));
                                 
                                        if (localNotify != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNotify));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("notify cannot be null!!");
                                        }
                                    } if (localNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "number"));
                                 
                                        if (localNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                        }
                                    } if (localOpened_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "opened_at"));
                                 
                                        if (localOpened_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpened_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("opened_at cannot be null!!");
                                        }
                                    } if (localOpened_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "opened_by"));
                                 
                                        if (localOpened_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpened_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("opened_by cannot be null!!");
                                        }
                                    } if (localOrderTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "order"));
                                 
                                        if (localOrder != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrder));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("order cannot be null!!");
                                        }
                                    } if (localParentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "parent"));
                                 
                                        if (localParent != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParent));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("parent cannot be null!!");
                                        }
                                    } if (localParent_incidentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "parent_incident"));
                                 
                                        if (localParent_incident != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParent_incident));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("parent_incident cannot be null!!");
                                        }
                                    } if (localPriorityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "priority"));
                                 
                                        if (localPriority != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPriority));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("priority cannot be null!!");
                                        }
                                    } if (localProblem_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "problem_id"));
                                 
                                        if (localProblem_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProblem_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("problem_id cannot be null!!");
                                        }
                                    } if (localReassignment_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "reassignment_count"));
                                 
                                        if (localReassignment_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReassignment_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reassignment_count cannot be null!!");
                                        }
                                    } if (localReopen_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "reopen_count"));
                                 
                                        if (localReopen_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReopen_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reopen_count cannot be null!!");
                                        }
                                    } if (localResolved_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "resolved_at"));
                                 
                                        if (localResolved_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResolved_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resolved_at cannot be null!!");
                                        }
                                    } if (localResolved_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "resolved_by"));
                                 
                                        if (localResolved_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResolved_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resolved_by cannot be null!!");
                                        }
                                    } if (localRfcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "rfc"));
                                 
                                        if (localRfc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRfc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("rfc cannot be null!!");
                                        }
                                    } if (localSeverityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "severity"));
                                 
                                        if (localSeverity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeverity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("severity cannot be null!!");
                                        }
                                    } if (localShort_descriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "short_description"));
                                 
                                        if (localShort_description != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShort_description));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("short_description cannot be null!!");
                                        }
                                    } if (localSkillsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "skills"));
                                 
                                        if (localSkills != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSkills));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("skills cannot be null!!");
                                        }
                                    } if (localSla_dueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sla_due"));
                                 
                                        if (localSla_due != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSla_due));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sla_due cannot be null!!");
                                        }
                                    } if (localStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "state"));
                                 
                                        if (localState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                        }
                                    } if (localSubcategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "subcategory"));
                                 
                                        if (localSubcategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSubcategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("subcategory cannot be null!!");
                                        }
                                    } if (localTime_workedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "time_worked"));
                                 
                                        if (localTime_worked != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTime_worked));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("time_worked cannot be null!!");
                                        }
                                    } if (localU_actual_elapsed_timeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "u_actual_elapsed_time"));
                                 
                                        if (localU_actual_elapsed_time != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_actual_elapsed_time));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("u_actual_elapsed_time cannot be null!!");
                                        }
                                    } if (localU_aging_categoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "u_aging_category"));
                                 
                                        if (localU_aging_category != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_aging_category));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("u_aging_category cannot be null!!");
                                        }
                                    } if (localUpon_approvalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "upon_approval"));
                                 
                                        if (localUpon_approval != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUpon_approval));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("upon_approval cannot be null!!");
                                        }
                                    } if (localUpon_rejectTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "upon_reject"));
                                 
                                        if (localUpon_reject != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUpon_reject));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("upon_reject cannot be null!!");
                                        }
                                    } if (localUrgencyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "urgency"));
                                 
                                        if (localUrgency != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrgency));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("urgency cannot be null!!");
                                        }
                                    } if (localUser_inputTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "user_input"));
                                 
                                        if (localUser_input != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUser_input));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("user_input cannot be null!!");
                                        }
                                    } if (localWatch_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "watch_list"));
                                 
                                        if (localWatch_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWatch_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("watch_list cannot be null!!");
                                        }
                                    } if (localWork_endTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_end"));
                                 
                                        if (localWork_end != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_end));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_end cannot be null!!");
                                        }
                                    } if (localWork_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_notes"));
                                 
                                        if (localWork_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_notes cannot be null!!");
                                        }
                                    } if (localWork_notes_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_notes_list"));
                                 
                                        if (localWork_notes_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_notes_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_notes_list cannot be null!!");
                                        }
                                    } if (localWork_startTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_start"));
                                 
                                        if (localWork_start != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_start));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_start cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Insert parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Insert object =
                new Insert();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"insert".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Insert)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","active").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActive(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","activity_due").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActivity_due(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval_history").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval_history(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval_set").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval_set(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","assigned_to").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssigned_to(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","assignment_group").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssignment_group(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","business_duration").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusiness_duration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","business_stc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusiness_stc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","calendar_duration").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalendar_duration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","calendar_stc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalendar_stc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","caller_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCaller_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","category").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","caused_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCaused_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","child_incidents").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setChild_incidents(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","close_code").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClose_code(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","close_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClose_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","closed_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosed_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","closed_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosed_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","cmdb_ci").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCmdb_ci(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","comments").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setComments(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","comments_and_work_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setComments_and_work_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","company").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompany(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","contact_type").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setContact_type(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","correlation_display").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelation_display(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","correlation_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelation_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","delivery_plan").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelivery_plan(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","delivery_task").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelivery_task(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","description").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDescription(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","due_date").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDue_date(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","escalation").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEscalation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","expected_start").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExpected_start(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","follow_up").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFollow_up(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","group_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGroup_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","impact").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImpact(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","incident_state").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIncident_state(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","knowledge").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setKnowledge(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","location").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLocation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","made_sla").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMade_sla(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","notify").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNotify(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","number").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","opened_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpened_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","opened_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpened_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","order").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOrder(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","parent").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setParent(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","parent_incident").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setParent_incident(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","priority").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPriority(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","problem_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProblem_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","reassignment_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReassignment_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","reopen_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReopen_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","resolved_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResolved_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","resolved_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResolved_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","rfc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRfc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","severity").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSeverity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","short_description").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShort_description(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","skills").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSkills(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sla_due").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSla_due(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","state").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","subcategory").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSubcategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","time_worked").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTime_worked(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","u_actual_elapsed_time").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setU_actual_elapsed_time(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","u_aging_category").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setU_aging_category(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","upon_approval").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUpon_approval(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","upon_reject").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUpon_reject(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","urgency").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUrgency(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","user_input").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUser_input(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","watch_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWatch_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_end").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_end(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_notes_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_notes_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_start").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_start(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class GetKeys
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.service-now.com/incident",
                "getKeys",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for Active
                        */

                        
                                    protected boolean localActive ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActiveTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getActive(){
                               return localActive;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Active
                               */
                               public void setActive(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localActiveTracker = false;
                                              
                                       } else {
                                          localActiveTracker = true;
                                       }
                                   
                                            this.localActive=param;
                                    

                               }
                            

                        /**
                        * field for Activity_due
                        */

                        
                                    protected java.lang.String localActivity_due ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActivity_dueTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getActivity_due(){
                               return localActivity_due;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Activity_due
                               */
                               public void setActivity_due(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localActivity_dueTracker = true;
                                       } else {
                                          localActivity_dueTracker = false;
                                              
                                       }
                                   
                                            this.localActivity_due=param;
                                    

                               }
                            

                        /**
                        * field for Approval
                        */

                        
                                    protected java.lang.String localApproval ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApprovalTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval(){
                               return localApproval;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval
                               */
                               public void setApproval(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApprovalTracker = true;
                                       } else {
                                          localApprovalTracker = false;
                                              
                                       }
                                   
                                            this.localApproval=param;
                                    

                               }
                            

                        /**
                        * field for Approval_history
                        */

                        
                                    protected java.lang.String localApproval_history ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApproval_historyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval_history(){
                               return localApproval_history;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval_history
                               */
                               public void setApproval_history(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApproval_historyTracker = true;
                                       } else {
                                          localApproval_historyTracker = false;
                                              
                                       }
                                   
                                            this.localApproval_history=param;
                                    

                               }
                            

                        /**
                        * field for Approval_set
                        */

                        
                                    protected java.lang.String localApproval_set ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApproval_setTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval_set(){
                               return localApproval_set;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval_set
                               */
                               public void setApproval_set(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApproval_setTracker = true;
                                       } else {
                                          localApproval_setTracker = false;
                                              
                                       }
                                   
                                            this.localApproval_set=param;
                                    

                               }
                            

                        /**
                        * field for Assigned_to
                        */

                        
                                    protected java.lang.String localAssigned_to ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAssigned_toTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssigned_to(){
                               return localAssigned_to;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Assigned_to
                               */
                               public void setAssigned_to(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAssigned_toTracker = true;
                                       } else {
                                          localAssigned_toTracker = false;
                                              
                                       }
                                   
                                            this.localAssigned_to=param;
                                    

                               }
                            

                        /**
                        * field for Assignment_group
                        */

                        
                                    protected java.lang.String localAssignment_group ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAssignment_groupTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssignment_group(){
                               return localAssignment_group;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Assignment_group
                               */
                               public void setAssignment_group(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAssignment_groupTracker = true;
                                       } else {
                                          localAssignment_groupTracker = false;
                                              
                                       }
                                   
                                            this.localAssignment_group=param;
                                    

                               }
                            

                        /**
                        * field for Business_duration
                        */

                        
                                    protected java.lang.String localBusiness_duration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusiness_durationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBusiness_duration(){
                               return localBusiness_duration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Business_duration
                               */
                               public void setBusiness_duration(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBusiness_durationTracker = true;
                                       } else {
                                          localBusiness_durationTracker = false;
                                              
                                       }
                                   
                                            this.localBusiness_duration=param;
                                    

                               }
                            

                        /**
                        * field for Business_stc
                        */

                        
                                    protected java.math.BigInteger localBusiness_stc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusiness_stcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getBusiness_stc(){
                               return localBusiness_stc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Business_stc
                               */
                               public void setBusiness_stc(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBusiness_stcTracker = true;
                                       } else {
                                          localBusiness_stcTracker = false;
                                              
                                       }
                                   
                                            this.localBusiness_stc=param;
                                    

                               }
                            

                        /**
                        * field for Calendar_duration
                        */

                        
                                    protected java.lang.String localCalendar_duration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalendar_durationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCalendar_duration(){
                               return localCalendar_duration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calendar_duration
                               */
                               public void setCalendar_duration(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCalendar_durationTracker = true;
                                       } else {
                                          localCalendar_durationTracker = false;
                                              
                                       }
                                   
                                            this.localCalendar_duration=param;
                                    

                               }
                            

                        /**
                        * field for Calendar_stc
                        */

                        
                                    protected java.math.BigInteger localCalendar_stc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalendar_stcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getCalendar_stc(){
                               return localCalendar_stc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calendar_stc
                               */
                               public void setCalendar_stc(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCalendar_stcTracker = true;
                                       } else {
                                          localCalendar_stcTracker = false;
                                              
                                       }
                                   
                                            this.localCalendar_stc=param;
                                    

                               }
                            

                        /**
                        * field for Caller_id
                        */

                        
                                    protected java.lang.String localCaller_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCaller_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCaller_id(){
                               return localCaller_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Caller_id
                               */
                               public void setCaller_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCaller_idTracker = true;
                                       } else {
                                          localCaller_idTracker = false;
                                              
                                       }
                                   
                                            this.localCaller_id=param;
                                    

                               }
                            

                        /**
                        * field for Category
                        */

                        
                                    protected java.lang.String localCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCategoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCategory(){
                               return localCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Category
                               */
                               public void setCategory(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCategoryTracker = true;
                                       } else {
                                          localCategoryTracker = false;
                                              
                                       }
                                   
                                            this.localCategory=param;
                                    

                               }
                            

                        /**
                        * field for Caused_by
                        */

                        
                                    protected java.lang.String localCaused_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCaused_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCaused_by(){
                               return localCaused_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Caused_by
                               */
                               public void setCaused_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCaused_byTracker = true;
                                       } else {
                                          localCaused_byTracker = false;
                                              
                                       }
                                   
                                            this.localCaused_by=param;
                                    

                               }
                            

                        /**
                        * field for Child_incidents
                        */

                        
                                    protected java.math.BigInteger localChild_incidents ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChild_incidentsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getChild_incidents(){
                               return localChild_incidents;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Child_incidents
                               */
                               public void setChild_incidents(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localChild_incidentsTracker = true;
                                       } else {
                                          localChild_incidentsTracker = false;
                                              
                                       }
                                   
                                            this.localChild_incidents=param;
                                    

                               }
                            

                        /**
                        * field for Close_code
                        */

                        
                                    protected java.lang.String localClose_code ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClose_codeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClose_code(){
                               return localClose_code;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Close_code
                               */
                               public void setClose_code(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClose_codeTracker = true;
                                       } else {
                                          localClose_codeTracker = false;
                                              
                                       }
                                   
                                            this.localClose_code=param;
                                    

                               }
                            

                        /**
                        * field for Close_notes
                        */

                        
                                    protected java.lang.String localClose_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClose_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClose_notes(){
                               return localClose_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Close_notes
                               */
                               public void setClose_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClose_notesTracker = true;
                                       } else {
                                          localClose_notesTracker = false;
                                              
                                       }
                                   
                                            this.localClose_notes=param;
                                    

                               }
                            

                        /**
                        * field for Closed_at
                        */

                        
                                    protected java.lang.String localClosed_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosed_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosed_at(){
                               return localClosed_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Closed_at
                               */
                               public void setClosed_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClosed_atTracker = true;
                                       } else {
                                          localClosed_atTracker = false;
                                              
                                       }
                                   
                                            this.localClosed_at=param;
                                    

                               }
                            

                        /**
                        * field for Closed_by
                        */

                        
                                    protected java.lang.String localClosed_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosed_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosed_by(){
                               return localClosed_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Closed_by
                               */
                               public void setClosed_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClosed_byTracker = true;
                                       } else {
                                          localClosed_byTracker = false;
                                              
                                       }
                                   
                                            this.localClosed_by=param;
                                    

                               }
                            

                        /**
                        * field for Cmdb_ci
                        */

                        
                                    protected java.lang.String localCmdb_ci ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCmdb_ciTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCmdb_ci(){
                               return localCmdb_ci;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cmdb_ci
                               */
                               public void setCmdb_ci(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCmdb_ciTracker = true;
                                       } else {
                                          localCmdb_ciTracker = false;
                                              
                                       }
                                   
                                            this.localCmdb_ci=param;
                                    

                               }
                            

                        /**
                        * field for Comments
                        */

                        
                                    protected java.lang.String localComments ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCommentsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getComments(){
                               return localComments;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Comments
                               */
                               public void setComments(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCommentsTracker = true;
                                       } else {
                                          localCommentsTracker = false;
                                              
                                       }
                                   
                                            this.localComments=param;
                                    

                               }
                            

                        /**
                        * field for Comments_and_work_notes
                        */

                        
                                    protected java.lang.String localComments_and_work_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localComments_and_work_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getComments_and_work_notes(){
                               return localComments_and_work_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Comments_and_work_notes
                               */
                               public void setComments_and_work_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localComments_and_work_notesTracker = true;
                                       } else {
                                          localComments_and_work_notesTracker = false;
                                              
                                       }
                                   
                                            this.localComments_and_work_notes=param;
                                    

                               }
                            

                        /**
                        * field for Company
                        */

                        
                                    protected java.lang.String localCompany ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompany(){
                               return localCompany;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Company
                               */
                               public void setCompany(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCompanyTracker = true;
                                       } else {
                                          localCompanyTracker = false;
                                              
                                       }
                                   
                                            this.localCompany=param;
                                    

                               }
                            

                        /**
                        * field for Contact_type
                        */

                        
                                    protected java.lang.String localContact_type ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localContact_typeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getContact_type(){
                               return localContact_type;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Contact_type
                               */
                               public void setContact_type(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localContact_typeTracker = true;
                                       } else {
                                          localContact_typeTracker = false;
                                              
                                       }
                                   
                                            this.localContact_type=param;
                                    

                               }
                            

                        /**
                        * field for Correlation_display
                        */

                        
                                    protected java.lang.String localCorrelation_display ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelation_displayTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelation_display(){
                               return localCorrelation_display;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Correlation_display
                               */
                               public void setCorrelation_display(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCorrelation_displayTracker = true;
                                       } else {
                                          localCorrelation_displayTracker = false;
                                              
                                       }
                                   
                                            this.localCorrelation_display=param;
                                    

                               }
                            

                        /**
                        * field for Correlation_id
                        */

                        
                                    protected java.lang.String localCorrelation_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelation_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelation_id(){
                               return localCorrelation_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Correlation_id
                               */
                               public void setCorrelation_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCorrelation_idTracker = true;
                                       } else {
                                          localCorrelation_idTracker = false;
                                              
                                       }
                                   
                                            this.localCorrelation_id=param;
                                    

                               }
                            

                        /**
                        * field for Delivery_plan
                        */

                        
                                    protected java.lang.String localDelivery_plan ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelivery_planTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelivery_plan(){
                               return localDelivery_plan;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Delivery_plan
                               */
                               public void setDelivery_plan(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDelivery_planTracker = true;
                                       } else {
                                          localDelivery_planTracker = false;
                                              
                                       }
                                   
                                            this.localDelivery_plan=param;
                                    

                               }
                            

                        /**
                        * field for Delivery_task
                        */

                        
                                    protected java.lang.String localDelivery_task ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelivery_taskTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelivery_task(){
                               return localDelivery_task;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Delivery_task
                               */
                               public void setDelivery_task(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDelivery_taskTracker = true;
                                       } else {
                                          localDelivery_taskTracker = false;
                                              
                                       }
                                   
                                            this.localDelivery_task=param;
                                    

                               }
                            

                        /**
                        * field for Description
                        */

                        
                                    protected java.lang.String localDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescriptionTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDescription(){
                               return localDescription;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Description
                               */
                               public void setDescription(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDescriptionTracker = true;
                                       } else {
                                          localDescriptionTracker = false;
                                              
                                       }
                                   
                                            this.localDescription=param;
                                    

                               }
                            

                        /**
                        * field for Due_date
                        */

                        
                                    protected java.lang.String localDue_date ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDue_dateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDue_date(){
                               return localDue_date;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Due_date
                               */
                               public void setDue_date(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDue_dateTracker = true;
                                       } else {
                                          localDue_dateTracker = false;
                                              
                                       }
                                   
                                            this.localDue_date=param;
                                    

                               }
                            

                        /**
                        * field for Escalation
                        */

                        
                                    protected java.math.BigInteger localEscalation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEscalationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getEscalation(){
                               return localEscalation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Escalation
                               */
                               public void setEscalation(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localEscalationTracker = true;
                                       } else {
                                          localEscalationTracker = false;
                                              
                                       }
                                   
                                            this.localEscalation=param;
                                    

                               }
                            

                        /**
                        * field for Expected_start
                        */

                        
                                    protected java.lang.String localExpected_start ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpected_startTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExpected_start(){
                               return localExpected_start;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Expected_start
                               */
                               public void setExpected_start(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localExpected_startTracker = true;
                                       } else {
                                          localExpected_startTracker = false;
                                              
                                       }
                                   
                                            this.localExpected_start=param;
                                    

                               }
                            

                        /**
                        * field for Follow_up
                        */

                        
                                    protected java.lang.String localFollow_up ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFollow_upTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFollow_up(){
                               return localFollow_up;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Follow_up
                               */
                               public void setFollow_up(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFollow_upTracker = true;
                                       } else {
                                          localFollow_upTracker = false;
                                              
                                       }
                                   
                                            this.localFollow_up=param;
                                    

                               }
                            

                        /**
                        * field for Group_list
                        */

                        
                                    protected java.lang.String localGroup_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGroup_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGroup_list(){
                               return localGroup_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Group_list
                               */
                               public void setGroup_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localGroup_listTracker = true;
                                       } else {
                                          localGroup_listTracker = false;
                                              
                                       }
                                   
                                            this.localGroup_list=param;
                                    

                               }
                            

                        /**
                        * field for Impact
                        */

                        
                                    protected java.math.BigInteger localImpact ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImpactTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getImpact(){
                               return localImpact;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Impact
                               */
                               public void setImpact(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localImpactTracker = true;
                                       } else {
                                          localImpactTracker = false;
                                              
                                       }
                                   
                                            this.localImpact=param;
                                    

                               }
                            

                        /**
                        * field for Incident_state
                        */

                        
                                    protected java.math.BigInteger localIncident_state ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIncident_stateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getIncident_state(){
                               return localIncident_state;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Incident_state
                               */
                               public void setIncident_state(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localIncident_stateTracker = true;
                                       } else {
                                          localIncident_stateTracker = false;
                                              
                                       }
                                   
                                            this.localIncident_state=param;
                                    

                               }
                            

                        /**
                        * field for Knowledge
                        */

                        
                                    protected boolean localKnowledge ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localKnowledgeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getKnowledge(){
                               return localKnowledge;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Knowledge
                               */
                               public void setKnowledge(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localKnowledgeTracker = false;
                                              
                                       } else {
                                          localKnowledgeTracker = true;
                                       }
                                   
                                            this.localKnowledge=param;
                                    

                               }
                            

                        /**
                        * field for Location
                        */

                        
                                    protected java.lang.String localLocation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLocationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLocation(){
                               return localLocation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Location
                               */
                               public void setLocation(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localLocationTracker = true;
                                       } else {
                                          localLocationTracker = false;
                                              
                                       }
                                   
                                            this.localLocation=param;
                                    

                               }
                            

                        /**
                        * field for Made_sla
                        */

                        
                                    protected boolean localMade_sla ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMade_slaTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getMade_sla(){
                               return localMade_sla;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Made_sla
                               */
                               public void setMade_sla(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localMade_slaTracker = false;
                                              
                                       } else {
                                          localMade_slaTracker = true;
                                       }
                                   
                                            this.localMade_sla=param;
                                    

                               }
                            

                        /**
                        * field for Notify
                        */

                        
                                    protected java.math.BigInteger localNotify ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNotifyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getNotify(){
                               return localNotify;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Notify
                               */
                               public void setNotify(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNotifyTracker = true;
                                       } else {
                                          localNotifyTracker = false;
                                              
                                       }
                                   
                                            this.localNotify=param;
                                    

                               }
                            

                        /**
                        * field for Number
                        */

                        
                                    protected java.lang.String localNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumberTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumber(){
                               return localNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Number
                               */
                               public void setNumber(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNumberTracker = true;
                                       } else {
                                          localNumberTracker = false;
                                              
                                       }
                                   
                                            this.localNumber=param;
                                    

                               }
                            

                        /**
                        * field for Opened_at
                        */

                        
                                    protected java.lang.String localOpened_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpened_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpened_at(){
                               return localOpened_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Opened_at
                               */
                               public void setOpened_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOpened_atTracker = true;
                                       } else {
                                          localOpened_atTracker = false;
                                              
                                       }
                                   
                                            this.localOpened_at=param;
                                    

                               }
                            

                        /**
                        * field for Opened_by
                        */

                        
                                    protected java.lang.String localOpened_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpened_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpened_by(){
                               return localOpened_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Opened_by
                               */
                               public void setOpened_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOpened_byTracker = true;
                                       } else {
                                          localOpened_byTracker = false;
                                              
                                       }
                                   
                                            this.localOpened_by=param;
                                    

                               }
                            

                        /**
                        * field for Order
                        */

                        
                                    protected java.math.BigInteger localOrder ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOrderTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getOrder(){
                               return localOrder;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Order
                               */
                               public void setOrder(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOrderTracker = true;
                                       } else {
                                          localOrderTracker = false;
                                              
                                       }
                                   
                                            this.localOrder=param;
                                    

                               }
                            

                        /**
                        * field for Parent
                        */

                        
                                    protected java.lang.String localParent ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localParentTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getParent(){
                               return localParent;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Parent
                               */
                               public void setParent(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localParentTracker = true;
                                       } else {
                                          localParentTracker = false;
                                              
                                       }
                                   
                                            this.localParent=param;
                                    

                               }
                            

                        /**
                        * field for Parent_incident
                        */

                        
                                    protected java.lang.String localParent_incident ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localParent_incidentTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getParent_incident(){
                               return localParent_incident;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Parent_incident
                               */
                               public void setParent_incident(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localParent_incidentTracker = true;
                                       } else {
                                          localParent_incidentTracker = false;
                                              
                                       }
                                   
                                            this.localParent_incident=param;
                                    

                               }
                            

                        /**
                        * field for Priority
                        */

                        
                                    protected java.math.BigInteger localPriority ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPriorityTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getPriority(){
                               return localPriority;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Priority
                               */
                               public void setPriority(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localPriorityTracker = true;
                                       } else {
                                          localPriorityTracker = false;
                                              
                                       }
                                   
                                            this.localPriority=param;
                                    

                               }
                            

                        /**
                        * field for Problem_id
                        */

                        
                                    protected java.lang.String localProblem_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProblem_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProblem_id(){
                               return localProblem_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Problem_id
                               */
                               public void setProblem_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localProblem_idTracker = true;
                                       } else {
                                          localProblem_idTracker = false;
                                              
                                       }
                                   
                                            this.localProblem_id=param;
                                    

                               }
                            

                        /**
                        * field for Reassignment_count
                        */

                        
                                    protected java.math.BigInteger localReassignment_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReassignment_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getReassignment_count(){
                               return localReassignment_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reassignment_count
                               */
                               public void setReassignment_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReassignment_countTracker = true;
                                       } else {
                                          localReassignment_countTracker = false;
                                              
                                       }
                                   
                                            this.localReassignment_count=param;
                                    

                               }
                            

                        /**
                        * field for Reopen_count
                        */

                        
                                    protected java.math.BigInteger localReopen_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReopen_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getReopen_count(){
                               return localReopen_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reopen_count
                               */
                               public void setReopen_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReopen_countTracker = true;
                                       } else {
                                          localReopen_countTracker = false;
                                              
                                       }
                                   
                                            this.localReopen_count=param;
                                    

                               }
                            

                        /**
                        * field for Resolved_at
                        */

                        
                                    protected java.lang.String localResolved_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResolved_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResolved_at(){
                               return localResolved_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Resolved_at
                               */
                               public void setResolved_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localResolved_atTracker = true;
                                       } else {
                                          localResolved_atTracker = false;
                                              
                                       }
                                   
                                            this.localResolved_at=param;
                                    

                               }
                            

                        /**
                        * field for Resolved_by
                        */

                        
                                    protected java.lang.String localResolved_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResolved_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResolved_by(){
                               return localResolved_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Resolved_by
                               */
                               public void setResolved_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localResolved_byTracker = true;
                                       } else {
                                          localResolved_byTracker = false;
                                              
                                       }
                                   
                                            this.localResolved_by=param;
                                    

                               }
                            

                        /**
                        * field for Rfc
                        */

                        
                                    protected java.lang.String localRfc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRfcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRfc(){
                               return localRfc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Rfc
                               */
                               public void setRfc(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localRfcTracker = true;
                                       } else {
                                          localRfcTracker = false;
                                              
                                       }
                                   
                                            this.localRfc=param;
                                    

                               }
                            

                        /**
                        * field for Severity
                        */

                        
                                    protected java.math.BigInteger localSeverity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSeverityTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getSeverity(){
                               return localSeverity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Severity
                               */
                               public void setSeverity(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSeverityTracker = true;
                                       } else {
                                          localSeverityTracker = false;
                                              
                                       }
                                   
                                            this.localSeverity=param;
                                    

                               }
                            

                        /**
                        * field for Short_description
                        */

                        
                                    protected java.lang.String localShort_description ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShort_descriptionTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShort_description(){
                               return localShort_description;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Short_description
                               */
                               public void setShort_description(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localShort_descriptionTracker = true;
                                       } else {
                                          localShort_descriptionTracker = false;
                                              
                                       }
                                   
                                            this.localShort_description=param;
                                    

                               }
                            

                        /**
                        * field for Skills
                        */

                        
                                    protected java.lang.String localSkills ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSkillsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSkills(){
                               return localSkills;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Skills
                               */
                               public void setSkills(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSkillsTracker = true;
                                       } else {
                                          localSkillsTracker = false;
                                              
                                       }
                                   
                                            this.localSkills=param;
                                    

                               }
                            

                        /**
                        * field for Sla_due
                        */

                        
                                    protected java.lang.String localSla_due ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSla_dueTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSla_due(){
                               return localSla_due;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sla_due
                               */
                               public void setSla_due(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSla_dueTracker = true;
                                       } else {
                                          localSla_dueTracker = false;
                                              
                                       }
                                   
                                            this.localSla_due=param;
                                    

                               }
                            

                        /**
                        * field for State
                        */

                        
                                    protected java.math.BigInteger localState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getState(){
                               return localState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param State
                               */
                               public void setState(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localStateTracker = true;
                                       } else {
                                          localStateTracker = false;
                                              
                                       }
                                   
                                            this.localState=param;
                                    

                               }
                            

                        /**
                        * field for Subcategory
                        */

                        
                                    protected java.lang.String localSubcategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSubcategoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSubcategory(){
                               return localSubcategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Subcategory
                               */
                               public void setSubcategory(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSubcategoryTracker = true;
                                       } else {
                                          localSubcategoryTracker = false;
                                              
                                       }
                                   
                                            this.localSubcategory=param;
                                    

                               }
                            

                        /**
                        * field for Sys_class_name
                        */

                        
                                    protected java.lang.String localSys_class_name ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_class_nameTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_class_name(){
                               return localSys_class_name;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_class_name
                               */
                               public void setSys_class_name(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_class_nameTracker = true;
                                       } else {
                                          localSys_class_nameTracker = false;
                                              
                                       }
                                   
                                            this.localSys_class_name=param;
                                    

                               }
                            

                        /**
                        * field for Sys_created_by
                        */

                        
                                    protected java.lang.String localSys_created_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_created_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_created_by(){
                               return localSys_created_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_created_by
                               */
                               public void setSys_created_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_created_byTracker = true;
                                       } else {
                                          localSys_created_byTracker = false;
                                              
                                       }
                                   
                                            this.localSys_created_by=param;
                                    

                               }
                            

                        /**
                        * field for Sys_created_on
                        */

                        
                                    protected java.lang.String localSys_created_on ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_created_onTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_created_on(){
                               return localSys_created_on;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_created_on
                               */
                               public void setSys_created_on(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_created_onTracker = true;
                                       } else {
                                          localSys_created_onTracker = false;
                                              
                                       }
                                   
                                            this.localSys_created_on=param;
                                    

                               }
                            

                        /**
                        * field for Sys_domain
                        */

                        
                                    protected java.lang.String localSys_domain ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_domainTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_domain(){
                               return localSys_domain;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_domain
                               */
                               public void setSys_domain(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_domainTracker = true;
                                       } else {
                                          localSys_domainTracker = false;
                                              
                                       }
                                   
                                            this.localSys_domain=param;
                                    

                               }
                            

                        /**
                        * field for Sys_mod_count
                        */

                        
                                    protected java.math.BigInteger localSys_mod_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_mod_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getSys_mod_count(){
                               return localSys_mod_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_mod_count
                               */
                               public void setSys_mod_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_mod_countTracker = true;
                                       } else {
                                          localSys_mod_countTracker = false;
                                              
                                       }
                                   
                                            this.localSys_mod_count=param;
                                    

                               }
                            

                        /**
                        * field for Sys_tags
                        */

                        
                                    protected java.lang.String localSys_tags ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_tagsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_tags(){
                               return localSys_tags;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_tags
                               */
                               public void setSys_tags(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_tagsTracker = true;
                                       } else {
                                          localSys_tagsTracker = false;
                                              
                                       }
                                   
                                            this.localSys_tags=param;
                                    

                               }
                            

                        /**
                        * field for Sys_updated_by
                        */

                        
                                    protected java.lang.String localSys_updated_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_updated_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_updated_by(){
                               return localSys_updated_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_updated_by
                               */
                               public void setSys_updated_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_updated_byTracker = true;
                                       } else {
                                          localSys_updated_byTracker = false;
                                              
                                       }
                                   
                                            this.localSys_updated_by=param;
                                    

                               }
                            

                        /**
                        * field for Sys_updated_on
                        */

                        
                                    protected java.lang.String localSys_updated_on ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_updated_onTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_updated_on(){
                               return localSys_updated_on;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_updated_on
                               */
                               public void setSys_updated_on(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_updated_onTracker = true;
                                       } else {
                                          localSys_updated_onTracker = false;
                                              
                                       }
                                   
                                            this.localSys_updated_on=param;
                                    

                               }
                            

                        /**
                        * field for Time_worked
                        */

                        
                                    protected java.lang.String localTime_worked ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTime_workedTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTime_worked(){
                               return localTime_worked;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Time_worked
                               */
                               public void setTime_worked(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTime_workedTracker = true;
                                       } else {
                                          localTime_workedTracker = false;
                                              
                                       }
                                   
                                            this.localTime_worked=param;
                                    

                               }
                            

                        /**
                        * field for U_actual_elapsed_time
                        */

                        
                                    protected java.math.BigInteger localU_actual_elapsed_time ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localU_actual_elapsed_timeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getU_actual_elapsed_time(){
                               return localU_actual_elapsed_time;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param U_actual_elapsed_time
                               */
                               public void setU_actual_elapsed_time(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localU_actual_elapsed_timeTracker = true;
                                       } else {
                                          localU_actual_elapsed_timeTracker = false;
                                              
                                       }
                                   
                                            this.localU_actual_elapsed_time=param;
                                    

                               }
                            

                        /**
                        * field for U_aging_category
                        */

                        
                                    protected java.lang.String localU_aging_category ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localU_aging_categoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getU_aging_category(){
                               return localU_aging_category;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param U_aging_category
                               */
                               public void setU_aging_category(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localU_aging_categoryTracker = true;
                                       } else {
                                          localU_aging_categoryTracker = false;
                                              
                                       }
                                   
                                            this.localU_aging_category=param;
                                    

                               }
                            

                        /**
                        * field for Upon_approval
                        */

                        
                                    protected java.lang.String localUpon_approval ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUpon_approvalTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUpon_approval(){
                               return localUpon_approval;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Upon_approval
                               */
                               public void setUpon_approval(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUpon_approvalTracker = true;
                                       } else {
                                          localUpon_approvalTracker = false;
                                              
                                       }
                                   
                                            this.localUpon_approval=param;
                                    

                               }
                            

                        /**
                        * field for Upon_reject
                        */

                        
                                    protected java.lang.String localUpon_reject ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUpon_rejectTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUpon_reject(){
                               return localUpon_reject;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Upon_reject
                               */
                               public void setUpon_reject(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUpon_rejectTracker = true;
                                       } else {
                                          localUpon_rejectTracker = false;
                                              
                                       }
                                   
                                            this.localUpon_reject=param;
                                    

                               }
                            

                        /**
                        * field for Urgency
                        */

                        
                                    protected java.math.BigInteger localUrgency ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUrgencyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getUrgency(){
                               return localUrgency;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Urgency
                               */
                               public void setUrgency(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUrgencyTracker = true;
                                       } else {
                                          localUrgencyTracker = false;
                                              
                                       }
                                   
                                            this.localUrgency=param;
                                    

                               }
                            

                        /**
                        * field for User_input
                        */

                        
                                    protected java.lang.String localUser_input ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUser_inputTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUser_input(){
                               return localUser_input;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param User_input
                               */
                               public void setUser_input(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUser_inputTracker = true;
                                       } else {
                                          localUser_inputTracker = false;
                                              
                                       }
                                   
                                            this.localUser_input=param;
                                    

                               }
                            

                        /**
                        * field for Watch_list
                        */

                        
                                    protected java.lang.String localWatch_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWatch_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWatch_list(){
                               return localWatch_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Watch_list
                               */
                               public void setWatch_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWatch_listTracker = true;
                                       } else {
                                          localWatch_listTracker = false;
                                              
                                       }
                                   
                                            this.localWatch_list=param;
                                    

                               }
                            

                        /**
                        * field for Work_end
                        */

                        
                                    protected java.lang.String localWork_end ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_endTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_end(){
                               return localWork_end;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_end
                               */
                               public void setWork_end(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_endTracker = true;
                                       } else {
                                          localWork_endTracker = false;
                                              
                                       }
                                   
                                            this.localWork_end=param;
                                    

                               }
                            

                        /**
                        * field for Work_notes
                        */

                        
                                    protected java.lang.String localWork_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_notes(){
                               return localWork_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_notes
                               */
                               public void setWork_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_notesTracker = true;
                                       } else {
                                          localWork_notesTracker = false;
                                              
                                       }
                                   
                                            this.localWork_notes=param;
                                    

                               }
                            

                        /**
                        * field for Work_notes_list
                        */

                        
                                    protected java.lang.String localWork_notes_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_notes_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_notes_list(){
                               return localWork_notes_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_notes_list
                               */
                               public void setWork_notes_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_notes_listTracker = true;
                                       } else {
                                          localWork_notes_listTracker = false;
                                              
                                       }
                                   
                                            this.localWork_notes_list=param;
                                    

                               }
                            

                        /**
                        * field for Work_start
                        */

                        
                                    protected java.lang.String localWork_start ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_startTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_start(){
                               return localWork_start;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_start
                               */
                               public void setWork_start(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_startTracker = true;
                                       } else {
                                          localWork_startTracker = false;
                                              
                                       }
                                   
                                            this.localWork_start=param;
                                    

                               }
                            

                        /**
                        * field for __use_view
                        */

                        
                                    protected java.lang.String local__use_view ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local__use_viewTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String get__use_view(){
                               return local__use_view;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param __use_view
                               */
                               public void set__use_view(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          local__use_viewTracker = true;
                                       } else {
                                          local__use_viewTracker = false;
                                              
                                       }
                                   
                                            this.local__use_view=param;
                                    

                               }
                            

                        /**
                        * field for __encoded_query
                        */

                        
                                    protected java.lang.String local__encoded_query ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local__encoded_queryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String get__encoded_query(){
                               return local__encoded_query;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param __encoded_query
                               */
                               public void set__encoded_query(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          local__encoded_queryTracker = true;
                                       } else {
                                          local__encoded_queryTracker = false;
                                              
                                       }
                                   
                                            this.local__encoded_query=param;
                                    

                               }
                            

                        /**
                        * field for __limit
                        */

                        
                                    protected java.lang.String local__limit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local__limitTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String get__limit(){
                               return local__limit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param __limit
                               */
                               public void set__limit(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          local__limitTracker = true;
                                       } else {
                                          local__limitTracker = false;
                                              
                                       }
                                   
                                            this.local__limit=param;
                                    

                               }
                            

                        /**
                        * field for __first_row
                        */

                        
                                    protected java.lang.String local__first_row ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local__first_rowTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String get__first_row(){
                               return local__first_row;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param __first_row
                               */
                               public void set__first_row(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          local__first_rowTracker = true;
                                       } else {
                                          local__first_rowTracker = false;
                                              
                                       }
                                   
                                            this.local__first_row=param;
                                    

                               }
                            

                        /**
                        * field for __last_row
                        */

                        
                                    protected java.lang.String local__last_row ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local__last_rowTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String get__last_row(){
                               return local__last_row;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param __last_row
                               */
                               public void set__last_row(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          local__last_rowTracker = true;
                                       } else {
                                          local__last_rowTracker = false;
                                              
                                       }
                                   
                                            this.local__last_row=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       GetKeys.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":getKeys",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "getKeys",
                           xmlWriter);
                   }

               
                   }
                if (localActiveTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"active", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"active");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("active");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("active cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActive));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localActivity_dueTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"activity_due", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"activity_due");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("activity_due");
                                    }
                                

                                          if (localActivity_due==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("activity_due cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localActivity_due);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApprovalTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval");
                                    }
                                

                                          if (localApproval==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApproval_historyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval_history", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval_history");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval_history");
                                    }
                                

                                          if (localApproval_history==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval_history cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval_history);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApproval_setTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval_set", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval_set");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval_set");
                                    }
                                

                                          if (localApproval_set==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval_set cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval_set);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAssigned_toTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"assigned_to", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"assigned_to");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("assigned_to");
                                    }
                                

                                          if (localAssigned_to==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assigned_to cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssigned_to);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAssignment_groupTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"assignment_group", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"assignment_group");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("assignment_group");
                                    }
                                

                                          if (localAssignment_group==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assignment_group cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssignment_group);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusiness_durationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"business_duration", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"business_duration");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("business_duration");
                                    }
                                

                                          if (localBusiness_duration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("business_duration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBusiness_duration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusiness_stcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"business_stc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"business_stc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("business_stc");
                                    }
                                

                                          if (localBusiness_stc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("business_stc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_stc));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalendar_durationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"calendar_duration", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"calendar_duration");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("calendar_duration");
                                    }
                                

                                          if (localCalendar_duration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("calendar_duration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCalendar_duration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalendar_stcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"calendar_stc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"calendar_stc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("calendar_stc");
                                    }
                                

                                          if (localCalendar_stc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("calendar_stc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_stc));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCaller_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"caller_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"caller_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("caller_id");
                                    }
                                

                                          if (localCaller_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("caller_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCaller_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCategoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"category", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"category");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("category");
                                    }
                                

                                          if (localCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCaused_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"caused_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"caused_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("caused_by");
                                    }
                                

                                          if (localCaused_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("caused_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCaused_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localChild_incidentsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"child_incidents", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"child_incidents");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("child_incidents");
                                    }
                                

                                          if (localChild_incidents==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("child_incidents cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChild_incidents));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClose_codeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"close_code", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"close_code");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("close_code");
                                    }
                                

                                          if (localClose_code==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("close_code cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClose_code);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClose_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"close_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"close_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("close_notes");
                                    }
                                

                                          if (localClose_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("close_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClose_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosed_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"closed_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"closed_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("closed_at");
                                    }
                                

                                          if (localClosed_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closed_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosed_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosed_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"closed_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"closed_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("closed_by");
                                    }
                                

                                          if (localClosed_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closed_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosed_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCmdb_ciTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"cmdb_ci", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"cmdb_ci");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("cmdb_ci");
                                    }
                                

                                          if (localCmdb_ci==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cmdb_ci cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCmdb_ci);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCommentsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"comments", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"comments");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("comments");
                                    }
                                

                                          if (localComments==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("comments cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localComments);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localComments_and_work_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"comments_and_work_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"comments_and_work_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("comments_and_work_notes");
                                    }
                                

                                          if (localComments_and_work_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("comments_and_work_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localComments_and_work_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"company", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"company");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("company");
                                    }
                                

                                          if (localCompany==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("company cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompany);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localContact_typeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"contact_type", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"contact_type");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("contact_type");
                                    }
                                

                                          if (localContact_type==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("contact_type cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localContact_type);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelation_displayTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"correlation_display", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"correlation_display");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("correlation_display");
                                    }
                                

                                          if (localCorrelation_display==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlation_display cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelation_display);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelation_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"correlation_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"correlation_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("correlation_id");
                                    }
                                

                                          if (localCorrelation_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlation_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelation_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelivery_planTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"delivery_plan", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"delivery_plan");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("delivery_plan");
                                    }
                                

                                          if (localDelivery_plan==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delivery_plan cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelivery_plan);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelivery_taskTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"delivery_task", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"delivery_task");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("delivery_task");
                                    }
                                

                                          if (localDelivery_task==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delivery_task cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelivery_task);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDescriptionTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"description", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"description");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("description");
                                    }
                                

                                          if (localDescription==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDescription);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDue_dateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"due_date", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"due_date");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("due_date");
                                    }
                                

                                          if (localDue_date==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDue_date);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEscalationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"escalation", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"escalation");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("escalation");
                                    }
                                

                                          if (localEscalation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("escalation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEscalation));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExpected_startTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"expected_start", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"expected_start");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("expected_start");
                                    }
                                

                                          if (localExpected_start==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("expected_start cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExpected_start);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFollow_upTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"follow_up", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"follow_up");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("follow_up");
                                    }
                                

                                          if (localFollow_up==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("follow_up cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFollow_up);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGroup_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"group_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"group_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("group_list");
                                    }
                                

                                          if (localGroup_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("group_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGroup_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localImpactTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"impact", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"impact");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("impact");
                                    }
                                

                                          if (localImpact==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("impact cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpact));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIncident_stateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"incident_state", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"incident_state");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("incident_state");
                                    }
                                

                                          if (localIncident_state==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("incident_state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIncident_state));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localKnowledgeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"knowledge", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"knowledge");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("knowledge");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("knowledge cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKnowledge));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLocationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"location", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"location");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("location");
                                    }
                                

                                          if (localLocation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("location cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLocation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMade_slaTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"made_sla", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"made_sla");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("made_sla");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("made_sla cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMade_sla));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNotifyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"notify", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"notify");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("notify");
                                    }
                                

                                          if (localNotify==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("notify cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNotify));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNumberTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"number", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"number");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("number");
                                    }
                                

                                          if (localNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpened_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"opened_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"opened_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("opened_at");
                                    }
                                

                                          if (localOpened_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("opened_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpened_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpened_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"opened_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"opened_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("opened_by");
                                    }
                                

                                          if (localOpened_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("opened_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpened_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOrderTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"order", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"order");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("order");
                                    }
                                

                                          if (localOrder==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("order cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrder));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localParentTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"parent", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"parent");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("parent");
                                    }
                                

                                          if (localParent==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("parent cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localParent);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localParent_incidentTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"parent_incident", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"parent_incident");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("parent_incident");
                                    }
                                

                                          if (localParent_incident==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("parent_incident cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localParent_incident);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPriorityTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"priority", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"priority");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("priority");
                                    }
                                

                                          if (localPriority==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("priority cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPriority));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProblem_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"problem_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"problem_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("problem_id");
                                    }
                                

                                          if (localProblem_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("problem_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProblem_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReassignment_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"reassignment_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"reassignment_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("reassignment_count");
                                    }
                                

                                          if (localReassignment_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reassignment_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReassignment_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReopen_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"reopen_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"reopen_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("reopen_count");
                                    }
                                

                                          if (localReopen_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reopen_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReopen_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResolved_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"resolved_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"resolved_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("resolved_at");
                                    }
                                

                                          if (localResolved_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resolved_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResolved_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResolved_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"resolved_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"resolved_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("resolved_by");
                                    }
                                

                                          if (localResolved_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resolved_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResolved_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRfcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"rfc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"rfc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("rfc");
                                    }
                                

                                          if (localRfc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("rfc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRfc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSeverityTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"severity", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"severity");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("severity");
                                    }
                                

                                          if (localSeverity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("severity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeverity));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShort_descriptionTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"short_description", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"short_description");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("short_description");
                                    }
                                

                                          if (localShort_description==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("short_description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShort_description);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSkillsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"skills", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"skills");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("skills");
                                    }
                                

                                          if (localSkills==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("skills cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSkills);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSla_dueTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sla_due", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sla_due");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sla_due");
                                    }
                                

                                          if (localSla_due==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sla_due cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSla_due);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"state", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"state");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("state");
                                    }
                                

                                          if (localState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSubcategoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"subcategory", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"subcategory");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("subcategory");
                                    }
                                

                                          if (localSubcategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("subcategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSubcategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_class_nameTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_class_name", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_class_name");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_class_name");
                                    }
                                

                                          if (localSys_class_name==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_class_name cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_class_name);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_created_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_created_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_created_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_created_by");
                                    }
                                

                                          if (localSys_created_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_created_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_created_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_created_onTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_created_on", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_created_on");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_created_on");
                                    }
                                

                                          if (localSys_created_on==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_created_on cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_created_on);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_domainTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_domain", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_domain");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_domain");
                                    }
                                

                                          if (localSys_domain==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_domain cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_domain);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_mod_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_mod_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_mod_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_mod_count");
                                    }
                                

                                          if (localSys_mod_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_mod_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_mod_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_tagsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_tags", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_tags");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_tags");
                                    }
                                

                                          if (localSys_tags==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_tags cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_tags);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_updated_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_updated_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_updated_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_updated_by");
                                    }
                                

                                          if (localSys_updated_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_updated_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_updated_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_updated_onTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_updated_on", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_updated_on");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_updated_on");
                                    }
                                

                                          if (localSys_updated_on==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_updated_on cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_updated_on);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTime_workedTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"time_worked", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"time_worked");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("time_worked");
                                    }
                                

                                          if (localTime_worked==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("time_worked cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTime_worked);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localU_actual_elapsed_timeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"u_actual_elapsed_time", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"u_actual_elapsed_time");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("u_actual_elapsed_time");
                                    }
                                

                                          if (localU_actual_elapsed_time==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("u_actual_elapsed_time cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_actual_elapsed_time));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localU_aging_categoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"u_aging_category", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"u_aging_category");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("u_aging_category");
                                    }
                                

                                          if (localU_aging_category==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("u_aging_category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localU_aging_category);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUpon_approvalTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"upon_approval", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"upon_approval");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("upon_approval");
                                    }
                                

                                          if (localUpon_approval==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("upon_approval cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUpon_approval);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUpon_rejectTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"upon_reject", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"upon_reject");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("upon_reject");
                                    }
                                

                                          if (localUpon_reject==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("upon_reject cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUpon_reject);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUrgencyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"urgency", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"urgency");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("urgency");
                                    }
                                

                                          if (localUrgency==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("urgency cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrgency));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUser_inputTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"user_input", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"user_input");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("user_input");
                                    }
                                

                                          if (localUser_input==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("user_input cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUser_input);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWatch_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"watch_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"watch_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("watch_list");
                                    }
                                

                                          if (localWatch_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("watch_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWatch_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_endTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_end", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_end");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_end");
                                    }
                                

                                          if (localWork_end==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_end cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_end);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_notes");
                                    }
                                

                                          if (localWork_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_notes_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_notes_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_notes_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_notes_list");
                                    }
                                

                                          if (localWork_notes_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_notes_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_notes_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_startTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_start", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_start");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_start");
                                    }
                                

                                          if (localWork_start==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_start cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_start);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (local__use_viewTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"__use_view", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"__use_view");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("__use_view");
                                    }
                                

                                          if (local__use_view==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("__use_view cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(local__use_view);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (local__encoded_queryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"__encoded_query", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"__encoded_query");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("__encoded_query");
                                    }
                                

                                          if (local__encoded_query==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("__encoded_query cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(local__encoded_query);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (local__limitTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"__limit", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"__limit");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("__limit");
                                    }
                                

                                          if (local__limit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("__limit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(local__limit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (local__first_rowTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"__first_row", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"__first_row");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("__first_row");
                                    }
                                

                                          if (local__first_row==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("__first_row cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(local__first_row);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (local__last_rowTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"__last_row", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"__last_row");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("__last_row");
                                    }
                                

                                          if (local__last_row==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("__last_row cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(local__last_row);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localActiveTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "active"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActive));
                            } if (localActivity_dueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "activity_due"));
                                 
                                        if (localActivity_due != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActivity_due));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("activity_due cannot be null!!");
                                        }
                                    } if (localApprovalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval"));
                                 
                                        if (localApproval != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval cannot be null!!");
                                        }
                                    } if (localApproval_historyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval_history"));
                                 
                                        if (localApproval_history != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval_history));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval_history cannot be null!!");
                                        }
                                    } if (localApproval_setTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval_set"));
                                 
                                        if (localApproval_set != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval_set));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval_set cannot be null!!");
                                        }
                                    } if (localAssigned_toTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "assigned_to"));
                                 
                                        if (localAssigned_to != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssigned_to));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assigned_to cannot be null!!");
                                        }
                                    } if (localAssignment_groupTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "assignment_group"));
                                 
                                        if (localAssignment_group != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssignment_group));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assignment_group cannot be null!!");
                                        }
                                    } if (localBusiness_durationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "business_duration"));
                                 
                                        if (localBusiness_duration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_duration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("business_duration cannot be null!!");
                                        }
                                    } if (localBusiness_stcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "business_stc"));
                                 
                                        if (localBusiness_stc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_stc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("business_stc cannot be null!!");
                                        }
                                    } if (localCalendar_durationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "calendar_duration"));
                                 
                                        if (localCalendar_duration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_duration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("calendar_duration cannot be null!!");
                                        }
                                    } if (localCalendar_stcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "calendar_stc"));
                                 
                                        if (localCalendar_stc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_stc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("calendar_stc cannot be null!!");
                                        }
                                    } if (localCaller_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "caller_id"));
                                 
                                        if (localCaller_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCaller_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("caller_id cannot be null!!");
                                        }
                                    } if (localCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "category"));
                                 
                                        if (localCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                        }
                                    } if (localCaused_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "caused_by"));
                                 
                                        if (localCaused_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCaused_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("caused_by cannot be null!!");
                                        }
                                    } if (localChild_incidentsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "child_incidents"));
                                 
                                        if (localChild_incidents != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChild_incidents));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("child_incidents cannot be null!!");
                                        }
                                    } if (localClose_codeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "close_code"));
                                 
                                        if (localClose_code != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClose_code));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("close_code cannot be null!!");
                                        }
                                    } if (localClose_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "close_notes"));
                                 
                                        if (localClose_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClose_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("close_notes cannot be null!!");
                                        }
                                    } if (localClosed_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "closed_at"));
                                 
                                        if (localClosed_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosed_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closed_at cannot be null!!");
                                        }
                                    } if (localClosed_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "closed_by"));
                                 
                                        if (localClosed_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosed_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closed_by cannot be null!!");
                                        }
                                    } if (localCmdb_ciTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "cmdb_ci"));
                                 
                                        if (localCmdb_ci != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCmdb_ci));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cmdb_ci cannot be null!!");
                                        }
                                    } if (localCommentsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "comments"));
                                 
                                        if (localComments != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComments));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("comments cannot be null!!");
                                        }
                                    } if (localComments_and_work_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "comments_and_work_notes"));
                                 
                                        if (localComments_and_work_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComments_and_work_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("comments_and_work_notes cannot be null!!");
                                        }
                                    } if (localCompanyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "company"));
                                 
                                        if (localCompany != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompany));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("company cannot be null!!");
                                        }
                                    } if (localContact_typeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "contact_type"));
                                 
                                        if (localContact_type != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localContact_type));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("contact_type cannot be null!!");
                                        }
                                    } if (localCorrelation_displayTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "correlation_display"));
                                 
                                        if (localCorrelation_display != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelation_display));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlation_display cannot be null!!");
                                        }
                                    } if (localCorrelation_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "correlation_id"));
                                 
                                        if (localCorrelation_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelation_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlation_id cannot be null!!");
                                        }
                                    } if (localDelivery_planTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "delivery_plan"));
                                 
                                        if (localDelivery_plan != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelivery_plan));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delivery_plan cannot be null!!");
                                        }
                                    } if (localDelivery_taskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "delivery_task"));
                                 
                                        if (localDelivery_task != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelivery_task));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delivery_task cannot be null!!");
                                        }
                                    } if (localDescriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "description"));
                                 
                                        if (localDescription != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescription));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                        }
                                    } if (localDue_dateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "due_date"));
                                 
                                        if (localDue_date != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDue_date));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                        }
                                    } if (localEscalationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "escalation"));
                                 
                                        if (localEscalation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEscalation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("escalation cannot be null!!");
                                        }
                                    } if (localExpected_startTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "expected_start"));
                                 
                                        if (localExpected_start != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExpected_start));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("expected_start cannot be null!!");
                                        }
                                    } if (localFollow_upTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "follow_up"));
                                 
                                        if (localFollow_up != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFollow_up));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("follow_up cannot be null!!");
                                        }
                                    } if (localGroup_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "group_list"));
                                 
                                        if (localGroup_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGroup_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("group_list cannot be null!!");
                                        }
                                    } if (localImpactTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "impact"));
                                 
                                        if (localImpact != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpact));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("impact cannot be null!!");
                                        }
                                    } if (localIncident_stateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "incident_state"));
                                 
                                        if (localIncident_state != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIncident_state));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("incident_state cannot be null!!");
                                        }
                                    } if (localKnowledgeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "knowledge"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKnowledge));
                            } if (localLocationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "location"));
                                 
                                        if (localLocation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLocation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("location cannot be null!!");
                                        }
                                    } if (localMade_slaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "made_sla"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMade_sla));
                            } if (localNotifyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "notify"));
                                 
                                        if (localNotify != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNotify));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("notify cannot be null!!");
                                        }
                                    } if (localNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "number"));
                                 
                                        if (localNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                        }
                                    } if (localOpened_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "opened_at"));
                                 
                                        if (localOpened_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpened_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("opened_at cannot be null!!");
                                        }
                                    } if (localOpened_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "opened_by"));
                                 
                                        if (localOpened_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpened_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("opened_by cannot be null!!");
                                        }
                                    } if (localOrderTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "order"));
                                 
                                        if (localOrder != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrder));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("order cannot be null!!");
                                        }
                                    } if (localParentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "parent"));
                                 
                                        if (localParent != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParent));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("parent cannot be null!!");
                                        }
                                    } if (localParent_incidentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "parent_incident"));
                                 
                                        if (localParent_incident != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParent_incident));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("parent_incident cannot be null!!");
                                        }
                                    } if (localPriorityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "priority"));
                                 
                                        if (localPriority != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPriority));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("priority cannot be null!!");
                                        }
                                    } if (localProblem_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "problem_id"));
                                 
                                        if (localProblem_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProblem_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("problem_id cannot be null!!");
                                        }
                                    } if (localReassignment_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "reassignment_count"));
                                 
                                        if (localReassignment_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReassignment_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reassignment_count cannot be null!!");
                                        }
                                    } if (localReopen_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "reopen_count"));
                                 
                                        if (localReopen_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReopen_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reopen_count cannot be null!!");
                                        }
                                    } if (localResolved_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "resolved_at"));
                                 
                                        if (localResolved_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResolved_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resolved_at cannot be null!!");
                                        }
                                    } if (localResolved_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "resolved_by"));
                                 
                                        if (localResolved_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResolved_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resolved_by cannot be null!!");
                                        }
                                    } if (localRfcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "rfc"));
                                 
                                        if (localRfc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRfc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("rfc cannot be null!!");
                                        }
                                    } if (localSeverityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "severity"));
                                 
                                        if (localSeverity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeverity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("severity cannot be null!!");
                                        }
                                    } if (localShort_descriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "short_description"));
                                 
                                        if (localShort_description != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShort_description));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("short_description cannot be null!!");
                                        }
                                    } if (localSkillsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "skills"));
                                 
                                        if (localSkills != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSkills));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("skills cannot be null!!");
                                        }
                                    } if (localSla_dueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sla_due"));
                                 
                                        if (localSla_due != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSla_due));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sla_due cannot be null!!");
                                        }
                                    } if (localStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "state"));
                                 
                                        if (localState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                        }
                                    } if (localSubcategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "subcategory"));
                                 
                                        if (localSubcategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSubcategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("subcategory cannot be null!!");
                                        }
                                    } if (localSys_class_nameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_class_name"));
                                 
                                        if (localSys_class_name != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_class_name));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_class_name cannot be null!!");
                                        }
                                    } if (localSys_created_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_created_by"));
                                 
                                        if (localSys_created_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_created_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_created_by cannot be null!!");
                                        }
                                    } if (localSys_created_onTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_created_on"));
                                 
                                        if (localSys_created_on != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_created_on));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_created_on cannot be null!!");
                                        }
                                    } if (localSys_domainTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_domain"));
                                 
                                        if (localSys_domain != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_domain));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_domain cannot be null!!");
                                        }
                                    } if (localSys_mod_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_mod_count"));
                                 
                                        if (localSys_mod_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_mod_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_mod_count cannot be null!!");
                                        }
                                    } if (localSys_tagsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_tags"));
                                 
                                        if (localSys_tags != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_tags));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_tags cannot be null!!");
                                        }
                                    } if (localSys_updated_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_updated_by"));
                                 
                                        if (localSys_updated_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_updated_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_updated_by cannot be null!!");
                                        }
                                    } if (localSys_updated_onTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_updated_on"));
                                 
                                        if (localSys_updated_on != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_updated_on));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_updated_on cannot be null!!");
                                        }
                                    } if (localTime_workedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "time_worked"));
                                 
                                        if (localTime_worked != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTime_worked));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("time_worked cannot be null!!");
                                        }
                                    } if (localU_actual_elapsed_timeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "u_actual_elapsed_time"));
                                 
                                        if (localU_actual_elapsed_time != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_actual_elapsed_time));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("u_actual_elapsed_time cannot be null!!");
                                        }
                                    } if (localU_aging_categoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "u_aging_category"));
                                 
                                        if (localU_aging_category != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_aging_category));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("u_aging_category cannot be null!!");
                                        }
                                    } if (localUpon_approvalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "upon_approval"));
                                 
                                        if (localUpon_approval != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUpon_approval));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("upon_approval cannot be null!!");
                                        }
                                    } if (localUpon_rejectTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "upon_reject"));
                                 
                                        if (localUpon_reject != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUpon_reject));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("upon_reject cannot be null!!");
                                        }
                                    } if (localUrgencyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "urgency"));
                                 
                                        if (localUrgency != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrgency));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("urgency cannot be null!!");
                                        }
                                    } if (localUser_inputTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "user_input"));
                                 
                                        if (localUser_input != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUser_input));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("user_input cannot be null!!");
                                        }
                                    } if (localWatch_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "watch_list"));
                                 
                                        if (localWatch_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWatch_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("watch_list cannot be null!!");
                                        }
                                    } if (localWork_endTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_end"));
                                 
                                        if (localWork_end != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_end));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_end cannot be null!!");
                                        }
                                    } if (localWork_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_notes"));
                                 
                                        if (localWork_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_notes cannot be null!!");
                                        }
                                    } if (localWork_notes_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_notes_list"));
                                 
                                        if (localWork_notes_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_notes_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_notes_list cannot be null!!");
                                        }
                                    } if (localWork_startTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_start"));
                                 
                                        if (localWork_start != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_start));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_start cannot be null!!");
                                        }
                                    } if (local__use_viewTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "__use_view"));
                                 
                                        if (local__use_view != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(local__use_view));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("__use_view cannot be null!!");
                                        }
                                    } if (local__encoded_queryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "__encoded_query"));
                                 
                                        if (local__encoded_query != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(local__encoded_query));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("__encoded_query cannot be null!!");
                                        }
                                    } if (local__limitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "__limit"));
                                 
                                        if (local__limit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(local__limit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("__limit cannot be null!!");
                                        }
                                    } if (local__first_rowTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "__first_row"));
                                 
                                        if (local__first_row != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(local__first_row));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("__first_row cannot be null!!");
                                        }
                                    } if (local__last_rowTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "__last_row"));
                                 
                                        if (local__last_row != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(local__last_row));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("__last_row cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static GetKeys parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            GetKeys object =
                new GetKeys();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"getKeys".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (GetKeys)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","active").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActive(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","activity_due").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActivity_due(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval_history").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval_history(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval_set").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval_set(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","assigned_to").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssigned_to(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","assignment_group").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssignment_group(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","business_duration").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusiness_duration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","business_stc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusiness_stc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","calendar_duration").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalendar_duration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","calendar_stc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalendar_stc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","caller_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCaller_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","category").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","caused_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCaused_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","child_incidents").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setChild_incidents(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","close_code").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClose_code(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","close_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClose_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","closed_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosed_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","closed_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosed_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","cmdb_ci").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCmdb_ci(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","comments").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setComments(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","comments_and_work_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setComments_and_work_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","company").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompany(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","contact_type").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setContact_type(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","correlation_display").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelation_display(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","correlation_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelation_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","delivery_plan").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelivery_plan(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","delivery_task").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelivery_task(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","description").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDescription(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","due_date").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDue_date(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","escalation").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEscalation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","expected_start").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExpected_start(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","follow_up").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFollow_up(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","group_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGroup_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","impact").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImpact(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","incident_state").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIncident_state(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","knowledge").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setKnowledge(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","location").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLocation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","made_sla").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMade_sla(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","notify").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNotify(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","number").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","opened_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpened_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","opened_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpened_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","order").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOrder(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","parent").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setParent(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","parent_incident").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setParent_incident(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","priority").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPriority(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","problem_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProblem_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","reassignment_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReassignment_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","reopen_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReopen_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","resolved_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResolved_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","resolved_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResolved_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","rfc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRfc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","severity").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSeverity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","short_description").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShort_description(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","skills").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSkills(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sla_due").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSla_due(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","state").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","subcategory").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSubcategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_class_name").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_class_name(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_created_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_created_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_created_on").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_created_on(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_domain").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_domain(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_mod_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_mod_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_tags").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_tags(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_updated_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_updated_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_updated_on").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_updated_on(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","time_worked").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTime_worked(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","u_actual_elapsed_time").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setU_actual_elapsed_time(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","u_aging_category").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setU_aging_category(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","upon_approval").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUpon_approval(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","upon_reject").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUpon_reject(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","urgency").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUrgency(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","user_input").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUser_input(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","watch_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWatch_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_end").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_end(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_notes_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_notes_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_start").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_start(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","__use_view").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.set__use_view(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","__encoded_query").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.set__encoded_query(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","__limit").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.set__limit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","__first_row").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.set__first_row(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","__last_row").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.set__last_row(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class DeleteMultipleResponse
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.service-now.com/incident",
                "deleteMultipleResponse",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for Count
                        */

                        
                                    protected java.lang.String localCount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCountTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCount(){
                               return localCount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Count
                               */
                               public void setCount(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCountTracker = true;
                                       } else {
                                          localCountTracker = false;
                                              
                                       }
                                   
                                            this.localCount=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       DeleteMultipleResponse.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":deleteMultipleResponse",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "deleteMultipleResponse",
                           xmlWriter);
                   }

               
                   }
                if (localCountTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("count");
                                    }
                                

                                          if (localCount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "count"));
                                 
                                        if (localCount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("count cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static DeleteMultipleResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            DeleteMultipleResponse object =
                new DeleteMultipleResponse();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"deleteMultipleResponse".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (DeleteMultipleResponse)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class Update
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.service-now.com/incident",
                "update",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for Active
                        */

                        
                                    protected boolean localActive ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActiveTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getActive(){
                               return localActive;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Active
                               */
                               public void setActive(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localActiveTracker = false;
                                              
                                       } else {
                                          localActiveTracker = true;
                                       }
                                   
                                            this.localActive=param;
                                    

                               }
                            

                        /**
                        * field for Activity_due
                        */

                        
                                    protected java.lang.String localActivity_due ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActivity_dueTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getActivity_due(){
                               return localActivity_due;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Activity_due
                               */
                               public void setActivity_due(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localActivity_dueTracker = true;
                                       } else {
                                          localActivity_dueTracker = false;
                                              
                                       }
                                   
                                            this.localActivity_due=param;
                                    

                               }
                            

                        /**
                        * field for Approval
                        */

                        
                                    protected java.lang.String localApproval ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApprovalTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval(){
                               return localApproval;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval
                               */
                               public void setApproval(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApprovalTracker = true;
                                       } else {
                                          localApprovalTracker = false;
                                              
                                       }
                                   
                                            this.localApproval=param;
                                    

                               }
                            

                        /**
                        * field for Approval_history
                        */

                        
                                    protected java.lang.String localApproval_history ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApproval_historyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval_history(){
                               return localApproval_history;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval_history
                               */
                               public void setApproval_history(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApproval_historyTracker = true;
                                       } else {
                                          localApproval_historyTracker = false;
                                              
                                       }
                                   
                                            this.localApproval_history=param;
                                    

                               }
                            

                        /**
                        * field for Approval_set
                        */

                        
                                    protected java.lang.String localApproval_set ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApproval_setTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval_set(){
                               return localApproval_set;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval_set
                               */
                               public void setApproval_set(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApproval_setTracker = true;
                                       } else {
                                          localApproval_setTracker = false;
                                              
                                       }
                                   
                                            this.localApproval_set=param;
                                    

                               }
                            

                        /**
                        * field for Assigned_to
                        */

                        
                                    protected java.lang.String localAssigned_to ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAssigned_toTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssigned_to(){
                               return localAssigned_to;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Assigned_to
                               */
                               public void setAssigned_to(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAssigned_toTracker = true;
                                       } else {
                                          localAssigned_toTracker = false;
                                              
                                       }
                                   
                                            this.localAssigned_to=param;
                                    

                               }
                            

                        /**
                        * field for Assignment_group
                        */

                        
                                    protected java.lang.String localAssignment_group ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssignment_group(){
                               return localAssignment_group;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Assignment_group
                               */
                               public void setAssignment_group(java.lang.String param){
                            
                                            this.localAssignment_group=param;
                                    

                               }
                            

                        /**
                        * field for Business_duration
                        */

                        
                                    protected java.lang.String localBusiness_duration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusiness_durationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBusiness_duration(){
                               return localBusiness_duration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Business_duration
                               */
                               public void setBusiness_duration(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBusiness_durationTracker = true;
                                       } else {
                                          localBusiness_durationTracker = false;
                                              
                                       }
                                   
                                            this.localBusiness_duration=param;
                                    

                               }
                            

                        /**
                        * field for Business_stc
                        */

                        
                                    protected java.math.BigInteger localBusiness_stc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusiness_stcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getBusiness_stc(){
                               return localBusiness_stc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Business_stc
                               */
                               public void setBusiness_stc(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBusiness_stcTracker = true;
                                       } else {
                                          localBusiness_stcTracker = false;
                                              
                                       }
                                   
                                            this.localBusiness_stc=param;
                                    

                               }
                            

                        /**
                        * field for Calendar_duration
                        */

                        
                                    protected java.lang.String localCalendar_duration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalendar_durationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCalendar_duration(){
                               return localCalendar_duration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calendar_duration
                               */
                               public void setCalendar_duration(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCalendar_durationTracker = true;
                                       } else {
                                          localCalendar_durationTracker = false;
                                              
                                       }
                                   
                                            this.localCalendar_duration=param;
                                    

                               }
                            

                        /**
                        * field for Calendar_stc
                        */

                        
                                    protected java.math.BigInteger localCalendar_stc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalendar_stcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getCalendar_stc(){
                               return localCalendar_stc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calendar_stc
                               */
                               public void setCalendar_stc(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCalendar_stcTracker = true;
                                       } else {
                                          localCalendar_stcTracker = false;
                                              
                                       }
                                   
                                            this.localCalendar_stc=param;
                                    

                               }
                            

                        /**
                        * field for Caller_id
                        */

                        
                                    protected java.lang.String localCaller_id ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCaller_id(){
                               return localCaller_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Caller_id
                               */
                               public void setCaller_id(java.lang.String param){
                            
                                            this.localCaller_id=param;
                                    

                               }
                            

                        /**
                        * field for Category
                        */

                        
                                    protected java.lang.String localCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCategoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCategory(){
                               return localCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Category
                               */
                               public void setCategory(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCategoryTracker = true;
                                       } else {
                                          localCategoryTracker = false;
                                              
                                       }
                                   
                                            this.localCategory=param;
                                    

                               }
                            

                        /**
                        * field for Caused_by
                        */

                        
                                    protected java.lang.String localCaused_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCaused_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCaused_by(){
                               return localCaused_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Caused_by
                               */
                               public void setCaused_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCaused_byTracker = true;
                                       } else {
                                          localCaused_byTracker = false;
                                              
                                       }
                                   
                                            this.localCaused_by=param;
                                    

                               }
                            

                        /**
                        * field for Child_incidents
                        */

                        
                                    protected java.math.BigInteger localChild_incidents ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChild_incidentsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getChild_incidents(){
                               return localChild_incidents;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Child_incidents
                               */
                               public void setChild_incidents(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localChild_incidentsTracker = true;
                                       } else {
                                          localChild_incidentsTracker = false;
                                              
                                       }
                                   
                                            this.localChild_incidents=param;
                                    

                               }
                            

                        /**
                        * field for Close_code
                        */

                        
                                    protected java.lang.String localClose_code ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClose_codeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClose_code(){
                               return localClose_code;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Close_code
                               */
                               public void setClose_code(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClose_codeTracker = true;
                                       } else {
                                          localClose_codeTracker = false;
                                              
                                       }
                                   
                                            this.localClose_code=param;
                                    

                               }
                            

                        /**
                        * field for Close_notes
                        */

                        
                                    protected java.lang.String localClose_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClose_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClose_notes(){
                               return localClose_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Close_notes
                               */
                               public void setClose_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClose_notesTracker = true;
                                       } else {
                                          localClose_notesTracker = false;
                                              
                                       }
                                   
                                            this.localClose_notes=param;
                                    

                               }
                            

                        /**
                        * field for Closed_at
                        */

                        
                                    protected java.lang.String localClosed_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosed_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosed_at(){
                               return localClosed_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Closed_at
                               */
                               public void setClosed_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClosed_atTracker = true;
                                       } else {
                                          localClosed_atTracker = false;
                                              
                                       }
                                   
                                            this.localClosed_at=param;
                                    

                               }
                            

                        /**
                        * field for Closed_by
                        */

                        
                                    protected java.lang.String localClosed_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosed_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosed_by(){
                               return localClosed_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Closed_by
                               */
                               public void setClosed_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClosed_byTracker = true;
                                       } else {
                                          localClosed_byTracker = false;
                                              
                                       }
                                   
                                            this.localClosed_by=param;
                                    

                               }
                            

                        /**
                        * field for Cmdb_ci
                        */

                        
                                    protected java.lang.String localCmdb_ci ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCmdb_ciTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCmdb_ci(){
                               return localCmdb_ci;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cmdb_ci
                               */
                               public void setCmdb_ci(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCmdb_ciTracker = true;
                                       } else {
                                          localCmdb_ciTracker = false;
                                              
                                       }
                                   
                                            this.localCmdb_ci=param;
                                    

                               }
                            

                        /**
                        * field for Comments
                        */

                        
                                    protected java.lang.String localComments ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCommentsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getComments(){
                               return localComments;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Comments
                               */
                               public void setComments(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCommentsTracker = true;
                                       } else {
                                          localCommentsTracker = false;
                                              
                                       }
                                   
                                            this.localComments=param;
                                    

                               }
                            

                        /**
                        * field for Comments_and_work_notes
                        */

                        
                                    protected java.lang.String localComments_and_work_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localComments_and_work_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getComments_and_work_notes(){
                               return localComments_and_work_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Comments_and_work_notes
                               */
                               public void setComments_and_work_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localComments_and_work_notesTracker = true;
                                       } else {
                                          localComments_and_work_notesTracker = false;
                                              
                                       }
                                   
                                            this.localComments_and_work_notes=param;
                                    

                               }
                            

                        /**
                        * field for Company
                        */

                        
                                    protected java.lang.String localCompany ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompany(){
                               return localCompany;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Company
                               */
                               public void setCompany(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCompanyTracker = true;
                                       } else {
                                          localCompanyTracker = false;
                                              
                                       }
                                   
                                            this.localCompany=param;
                                    

                               }
                            

                        /**
                        * field for Contact_type
                        */

                        
                                    protected java.lang.String localContact_type ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localContact_typeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getContact_type(){
                               return localContact_type;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Contact_type
                               */
                               public void setContact_type(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localContact_typeTracker = true;
                                       } else {
                                          localContact_typeTracker = false;
                                              
                                       }
                                   
                                            this.localContact_type=param;
                                    

                               }
                            

                        /**
                        * field for Correlation_display
                        */

                        
                                    protected java.lang.String localCorrelation_display ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelation_displayTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelation_display(){
                               return localCorrelation_display;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Correlation_display
                               */
                               public void setCorrelation_display(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCorrelation_displayTracker = true;
                                       } else {
                                          localCorrelation_displayTracker = false;
                                              
                                       }
                                   
                                            this.localCorrelation_display=param;
                                    

                               }
                            

                        /**
                        * field for Correlation_id
                        */

                        
                                    protected java.lang.String localCorrelation_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelation_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelation_id(){
                               return localCorrelation_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Correlation_id
                               */
                               public void setCorrelation_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCorrelation_idTracker = true;
                                       } else {
                                          localCorrelation_idTracker = false;
                                              
                                       }
                                   
                                            this.localCorrelation_id=param;
                                    

                               }
                            

                        /**
                        * field for Delivery_plan
                        */

                        
                                    protected java.lang.String localDelivery_plan ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelivery_planTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelivery_plan(){
                               return localDelivery_plan;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Delivery_plan
                               */
                               public void setDelivery_plan(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDelivery_planTracker = true;
                                       } else {
                                          localDelivery_planTracker = false;
                                              
                                       }
                                   
                                            this.localDelivery_plan=param;
                                    

                               }
                            

                        /**
                        * field for Delivery_task
                        */

                        
                                    protected java.lang.String localDelivery_task ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelivery_taskTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelivery_task(){
                               return localDelivery_task;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Delivery_task
                               */
                               public void setDelivery_task(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDelivery_taskTracker = true;
                                       } else {
                                          localDelivery_taskTracker = false;
                                              
                                       }
                                   
                                            this.localDelivery_task=param;
                                    

                               }
                            

                        /**
                        * field for Description
                        */

                        
                                    protected java.lang.String localDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescriptionTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDescription(){
                               return localDescription;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Description
                               */
                               public void setDescription(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDescriptionTracker = true;
                                       } else {
                                          localDescriptionTracker = false;
                                              
                                       }
                                   
                                            this.localDescription=param;
                                    

                               }
                            

                        /**
                        * field for Due_date
                        */

                        
                                    protected java.lang.String localDue_date ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDue_dateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDue_date(){
                               return localDue_date;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Due_date
                               */
                               public void setDue_date(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDue_dateTracker = true;
                                       } else {
                                          localDue_dateTracker = false;
                                              
                                       }
                                   
                                            this.localDue_date=param;
                                    

                               }
                            

                        /**
                        * field for Escalation
                        */

                        
                                    protected java.math.BigInteger localEscalation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEscalationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getEscalation(){
                               return localEscalation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Escalation
                               */
                               public void setEscalation(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localEscalationTracker = true;
                                       } else {
                                          localEscalationTracker = false;
                                              
                                       }
                                   
                                            this.localEscalation=param;
                                    

                               }
                            

                        /**
                        * field for Expected_start
                        */

                        
                                    protected java.lang.String localExpected_start ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpected_startTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExpected_start(){
                               return localExpected_start;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Expected_start
                               */
                               public void setExpected_start(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localExpected_startTracker = true;
                                       } else {
                                          localExpected_startTracker = false;
                                              
                                       }
                                   
                                            this.localExpected_start=param;
                                    

                               }
                            

                        /**
                        * field for Follow_up
                        */

                        
                                    protected java.lang.String localFollow_up ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFollow_upTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFollow_up(){
                               return localFollow_up;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Follow_up
                               */
                               public void setFollow_up(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFollow_upTracker = true;
                                       } else {
                                          localFollow_upTracker = false;
                                              
                                       }
                                   
                                            this.localFollow_up=param;
                                    

                               }
                            

                        /**
                        * field for Group_list
                        */

                        
                                    protected java.lang.String localGroup_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGroup_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGroup_list(){
                               return localGroup_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Group_list
                               */
                               public void setGroup_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localGroup_listTracker = true;
                                       } else {
                                          localGroup_listTracker = false;
                                              
                                       }
                                   
                                            this.localGroup_list=param;
                                    

                               }
                            

                        /**
                        * field for Impact
                        */

                        
                                    protected java.math.BigInteger localImpact ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImpactTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getImpact(){
                               return localImpact;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Impact
                               */
                               public void setImpact(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localImpactTracker = true;
                                       } else {
                                          localImpactTracker = false;
                                              
                                       }
                                   
                                            this.localImpact=param;
                                    

                               }
                            

                        /**
                        * field for Incident_state
                        */

                        
                                    protected java.math.BigInteger localIncident_state ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIncident_stateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getIncident_state(){
                               return localIncident_state;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Incident_state
                               */
                               public void setIncident_state(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localIncident_stateTracker = true;
                                       } else {
                                          localIncident_stateTracker = false;
                                              
                                       }
                                   
                                            this.localIncident_state=param;
                                    

                               }
                            

                        /**
                        * field for Knowledge
                        */

                        
                                    protected boolean localKnowledge ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localKnowledgeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getKnowledge(){
                               return localKnowledge;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Knowledge
                               */
                               public void setKnowledge(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localKnowledgeTracker = false;
                                              
                                       } else {
                                          localKnowledgeTracker = true;
                                       }
                                   
                                            this.localKnowledge=param;
                                    

                               }
                            

                        /**
                        * field for Location
                        */

                        
                                    protected java.lang.String localLocation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLocationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLocation(){
                               return localLocation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Location
                               */
                               public void setLocation(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localLocationTracker = true;
                                       } else {
                                          localLocationTracker = false;
                                              
                                       }
                                   
                                            this.localLocation=param;
                                    

                               }
                            

                        /**
                        * field for Made_sla
                        */

                        
                                    protected boolean localMade_sla ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMade_slaTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getMade_sla(){
                               return localMade_sla;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Made_sla
                               */
                               public void setMade_sla(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localMade_slaTracker = false;
                                              
                                       } else {
                                          localMade_slaTracker = true;
                                       }
                                   
                                            this.localMade_sla=param;
                                    

                               }
                            

                        /**
                        * field for Notify
                        */

                        
                                    protected java.math.BigInteger localNotify ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNotifyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getNotify(){
                               return localNotify;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Notify
                               */
                               public void setNotify(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNotifyTracker = true;
                                       } else {
                                          localNotifyTracker = false;
                                              
                                       }
                                   
                                            this.localNotify=param;
                                    

                               }
                            

                        /**
                        * field for Number
                        */

                        
                                    protected java.lang.String localNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumberTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumber(){
                               return localNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Number
                               */
                               public void setNumber(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNumberTracker = true;
                                       } else {
                                          localNumberTracker = false;
                                              
                                       }
                                   
                                            this.localNumber=param;
                                    

                               }
                            

                        /**
                        * field for Opened_at
                        */

                        
                                    protected java.lang.String localOpened_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpened_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpened_at(){
                               return localOpened_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Opened_at
                               */
                               public void setOpened_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOpened_atTracker = true;
                                       } else {
                                          localOpened_atTracker = false;
                                              
                                       }
                                   
                                            this.localOpened_at=param;
                                    

                               }
                            

                        /**
                        * field for Opened_by
                        */

                        
                                    protected java.lang.String localOpened_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpened_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpened_by(){
                               return localOpened_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Opened_by
                               */
                               public void setOpened_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOpened_byTracker = true;
                                       } else {
                                          localOpened_byTracker = false;
                                              
                                       }
                                   
                                            this.localOpened_by=param;
                                    

                               }
                            

                        /**
                        * field for Order
                        */

                        
                                    protected java.math.BigInteger localOrder ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOrderTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getOrder(){
                               return localOrder;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Order
                               */
                               public void setOrder(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOrderTracker = true;
                                       } else {
                                          localOrderTracker = false;
                                              
                                       }
                                   
                                            this.localOrder=param;
                                    

                               }
                            

                        /**
                        * field for Parent
                        */

                        
                                    protected java.lang.String localParent ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localParentTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getParent(){
                               return localParent;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Parent
                               */
                               public void setParent(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localParentTracker = true;
                                       } else {
                                          localParentTracker = false;
                                              
                                       }
                                   
                                            this.localParent=param;
                                    

                               }
                            

                        /**
                        * field for Parent_incident
                        */

                        
                                    protected java.lang.String localParent_incident ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localParent_incidentTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getParent_incident(){
                               return localParent_incident;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Parent_incident
                               */
                               public void setParent_incident(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localParent_incidentTracker = true;
                                       } else {
                                          localParent_incidentTracker = false;
                                              
                                       }
                                   
                                            this.localParent_incident=param;
                                    

                               }
                            

                        /**
                        * field for Priority
                        */

                        
                                    protected java.math.BigInteger localPriority ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPriorityTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getPriority(){
                               return localPriority;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Priority
                               */
                               public void setPriority(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localPriorityTracker = true;
                                       } else {
                                          localPriorityTracker = false;
                                              
                                       }
                                   
                                            this.localPriority=param;
                                    

                               }
                            

                        /**
                        * field for Problem_id
                        */

                        
                                    protected java.lang.String localProblem_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProblem_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProblem_id(){
                               return localProblem_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Problem_id
                               */
                               public void setProblem_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localProblem_idTracker = true;
                                       } else {
                                          localProblem_idTracker = false;
                                              
                                       }
                                   
                                            this.localProblem_id=param;
                                    

                               }
                            

                        /**
                        * field for Reassignment_count
                        */

                        
                                    protected java.math.BigInteger localReassignment_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReassignment_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getReassignment_count(){
                               return localReassignment_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reassignment_count
                               */
                               public void setReassignment_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReassignment_countTracker = true;
                                       } else {
                                          localReassignment_countTracker = false;
                                              
                                       }
                                   
                                            this.localReassignment_count=param;
                                    

                               }
                            

                        /**
                        * field for Reopen_count
                        */

                        
                                    protected java.math.BigInteger localReopen_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReopen_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getReopen_count(){
                               return localReopen_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reopen_count
                               */
                               public void setReopen_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReopen_countTracker = true;
                                       } else {
                                          localReopen_countTracker = false;
                                              
                                       }
                                   
                                            this.localReopen_count=param;
                                    

                               }
                            

                        /**
                        * field for Resolved_at
                        */

                        
                                    protected java.lang.String localResolved_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResolved_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResolved_at(){
                               return localResolved_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Resolved_at
                               */
                               public void setResolved_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localResolved_atTracker = true;
                                       } else {
                                          localResolved_atTracker = false;
                                              
                                       }
                                   
                                            this.localResolved_at=param;
                                    

                               }
                            

                        /**
                        * field for Resolved_by
                        */

                        
                                    protected java.lang.String localResolved_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResolved_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResolved_by(){
                               return localResolved_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Resolved_by
                               */
                               public void setResolved_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localResolved_byTracker = true;
                                       } else {
                                          localResolved_byTracker = false;
                                              
                                       }
                                   
                                            this.localResolved_by=param;
                                    

                               }
                            

                        /**
                        * field for Rfc
                        */

                        
                                    protected java.lang.String localRfc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRfcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRfc(){
                               return localRfc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Rfc
                               */
                               public void setRfc(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localRfcTracker = true;
                                       } else {
                                          localRfcTracker = false;
                                              
                                       }
                                   
                                            this.localRfc=param;
                                    

                               }
                            

                        /**
                        * field for Severity
                        */

                        
                                    protected java.math.BigInteger localSeverity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSeverityTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getSeverity(){
                               return localSeverity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Severity
                               */
                               public void setSeverity(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSeverityTracker = true;
                                       } else {
                                          localSeverityTracker = false;
                                              
                                       }
                                   
                                            this.localSeverity=param;
                                    

                               }
                            

                        /**
                        * field for Short_description
                        */

                        
                                    protected java.lang.String localShort_description ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShort_descriptionTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShort_description(){
                               return localShort_description;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Short_description
                               */
                               public void setShort_description(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localShort_descriptionTracker = true;
                                       } else {
                                          localShort_descriptionTracker = false;
                                              
                                       }
                                   
                                            this.localShort_description=param;
                                    

                               }
                            

                        /**
                        * field for Skills
                        */

                        
                                    protected java.lang.String localSkills ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSkillsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSkills(){
                               return localSkills;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Skills
                               */
                               public void setSkills(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSkillsTracker = true;
                                       } else {
                                          localSkillsTracker = false;
                                              
                                       }
                                   
                                            this.localSkills=param;
                                    

                               }
                            

                        /**
                        * field for Sla_due
                        */

                        
                                    protected java.lang.String localSla_due ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSla_dueTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSla_due(){
                               return localSla_due;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sla_due
                               */
                               public void setSla_due(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSla_dueTracker = true;
                                       } else {
                                          localSla_dueTracker = false;
                                              
                                       }
                                   
                                            this.localSla_due=param;
                                    

                               }
                            

                        /**
                        * field for State
                        */

                        
                                    protected java.math.BigInteger localState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getState(){
                               return localState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param State
                               */
                               public void setState(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localStateTracker = true;
                                       } else {
                                          localStateTracker = false;
                                              
                                       }
                                   
                                            this.localState=param;
                                    

                               }
                            

                        /**
                        * field for Subcategory
                        */

                        
                                    protected java.lang.String localSubcategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSubcategoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSubcategory(){
                               return localSubcategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Subcategory
                               */
                               public void setSubcategory(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSubcategoryTracker = true;
                                       } else {
                                          localSubcategoryTracker = false;
                                              
                                       }
                                   
                                            this.localSubcategory=param;
                                    

                               }
                            

                        /**
                        * field for Sys_id
                        */

                        
                                    protected java.lang.String localSys_id ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_id(){
                               return localSys_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_id
                               */
                               public void setSys_id(java.lang.String param){
                            
                                            this.localSys_id=param;
                                    

                               }
                            

                        /**
                        * field for Time_worked
                        */

                        
                                    protected java.lang.String localTime_worked ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTime_workedTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTime_worked(){
                               return localTime_worked;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Time_worked
                               */
                               public void setTime_worked(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTime_workedTracker = true;
                                       } else {
                                          localTime_workedTracker = false;
                                              
                                       }
                                   
                                            this.localTime_worked=param;
                                    

                               }
                            

                        /**
                        * field for U_actual_elapsed_time
                        */

                        
                                    protected java.math.BigInteger localU_actual_elapsed_time ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localU_actual_elapsed_timeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getU_actual_elapsed_time(){
                               return localU_actual_elapsed_time;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param U_actual_elapsed_time
                               */
                               public void setU_actual_elapsed_time(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localU_actual_elapsed_timeTracker = true;
                                       } else {
                                          localU_actual_elapsed_timeTracker = false;
                                              
                                       }
                                   
                                            this.localU_actual_elapsed_time=param;
                                    

                               }
                            

                        /**
                        * field for U_aging_category
                        */

                        
                                    protected java.lang.String localU_aging_category ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localU_aging_categoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getU_aging_category(){
                               return localU_aging_category;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param U_aging_category
                               */
                               public void setU_aging_category(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localU_aging_categoryTracker = true;
                                       } else {
                                          localU_aging_categoryTracker = false;
                                              
                                       }
                                   
                                            this.localU_aging_category=param;
                                    

                               }
                            

                        /**
                        * field for Upon_approval
                        */

                        
                                    protected java.lang.String localUpon_approval ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUpon_approvalTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUpon_approval(){
                               return localUpon_approval;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Upon_approval
                               */
                               public void setUpon_approval(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUpon_approvalTracker = true;
                                       } else {
                                          localUpon_approvalTracker = false;
                                              
                                       }
                                   
                                            this.localUpon_approval=param;
                                    

                               }
                            

                        /**
                        * field for Upon_reject
                        */

                        
                                    protected java.lang.String localUpon_reject ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUpon_rejectTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUpon_reject(){
                               return localUpon_reject;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Upon_reject
                               */
                               public void setUpon_reject(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUpon_rejectTracker = true;
                                       } else {
                                          localUpon_rejectTracker = false;
                                              
                                       }
                                   
                                            this.localUpon_reject=param;
                                    

                               }
                            

                        /**
                        * field for Urgency
                        */

                        
                                    protected java.math.BigInteger localUrgency ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUrgencyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getUrgency(){
                               return localUrgency;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Urgency
                               */
                               public void setUrgency(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUrgencyTracker = true;
                                       } else {
                                          localUrgencyTracker = false;
                                              
                                       }
                                   
                                            this.localUrgency=param;
                                    

                               }
                            

                        /**
                        * field for User_input
                        */

                        
                                    protected java.lang.String localUser_input ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUser_inputTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUser_input(){
                               return localUser_input;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param User_input
                               */
                               public void setUser_input(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUser_inputTracker = true;
                                       } else {
                                          localUser_inputTracker = false;
                                              
                                       }
                                   
                                            this.localUser_input=param;
                                    

                               }
                            

                        /**
                        * field for Watch_list
                        */

                        
                                    protected java.lang.String localWatch_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWatch_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWatch_list(){
                               return localWatch_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Watch_list
                               */
                               public void setWatch_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWatch_listTracker = true;
                                       } else {
                                          localWatch_listTracker = false;
                                              
                                       }
                                   
                                            this.localWatch_list=param;
                                    

                               }
                            

                        /**
                        * field for Work_end
                        */

                        
                                    protected java.lang.String localWork_end ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_endTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_end(){
                               return localWork_end;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_end
                               */
                               public void setWork_end(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_endTracker = true;
                                       } else {
                                          localWork_endTracker = false;
                                              
                                       }
                                   
                                            this.localWork_end=param;
                                    

                               }
                            

                        /**
                        * field for Work_notes
                        */

                        
                                    protected java.lang.String localWork_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_notes(){
                               return localWork_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_notes
                               */
                               public void setWork_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_notesTracker = true;
                                       } else {
                                          localWork_notesTracker = false;
                                              
                                       }
                                   
                                            this.localWork_notes=param;
                                    

                               }
                            

                        /**
                        * field for Work_notes_list
                        */

                        
                                    protected java.lang.String localWork_notes_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_notes_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_notes_list(){
                               return localWork_notes_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_notes_list
                               */
                               public void setWork_notes_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_notes_listTracker = true;
                                       } else {
                                          localWork_notes_listTracker = false;
                                              
                                       }
                                   
                                            this.localWork_notes_list=param;
                                    

                               }
                            

                        /**
                        * field for Work_start
                        */

                        
                                    protected java.lang.String localWork_start ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_startTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_start(){
                               return localWork_start;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_start
                               */
                               public void setWork_start(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_startTracker = true;
                                       } else {
                                          localWork_startTracker = false;
                                              
                                       }
                                   
                                            this.localWork_start=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       Update.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":update",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "update",
                           xmlWriter);
                   }

               
                   }
                if (localActiveTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"active", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"active");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("active");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("active cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActive));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localActivity_dueTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"activity_due", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"activity_due");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("activity_due");
                                    }
                                

                                          if (localActivity_due==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("activity_due cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localActivity_due);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApprovalTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval");
                                    }
                                

                                          if (localApproval==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApproval_historyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval_history", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval_history");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval_history");
                                    }
                                

                                          if (localApproval_history==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval_history cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval_history);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApproval_setTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval_set", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval_set");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval_set");
                                    }
                                

                                          if (localApproval_set==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval_set cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval_set);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAssigned_toTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"assigned_to", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"assigned_to");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("assigned_to");
                                    }
                                

                                          if (localAssigned_to==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assigned_to cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssigned_to);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"assignment_group", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"assignment_group");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("assignment_group");
                                    }
                                

                                          if (localAssignment_group==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assignment_group cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssignment_group);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localBusiness_durationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"business_duration", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"business_duration");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("business_duration");
                                    }
                                

                                          if (localBusiness_duration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("business_duration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBusiness_duration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusiness_stcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"business_stc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"business_stc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("business_stc");
                                    }
                                

                                          if (localBusiness_stc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("business_stc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_stc));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalendar_durationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"calendar_duration", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"calendar_duration");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("calendar_duration");
                                    }
                                

                                          if (localCalendar_duration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("calendar_duration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCalendar_duration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalendar_stcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"calendar_stc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"calendar_stc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("calendar_stc");
                                    }
                                

                                          if (localCalendar_stc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("calendar_stc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_stc));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"caller_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"caller_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("caller_id");
                                    }
                                

                                          if (localCaller_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("caller_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCaller_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localCategoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"category", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"category");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("category");
                                    }
                                

                                          if (localCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCaused_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"caused_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"caused_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("caused_by");
                                    }
                                

                                          if (localCaused_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("caused_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCaused_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localChild_incidentsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"child_incidents", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"child_incidents");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("child_incidents");
                                    }
                                

                                          if (localChild_incidents==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("child_incidents cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChild_incidents));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClose_codeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"close_code", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"close_code");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("close_code");
                                    }
                                

                                          if (localClose_code==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("close_code cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClose_code);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClose_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"close_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"close_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("close_notes");
                                    }
                                

                                          if (localClose_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("close_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClose_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosed_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"closed_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"closed_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("closed_at");
                                    }
                                

                                          if (localClosed_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closed_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosed_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosed_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"closed_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"closed_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("closed_by");
                                    }
                                

                                          if (localClosed_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closed_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosed_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCmdb_ciTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"cmdb_ci", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"cmdb_ci");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("cmdb_ci");
                                    }
                                

                                          if (localCmdb_ci==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cmdb_ci cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCmdb_ci);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCommentsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"comments", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"comments");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("comments");
                                    }
                                

                                          if (localComments==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("comments cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localComments);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localComments_and_work_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"comments_and_work_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"comments_and_work_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("comments_and_work_notes");
                                    }
                                

                                          if (localComments_and_work_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("comments_and_work_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localComments_and_work_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"company", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"company");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("company");
                                    }
                                

                                          if (localCompany==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("company cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompany);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localContact_typeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"contact_type", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"contact_type");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("contact_type");
                                    }
                                

                                          if (localContact_type==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("contact_type cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localContact_type);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelation_displayTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"correlation_display", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"correlation_display");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("correlation_display");
                                    }
                                

                                          if (localCorrelation_display==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlation_display cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelation_display);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelation_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"correlation_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"correlation_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("correlation_id");
                                    }
                                

                                          if (localCorrelation_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlation_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelation_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelivery_planTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"delivery_plan", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"delivery_plan");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("delivery_plan");
                                    }
                                

                                          if (localDelivery_plan==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delivery_plan cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelivery_plan);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelivery_taskTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"delivery_task", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"delivery_task");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("delivery_task");
                                    }
                                

                                          if (localDelivery_task==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delivery_task cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelivery_task);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDescriptionTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"description", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"description");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("description");
                                    }
                                

                                          if (localDescription==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDescription);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDue_dateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"due_date", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"due_date");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("due_date");
                                    }
                                

                                          if (localDue_date==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDue_date);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEscalationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"escalation", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"escalation");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("escalation");
                                    }
                                

                                          if (localEscalation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("escalation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEscalation));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExpected_startTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"expected_start", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"expected_start");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("expected_start");
                                    }
                                

                                          if (localExpected_start==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("expected_start cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExpected_start);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFollow_upTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"follow_up", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"follow_up");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("follow_up");
                                    }
                                

                                          if (localFollow_up==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("follow_up cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFollow_up);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGroup_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"group_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"group_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("group_list");
                                    }
                                

                                          if (localGroup_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("group_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGroup_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localImpactTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"impact", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"impact");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("impact");
                                    }
                                

                                          if (localImpact==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("impact cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpact));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIncident_stateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"incident_state", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"incident_state");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("incident_state");
                                    }
                                

                                          if (localIncident_state==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("incident_state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIncident_state));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localKnowledgeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"knowledge", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"knowledge");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("knowledge");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("knowledge cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKnowledge));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLocationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"location", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"location");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("location");
                                    }
                                

                                          if (localLocation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("location cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLocation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMade_slaTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"made_sla", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"made_sla");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("made_sla");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("made_sla cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMade_sla));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNotifyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"notify", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"notify");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("notify");
                                    }
                                

                                          if (localNotify==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("notify cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNotify));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNumberTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"number", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"number");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("number");
                                    }
                                

                                          if (localNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpened_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"opened_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"opened_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("opened_at");
                                    }
                                

                                          if (localOpened_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("opened_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpened_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpened_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"opened_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"opened_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("opened_by");
                                    }
                                

                                          if (localOpened_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("opened_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpened_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOrderTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"order", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"order");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("order");
                                    }
                                

                                          if (localOrder==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("order cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrder));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localParentTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"parent", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"parent");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("parent");
                                    }
                                

                                          if (localParent==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("parent cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localParent);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localParent_incidentTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"parent_incident", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"parent_incident");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("parent_incident");
                                    }
                                

                                          if (localParent_incident==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("parent_incident cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localParent_incident);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPriorityTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"priority", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"priority");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("priority");
                                    }
                                

                                          if (localPriority==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("priority cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPriority));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProblem_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"problem_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"problem_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("problem_id");
                                    }
                                

                                          if (localProblem_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("problem_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProblem_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReassignment_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"reassignment_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"reassignment_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("reassignment_count");
                                    }
                                

                                          if (localReassignment_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reassignment_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReassignment_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReopen_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"reopen_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"reopen_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("reopen_count");
                                    }
                                

                                          if (localReopen_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reopen_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReopen_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResolved_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"resolved_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"resolved_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("resolved_at");
                                    }
                                

                                          if (localResolved_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resolved_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResolved_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResolved_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"resolved_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"resolved_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("resolved_by");
                                    }
                                

                                          if (localResolved_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resolved_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResolved_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRfcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"rfc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"rfc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("rfc");
                                    }
                                

                                          if (localRfc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("rfc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRfc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSeverityTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"severity", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"severity");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("severity");
                                    }
                                

                                          if (localSeverity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("severity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeverity));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShort_descriptionTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"short_description", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"short_description");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("short_description");
                                    }
                                

                                          if (localShort_description==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("short_description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShort_description);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSkillsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"skills", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"skills");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("skills");
                                    }
                                

                                          if (localSkills==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("skills cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSkills);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSla_dueTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sla_due", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sla_due");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sla_due");
                                    }
                                

                                          if (localSla_due==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sla_due cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSla_due);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"state", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"state");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("state");
                                    }
                                

                                          if (localState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSubcategoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"subcategory", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"subcategory");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("subcategory");
                                    }
                                

                                          if (localSubcategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("subcategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSubcategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_id");
                                    }
                                

                                          if (localSys_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (localTime_workedTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"time_worked", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"time_worked");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("time_worked");
                                    }
                                

                                          if (localTime_worked==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("time_worked cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTime_worked);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localU_actual_elapsed_timeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"u_actual_elapsed_time", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"u_actual_elapsed_time");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("u_actual_elapsed_time");
                                    }
                                

                                          if (localU_actual_elapsed_time==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("u_actual_elapsed_time cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_actual_elapsed_time));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localU_aging_categoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"u_aging_category", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"u_aging_category");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("u_aging_category");
                                    }
                                

                                          if (localU_aging_category==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("u_aging_category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localU_aging_category);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUpon_approvalTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"upon_approval", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"upon_approval");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("upon_approval");
                                    }
                                

                                          if (localUpon_approval==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("upon_approval cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUpon_approval);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUpon_rejectTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"upon_reject", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"upon_reject");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("upon_reject");
                                    }
                                

                                          if (localUpon_reject==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("upon_reject cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUpon_reject);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUrgencyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"urgency", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"urgency");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("urgency");
                                    }
                                

                                          if (localUrgency==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("urgency cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrgency));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUser_inputTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"user_input", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"user_input");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("user_input");
                                    }
                                

                                          if (localUser_input==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("user_input cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUser_input);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWatch_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"watch_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"watch_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("watch_list");
                                    }
                                

                                          if (localWatch_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("watch_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWatch_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_endTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_end", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_end");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_end");
                                    }
                                

                                          if (localWork_end==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_end cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_end);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_notes");
                                    }
                                

                                          if (localWork_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_notes_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_notes_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_notes_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_notes_list");
                                    }
                                

                                          if (localWork_notes_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_notes_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_notes_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_startTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_start", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_start");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_start");
                                    }
                                

                                          if (localWork_start==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_start cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_start);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localActiveTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "active"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActive));
                            } if (localActivity_dueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "activity_due"));
                                 
                                        if (localActivity_due != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActivity_due));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("activity_due cannot be null!!");
                                        }
                                    } if (localApprovalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval"));
                                 
                                        if (localApproval != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval cannot be null!!");
                                        }
                                    } if (localApproval_historyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval_history"));
                                 
                                        if (localApproval_history != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval_history));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval_history cannot be null!!");
                                        }
                                    } if (localApproval_setTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval_set"));
                                 
                                        if (localApproval_set != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval_set));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval_set cannot be null!!");
                                        }
                                    } if (localAssigned_toTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "assigned_to"));
                                 
                                        if (localAssigned_to != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssigned_to));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assigned_to cannot be null!!");
                                        }
                                    }
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "assignment_group"));
                                 
                                        if (localAssignment_group != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssignment_group));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assignment_group cannot be null!!");
                                        }
                                     if (localBusiness_durationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "business_duration"));
                                 
                                        if (localBusiness_duration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_duration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("business_duration cannot be null!!");
                                        }
                                    } if (localBusiness_stcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "business_stc"));
                                 
                                        if (localBusiness_stc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_stc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("business_stc cannot be null!!");
                                        }
                                    } if (localCalendar_durationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "calendar_duration"));
                                 
                                        if (localCalendar_duration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_duration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("calendar_duration cannot be null!!");
                                        }
                                    } if (localCalendar_stcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "calendar_stc"));
                                 
                                        if (localCalendar_stc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_stc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("calendar_stc cannot be null!!");
                                        }
                                    }
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "caller_id"));
                                 
                                        if (localCaller_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCaller_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("caller_id cannot be null!!");
                                        }
                                     if (localCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "category"));
                                 
                                        if (localCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                        }
                                    } if (localCaused_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "caused_by"));
                                 
                                        if (localCaused_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCaused_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("caused_by cannot be null!!");
                                        }
                                    } if (localChild_incidentsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "child_incidents"));
                                 
                                        if (localChild_incidents != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChild_incidents));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("child_incidents cannot be null!!");
                                        }
                                    } if (localClose_codeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "close_code"));
                                 
                                        if (localClose_code != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClose_code));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("close_code cannot be null!!");
                                        }
                                    } if (localClose_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "close_notes"));
                                 
                                        if (localClose_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClose_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("close_notes cannot be null!!");
                                        }
                                    } if (localClosed_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "closed_at"));
                                 
                                        if (localClosed_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosed_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closed_at cannot be null!!");
                                        }
                                    } if (localClosed_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "closed_by"));
                                 
                                        if (localClosed_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosed_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closed_by cannot be null!!");
                                        }
                                    } if (localCmdb_ciTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "cmdb_ci"));
                                 
                                        if (localCmdb_ci != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCmdb_ci));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cmdb_ci cannot be null!!");
                                        }
                                    } if (localCommentsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "comments"));
                                 
                                        if (localComments != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComments));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("comments cannot be null!!");
                                        }
                                    } if (localComments_and_work_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "comments_and_work_notes"));
                                 
                                        if (localComments_and_work_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComments_and_work_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("comments_and_work_notes cannot be null!!");
                                        }
                                    } if (localCompanyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "company"));
                                 
                                        if (localCompany != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompany));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("company cannot be null!!");
                                        }
                                    } if (localContact_typeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "contact_type"));
                                 
                                        if (localContact_type != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localContact_type));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("contact_type cannot be null!!");
                                        }
                                    } if (localCorrelation_displayTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "correlation_display"));
                                 
                                        if (localCorrelation_display != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelation_display));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlation_display cannot be null!!");
                                        }
                                    } if (localCorrelation_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "correlation_id"));
                                 
                                        if (localCorrelation_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelation_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlation_id cannot be null!!");
                                        }
                                    } if (localDelivery_planTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "delivery_plan"));
                                 
                                        if (localDelivery_plan != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelivery_plan));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delivery_plan cannot be null!!");
                                        }
                                    } if (localDelivery_taskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "delivery_task"));
                                 
                                        if (localDelivery_task != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelivery_task));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delivery_task cannot be null!!");
                                        }
                                    } if (localDescriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "description"));
                                 
                                        if (localDescription != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescription));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                        }
                                    } if (localDue_dateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "due_date"));
                                 
                                        if (localDue_date != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDue_date));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                        }
                                    } if (localEscalationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "escalation"));
                                 
                                        if (localEscalation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEscalation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("escalation cannot be null!!");
                                        }
                                    } if (localExpected_startTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "expected_start"));
                                 
                                        if (localExpected_start != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExpected_start));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("expected_start cannot be null!!");
                                        }
                                    } if (localFollow_upTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "follow_up"));
                                 
                                        if (localFollow_up != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFollow_up));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("follow_up cannot be null!!");
                                        }
                                    } if (localGroup_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "group_list"));
                                 
                                        if (localGroup_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGroup_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("group_list cannot be null!!");
                                        }
                                    } if (localImpactTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "impact"));
                                 
                                        if (localImpact != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpact));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("impact cannot be null!!");
                                        }
                                    } if (localIncident_stateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "incident_state"));
                                 
                                        if (localIncident_state != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIncident_state));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("incident_state cannot be null!!");
                                        }
                                    } if (localKnowledgeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "knowledge"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKnowledge));
                            } if (localLocationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "location"));
                                 
                                        if (localLocation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLocation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("location cannot be null!!");
                                        }
                                    } if (localMade_slaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "made_sla"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMade_sla));
                            } if (localNotifyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "notify"));
                                 
                                        if (localNotify != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNotify));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("notify cannot be null!!");
                                        }
                                    } if (localNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "number"));
                                 
                                        if (localNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                        }
                                    } if (localOpened_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "opened_at"));
                                 
                                        if (localOpened_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpened_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("opened_at cannot be null!!");
                                        }
                                    } if (localOpened_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "opened_by"));
                                 
                                        if (localOpened_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpened_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("opened_by cannot be null!!");
                                        }
                                    } if (localOrderTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "order"));
                                 
                                        if (localOrder != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrder));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("order cannot be null!!");
                                        }
                                    } if (localParentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "parent"));
                                 
                                        if (localParent != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParent));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("parent cannot be null!!");
                                        }
                                    } if (localParent_incidentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "parent_incident"));
                                 
                                        if (localParent_incident != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParent_incident));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("parent_incident cannot be null!!");
                                        }
                                    } if (localPriorityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "priority"));
                                 
                                        if (localPriority != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPriority));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("priority cannot be null!!");
                                        }
                                    } if (localProblem_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "problem_id"));
                                 
                                        if (localProblem_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProblem_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("problem_id cannot be null!!");
                                        }
                                    } if (localReassignment_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "reassignment_count"));
                                 
                                        if (localReassignment_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReassignment_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reassignment_count cannot be null!!");
                                        }
                                    } if (localReopen_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "reopen_count"));
                                 
                                        if (localReopen_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReopen_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reopen_count cannot be null!!");
                                        }
                                    } if (localResolved_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "resolved_at"));
                                 
                                        if (localResolved_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResolved_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resolved_at cannot be null!!");
                                        }
                                    } if (localResolved_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "resolved_by"));
                                 
                                        if (localResolved_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResolved_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resolved_by cannot be null!!");
                                        }
                                    } if (localRfcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "rfc"));
                                 
                                        if (localRfc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRfc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("rfc cannot be null!!");
                                        }
                                    } if (localSeverityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "severity"));
                                 
                                        if (localSeverity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeverity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("severity cannot be null!!");
                                        }
                                    } if (localShort_descriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "short_description"));
                                 
                                        if (localShort_description != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShort_description));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("short_description cannot be null!!");
                                        }
                                    } if (localSkillsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "skills"));
                                 
                                        if (localSkills != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSkills));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("skills cannot be null!!");
                                        }
                                    } if (localSla_dueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sla_due"));
                                 
                                        if (localSla_due != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSla_due));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sla_due cannot be null!!");
                                        }
                                    } if (localStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "state"));
                                 
                                        if (localState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                        }
                                    } if (localSubcategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "subcategory"));
                                 
                                        if (localSubcategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSubcategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("subcategory cannot be null!!");
                                        }
                                    }
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_id"));
                                 
                                        if (localSys_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                        }
                                     if (localTime_workedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "time_worked"));
                                 
                                        if (localTime_worked != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTime_worked));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("time_worked cannot be null!!");
                                        }
                                    } if (localU_actual_elapsed_timeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "u_actual_elapsed_time"));
                                 
                                        if (localU_actual_elapsed_time != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_actual_elapsed_time));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("u_actual_elapsed_time cannot be null!!");
                                        }
                                    } if (localU_aging_categoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "u_aging_category"));
                                 
                                        if (localU_aging_category != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_aging_category));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("u_aging_category cannot be null!!");
                                        }
                                    } if (localUpon_approvalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "upon_approval"));
                                 
                                        if (localUpon_approval != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUpon_approval));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("upon_approval cannot be null!!");
                                        }
                                    } if (localUpon_rejectTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "upon_reject"));
                                 
                                        if (localUpon_reject != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUpon_reject));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("upon_reject cannot be null!!");
                                        }
                                    } if (localUrgencyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "urgency"));
                                 
                                        if (localUrgency != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrgency));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("urgency cannot be null!!");
                                        }
                                    } if (localUser_inputTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "user_input"));
                                 
                                        if (localUser_input != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUser_input));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("user_input cannot be null!!");
                                        }
                                    } if (localWatch_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "watch_list"));
                                 
                                        if (localWatch_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWatch_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("watch_list cannot be null!!");
                                        }
                                    } if (localWork_endTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_end"));
                                 
                                        if (localWork_end != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_end));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_end cannot be null!!");
                                        }
                                    } if (localWork_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_notes"));
                                 
                                        if (localWork_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_notes cannot be null!!");
                                        }
                                    } if (localWork_notes_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_notes_list"));
                                 
                                        if (localWork_notes_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_notes_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_notes_list cannot be null!!");
                                        }
                                    } if (localWork_startTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_start"));
                                 
                                        if (localWork_start != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_start));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_start cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Update parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Update object =
                new Update();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"update".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Update)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","active").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActive(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","activity_due").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActivity_due(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval_history").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval_history(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval_set").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval_set(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","assigned_to").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssigned_to(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","assignment_group").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssignment_group(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","business_duration").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusiness_duration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","business_stc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusiness_stc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","calendar_duration").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalendar_duration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","calendar_stc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalendar_stc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","caller_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCaller_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","category").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","caused_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCaused_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","child_incidents").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setChild_incidents(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","close_code").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClose_code(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","close_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClose_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","closed_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosed_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","closed_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosed_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","cmdb_ci").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCmdb_ci(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","comments").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setComments(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","comments_and_work_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setComments_and_work_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","company").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompany(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","contact_type").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setContact_type(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","correlation_display").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelation_display(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","correlation_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelation_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","delivery_plan").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelivery_plan(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","delivery_task").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelivery_task(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","description").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDescription(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","due_date").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDue_date(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","escalation").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEscalation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","expected_start").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExpected_start(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","follow_up").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFollow_up(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","group_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGroup_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","impact").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImpact(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","incident_state").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIncident_state(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","knowledge").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setKnowledge(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","location").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLocation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","made_sla").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMade_sla(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","notify").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNotify(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","number").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","opened_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpened_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","opened_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpened_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","order").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOrder(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","parent").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setParent(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","parent_incident").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setParent_incident(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","priority").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPriority(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","problem_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProblem_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","reassignment_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReassignment_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","reopen_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReopen_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","resolved_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResolved_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","resolved_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResolved_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","rfc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRfc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","severity").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSeverity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","short_description").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShort_description(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","skills").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSkills(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sla_due").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSla_due(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","state").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","subcategory").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSubcategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","time_worked").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTime_worked(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","u_actual_elapsed_time").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setU_actual_elapsed_time(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","u_aging_category").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setU_aging_category(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","upon_approval").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUpon_approval(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","upon_reject").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUpon_reject(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","urgency").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUrgency(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","user_input").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUser_input(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","watch_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWatch_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_end").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_end(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_notes_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_notes_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_start").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_start(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class GetKeysResponse
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.service-now.com/incident",
                "getKeysResponse",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for Sys_id
                        * This was an Array!
                        */

                        
                                    protected java.lang.String[] localSys_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String[]
                           */
                           public  java.lang.String[] getSys_id(){
                               return localSys_id;
                           }

                           
                        


                               
                              /**
                               * validate the array for Sys_id
                               */
                              protected void validateSys_id(java.lang.String[] param){
                             
                              }


                             /**
                              * Auto generated setter method
                              * @param param Sys_id
                              */
                              public void setSys_id(java.lang.String[] param){
                              
                                   validateSys_id(param);

                               
                                          if (param != null){
                                             //update the setting tracker
                                             localSys_idTracker = true;
                                          } else {
                                             localSys_idTracker = false;
                                                 
                                          }
                                      
                                      this.localSys_id=param;
                              }

                               
                             
                             /**
                             * Auto generated add method for the array for convenience
                             * @param param java.lang.String
                             */
                             public void addSys_id(java.lang.String param){
                                   if (localSys_id == null){
                                   localSys_id = new java.lang.String[]{};
                                   }

                            
                                 //update the setting tracker
                                localSys_idTracker = true;
                            

                               java.util.List list =
                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localSys_id);
                               list.add(param);
                               this.localSys_id =
                             (java.lang.String[])list.toArray(
                            new java.lang.String[list.size()]);

                             }
                             

                        /**
                        * field for Count
                        */

                        
                                    protected java.lang.String localCount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCountTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCount(){
                               return localCount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Count
                               */
                               public void setCount(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCountTracker = true;
                                       } else {
                                          localCountTracker = false;
                                              
                                       }
                                   
                                            this.localCount=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       GetKeysResponse.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":getKeysResponse",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "getKeysResponse",
                           xmlWriter);
                   }

               
                   }
                if (localSys_idTracker){
                             if (localSys_id!=null) {
                                   namespace = "http://www.service-now.com/incident";
                                   boolean emptyNamespace = namespace == null || namespace.length() == 0;
                                   prefix =  emptyNamespace ? null : xmlWriter.getPrefix(namespace);
                                   for (int i = 0;i < localSys_id.length;i++){
                                        
                                            if (localSys_id[i] != null){
                                        
                                                if (!emptyNamespace) {
                                                    if (prefix == null) {
                                                        java.lang.String prefix2 = generatePrefix(namespace);

                                                        xmlWriter.writeStartElement(prefix2,"sys_id", namespace);
                                                        xmlWriter.writeNamespace(prefix2, namespace);
                                                        xmlWriter.setPrefix(prefix2, namespace);

                                                    } else {
                                                        xmlWriter.writeStartElement(namespace,"sys_id");
                                                    }

                                                } else {
                                                    xmlWriter.writeStartElement("sys_id");
                                                }

                                            
                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_id[i]));
                                                    
                                                xmlWriter.writeEndElement();
                                              
                                                } else {
                                                   
                                                           // we have to do nothing since minOccurs is zero
                                                       
                                                }

                                   }
                             } else {
                                 
                                         throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                    
                             }

                        } if (localCountTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("count");
                                    }
                                

                                          if (localCount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localSys_idTracker){
                            if (localSys_id!=null){
                                  for (int i = 0;i < localSys_id.length;i++){
                                      
                                         if (localSys_id[i] != null){
                                          elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                              "sys_id"));
                                          elementList.add(
                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_id[i]));
                                          } else {
                                             
                                                    // have to do nothing
                                                
                                          }
                                      

                                  }
                            } else {
                              
                                    throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                
                            }

                        } if (localCountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "count"));
                                 
                                        if (localCount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("count cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static GetKeysResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            GetKeysResponse object =
                new GetKeysResponse();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"getKeysResponse".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (GetKeysResponse)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                        java.util.ArrayList list1 = new java.util.ArrayList();
                    
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_id").equals(reader.getName())){
                                
                                    
                                    
                                    // Process the array and step past its final element's end.
                                    list1.add(reader.getElementText());
                                            
                                            //loop until we find a start element that is not part of this array
                                            boolean loopDone1 = false;
                                            while(!loopDone1){
                                                // Ensure we are at the EndElement
                                                while (!reader.isEndElement()){
                                                    reader.next();
                                                }
                                                // Step out of this element
                                                reader.next();
                                                // Step to next element event.
                                                while (!reader.isStartElement() && !reader.isEndElement())
                                                    reader.next();
                                                if (reader.isEndElement()){
                                                    //two continuous end elements means we are exiting the xml structure
                                                    loopDone1 = true;
                                                } else {
                                                    if (new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_id").equals(reader.getName())){
                                                         list1.add(reader.getElementText());
                                                        
                                                    }else{
                                                        loopDone1 = true;
                                                    }
                                                }
                                            }
                                            // call the converter utility  to convert and set the array
                                            
                                                    object.setSys_id((java.lang.String[])
                                                        list1.toArray(new java.lang.String[list1.size()]));
                                                
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class DeleteRecordResponse
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.service-now.com/incident",
                "deleteRecordResponse",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for Count
                        */

                        
                                    protected java.lang.String localCount ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCountTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCount(){
                               return localCount;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Count
                               */
                               public void setCount(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCountTracker = true;
                                       } else {
                                          localCountTracker = false;
                                              
                                       }
                                   
                                            this.localCount=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       DeleteRecordResponse.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":deleteRecordResponse",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "deleteRecordResponse",
                           xmlWriter);
                   }

               
                   }
                if (localCountTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("count");
                                    }
                                

                                          if (localCount==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCount);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localCountTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "count"));
                                 
                                        if (localCount != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCount));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("count cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static DeleteRecordResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            DeleteRecordResponse object =
                new DeleteRecordResponse();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"deleteRecordResponse".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (DeleteRecordResponse)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCount(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class Get
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.service-now.com/incident",
                "get",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for Sys_id
                        */

                        
                                    protected java.lang.String localSys_id ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_id(){
                               return localSys_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_id
                               */
                               public void setSys_id(java.lang.String param){
                            
                                            this.localSys_id=param;
                                    

                               }
                            

                        /**
                        * field for __use_view
                        */

                        
                                    protected java.lang.String local__use_view ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local__use_viewTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String get__use_view(){
                               return local__use_view;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param __use_view
                               */
                               public void set__use_view(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          local__use_viewTracker = true;
                                       } else {
                                          local__use_viewTracker = false;
                                              
                                       }
                                   
                                            this.local__use_view=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       Get.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":get",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "get",
                           xmlWriter);
                   }

               
                   }
               
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_id");
                                    }
                                

                                          if (localSys_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                              if (local__use_viewTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"__use_view", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"__use_view");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("__use_view");
                                    }
                                

                                          if (local__use_view==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("__use_view cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(local__use_view);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_id"));
                                 
                                        if (localSys_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                        }
                                     if (local__use_viewTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "__use_view"));
                                 
                                        if (local__use_view != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(local__use_view));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("__use_view cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static Get parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            Get object =
                new Get();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"get".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (Get)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","__use_view").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.set__use_view(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class InsertResponse
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.service-now.com/incident",
                "insertResponse",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for Sys_id
                        */

                        
                                    protected java.lang.String localSys_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_id(){
                               return localSys_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_id
                               */
                               public void setSys_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_idTracker = true;
                                       } else {
                                          localSys_idTracker = false;
                                              
                                       }
                                   
                                            this.localSys_id=param;
                                    

                               }
                            

                        /**
                        * field for Number
                        */

                        
                                    protected java.lang.String localNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumberTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumber(){
                               return localNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Number
                               */
                               public void setNumber(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNumberTracker = true;
                                       } else {
                                          localNumberTracker = false;
                                              
                                       }
                                   
                                            this.localNumber=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       InsertResponse.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":insertResponse",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "insertResponse",
                           xmlWriter);
                   }

               
                   }
                if (localSys_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_id");
                                    }
                                

                                          if (localSys_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNumberTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"number", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"number");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("number");
                                    }
                                

                                          if (localNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localSys_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_id"));
                                 
                                        if (localSys_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                        }
                                    } if (localNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "number"));
                                 
                                        if (localNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static InsertResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            InsertResponse object =
                new InsertResponse();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"insertResponse".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (InsertResponse)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","number").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class GetRecords
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.service-now.com/incident",
                "getRecords",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for Active
                        */

                        
                                    protected boolean localActive ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActiveTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getActive(){
                               return localActive;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Active
                               */
                               public void setActive(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localActiveTracker = false;
                                              
                                       } else {
                                          localActiveTracker = true;
                                       }
                                   
                                            this.localActive=param;
                                    

                               }
                            

                        /**
                        * field for Activity_due
                        */

                        
                                    protected java.lang.String localActivity_due ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActivity_dueTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getActivity_due(){
                               return localActivity_due;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Activity_due
                               */
                               public void setActivity_due(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localActivity_dueTracker = true;
                                       } else {
                                          localActivity_dueTracker = false;
                                              
                                       }
                                   
                                            this.localActivity_due=param;
                                    

                               }
                            

                        /**
                        * field for Approval
                        */

                        
                                    protected java.lang.String localApproval ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApprovalTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval(){
                               return localApproval;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval
                               */
                               public void setApproval(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApprovalTracker = true;
                                       } else {
                                          localApprovalTracker = false;
                                              
                                       }
                                   
                                            this.localApproval=param;
                                    

                               }
                            

                        /**
                        * field for Approval_history
                        */

                        
                                    protected java.lang.String localApproval_history ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApproval_historyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval_history(){
                               return localApproval_history;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval_history
                               */
                               public void setApproval_history(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApproval_historyTracker = true;
                                       } else {
                                          localApproval_historyTracker = false;
                                              
                                       }
                                   
                                            this.localApproval_history=param;
                                    

                               }
                            

                        /**
                        * field for Approval_set
                        */

                        
                                    protected java.lang.String localApproval_set ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApproval_setTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval_set(){
                               return localApproval_set;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval_set
                               */
                               public void setApproval_set(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApproval_setTracker = true;
                                       } else {
                                          localApproval_setTracker = false;
                                              
                                       }
                                   
                                            this.localApproval_set=param;
                                    

                               }
                            

                        /**
                        * field for Assigned_to
                        */

                        
                                    protected java.lang.String localAssigned_to ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAssigned_toTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssigned_to(){
                               return localAssigned_to;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Assigned_to
                               */
                               public void setAssigned_to(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAssigned_toTracker = true;
                                       } else {
                                          localAssigned_toTracker = false;
                                              
                                       }
                                   
                                            this.localAssigned_to=param;
                                    

                               }
                            

                        /**
                        * field for Assignment_group
                        */

                        
                                    protected java.lang.String localAssignment_group ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAssignment_groupTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssignment_group(){
                               return localAssignment_group;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Assignment_group
                               */
                               public void setAssignment_group(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAssignment_groupTracker = true;
                                       } else {
                                          localAssignment_groupTracker = false;
                                              
                                       }
                                   
                                            this.localAssignment_group=param;
                                    

                               }
                            

                        /**
                        * field for Business_duration
                        */

                        
                                    protected java.lang.String localBusiness_duration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusiness_durationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBusiness_duration(){
                               return localBusiness_duration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Business_duration
                               */
                               public void setBusiness_duration(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBusiness_durationTracker = true;
                                       } else {
                                          localBusiness_durationTracker = false;
                                              
                                       }
                                   
                                            this.localBusiness_duration=param;
                                    

                               }
                            

                        /**
                        * field for Business_stc
                        */

                        
                                    protected java.math.BigInteger localBusiness_stc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusiness_stcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getBusiness_stc(){
                               return localBusiness_stc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Business_stc
                               */
                               public void setBusiness_stc(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBusiness_stcTracker = true;
                                       } else {
                                          localBusiness_stcTracker = false;
                                              
                                       }
                                   
                                            this.localBusiness_stc=param;
                                    

                               }
                            

                        /**
                        * field for Calendar_duration
                        */

                        
                                    protected java.lang.String localCalendar_duration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalendar_durationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCalendar_duration(){
                               return localCalendar_duration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calendar_duration
                               */
                               public void setCalendar_duration(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCalendar_durationTracker = true;
                                       } else {
                                          localCalendar_durationTracker = false;
                                              
                                       }
                                   
                                            this.localCalendar_duration=param;
                                    

                               }
                            

                        /**
                        * field for Calendar_stc
                        */

                        
                                    protected java.math.BigInteger localCalendar_stc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalendar_stcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getCalendar_stc(){
                               return localCalendar_stc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calendar_stc
                               */
                               public void setCalendar_stc(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCalendar_stcTracker = true;
                                       } else {
                                          localCalendar_stcTracker = false;
                                              
                                       }
                                   
                                            this.localCalendar_stc=param;
                                    

                               }
                            

                        /**
                        * field for Caller_id
                        */

                        
                                    protected java.lang.String localCaller_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCaller_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCaller_id(){
                               return localCaller_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Caller_id
                               */
                               public void setCaller_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCaller_idTracker = true;
                                       } else {
                                          localCaller_idTracker = false;
                                              
                                       }
                                   
                                            this.localCaller_id=param;
                                    

                               }
                            

                        /**
                        * field for Category
                        */

                        
                                    protected java.lang.String localCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCategoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCategory(){
                               return localCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Category
                               */
                               public void setCategory(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCategoryTracker = true;
                                       } else {
                                          localCategoryTracker = false;
                                              
                                       }
                                   
                                            this.localCategory=param;
                                    

                               }
                            

                        /**
                        * field for Caused_by
                        */

                        
                                    protected java.lang.String localCaused_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCaused_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCaused_by(){
                               return localCaused_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Caused_by
                               */
                               public void setCaused_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCaused_byTracker = true;
                                       } else {
                                          localCaused_byTracker = false;
                                              
                                       }
                                   
                                            this.localCaused_by=param;
                                    

                               }
                            

                        /**
                        * field for Child_incidents
                        */

                        
                                    protected java.math.BigInteger localChild_incidents ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChild_incidentsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getChild_incidents(){
                               return localChild_incidents;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Child_incidents
                               */
                               public void setChild_incidents(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localChild_incidentsTracker = true;
                                       } else {
                                          localChild_incidentsTracker = false;
                                              
                                       }
                                   
                                            this.localChild_incidents=param;
                                    

                               }
                            

                        /**
                        * field for Close_code
                        */

                        
                                    protected java.lang.String localClose_code ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClose_codeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClose_code(){
                               return localClose_code;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Close_code
                               */
                               public void setClose_code(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClose_codeTracker = true;
                                       } else {
                                          localClose_codeTracker = false;
                                              
                                       }
                                   
                                            this.localClose_code=param;
                                    

                               }
                            

                        /**
                        * field for Close_notes
                        */

                        
                                    protected java.lang.String localClose_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClose_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClose_notes(){
                               return localClose_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Close_notes
                               */
                               public void setClose_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClose_notesTracker = true;
                                       } else {
                                          localClose_notesTracker = false;
                                              
                                       }
                                   
                                            this.localClose_notes=param;
                                    

                               }
                            

                        /**
                        * field for Closed_at
                        */

                        
                                    protected java.lang.String localClosed_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosed_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosed_at(){
                               return localClosed_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Closed_at
                               */
                               public void setClosed_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClosed_atTracker = true;
                                       } else {
                                          localClosed_atTracker = false;
                                              
                                       }
                                   
                                            this.localClosed_at=param;
                                    

                               }
                            

                        /**
                        * field for Closed_by
                        */

                        
                                    protected java.lang.String localClosed_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosed_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosed_by(){
                               return localClosed_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Closed_by
                               */
                               public void setClosed_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClosed_byTracker = true;
                                       } else {
                                          localClosed_byTracker = false;
                                              
                                       }
                                   
                                            this.localClosed_by=param;
                                    

                               }
                            

                        /**
                        * field for Cmdb_ci
                        */

                        
                                    protected java.lang.String localCmdb_ci ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCmdb_ciTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCmdb_ci(){
                               return localCmdb_ci;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cmdb_ci
                               */
                               public void setCmdb_ci(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCmdb_ciTracker = true;
                                       } else {
                                          localCmdb_ciTracker = false;
                                              
                                       }
                                   
                                            this.localCmdb_ci=param;
                                    

                               }
                            

                        /**
                        * field for Comments
                        */

                        
                                    protected java.lang.String localComments ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCommentsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getComments(){
                               return localComments;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Comments
                               */
                               public void setComments(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCommentsTracker = true;
                                       } else {
                                          localCommentsTracker = false;
                                              
                                       }
                                   
                                            this.localComments=param;
                                    

                               }
                            

                        /**
                        * field for Comments_and_work_notes
                        */

                        
                                    protected java.lang.String localComments_and_work_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localComments_and_work_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getComments_and_work_notes(){
                               return localComments_and_work_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Comments_and_work_notes
                               */
                               public void setComments_and_work_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localComments_and_work_notesTracker = true;
                                       } else {
                                          localComments_and_work_notesTracker = false;
                                              
                                       }
                                   
                                            this.localComments_and_work_notes=param;
                                    

                               }
                            

                        /**
                        * field for Company
                        */

                        
                                    protected java.lang.String localCompany ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompany(){
                               return localCompany;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Company
                               */
                               public void setCompany(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCompanyTracker = true;
                                       } else {
                                          localCompanyTracker = false;
                                              
                                       }
                                   
                                            this.localCompany=param;
                                    

                               }
                            

                        /**
                        * field for Contact_type
                        */

                        
                                    protected java.lang.String localContact_type ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localContact_typeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getContact_type(){
                               return localContact_type;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Contact_type
                               */
                               public void setContact_type(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localContact_typeTracker = true;
                                       } else {
                                          localContact_typeTracker = false;
                                              
                                       }
                                   
                                            this.localContact_type=param;
                                    

                               }
                            

                        /**
                        * field for Correlation_display
                        */

                        
                                    protected java.lang.String localCorrelation_display ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelation_displayTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelation_display(){
                               return localCorrelation_display;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Correlation_display
                               */
                               public void setCorrelation_display(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCorrelation_displayTracker = true;
                                       } else {
                                          localCorrelation_displayTracker = false;
                                              
                                       }
                                   
                                            this.localCorrelation_display=param;
                                    

                               }
                            

                        /**
                        * field for Correlation_id
                        */

                        
                                    protected java.lang.String localCorrelation_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelation_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelation_id(){
                               return localCorrelation_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Correlation_id
                               */
                               public void setCorrelation_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCorrelation_idTracker = true;
                                       } else {
                                          localCorrelation_idTracker = false;
                                              
                                       }
                                   
                                            this.localCorrelation_id=param;
                                    

                               }
                            

                        /**
                        * field for Delivery_plan
                        */

                        
                                    protected java.lang.String localDelivery_plan ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelivery_planTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelivery_plan(){
                               return localDelivery_plan;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Delivery_plan
                               */
                               public void setDelivery_plan(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDelivery_planTracker = true;
                                       } else {
                                          localDelivery_planTracker = false;
                                              
                                       }
                                   
                                            this.localDelivery_plan=param;
                                    

                               }
                            

                        /**
                        * field for Delivery_task
                        */

                        
                                    protected java.lang.String localDelivery_task ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelivery_taskTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelivery_task(){
                               return localDelivery_task;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Delivery_task
                               */
                               public void setDelivery_task(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDelivery_taskTracker = true;
                                       } else {
                                          localDelivery_taskTracker = false;
                                              
                                       }
                                   
                                            this.localDelivery_task=param;
                                    

                               }
                            

                        /**
                        * field for Description
                        */

                        
                                    protected java.lang.String localDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescriptionTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDescription(){
                               return localDescription;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Description
                               */
                               public void setDescription(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDescriptionTracker = true;
                                       } else {
                                          localDescriptionTracker = false;
                                              
                                       }
                                   
                                            this.localDescription=param;
                                    

                               }
                            

                        /**
                        * field for Due_date
                        */

                        
                                    protected java.lang.String localDue_date ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDue_dateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDue_date(){
                               return localDue_date;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Due_date
                               */
                               public void setDue_date(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDue_dateTracker = true;
                                       } else {
                                          localDue_dateTracker = false;
                                              
                                       }
                                   
                                            this.localDue_date=param;
                                    

                               }
                            

                        /**
                        * field for Escalation
                        */

                        
                                    protected java.math.BigInteger localEscalation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEscalationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getEscalation(){
                               return localEscalation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Escalation
                               */
                               public void setEscalation(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localEscalationTracker = true;
                                       } else {
                                          localEscalationTracker = false;
                                              
                                       }
                                   
                                            this.localEscalation=param;
                                    

                               }
                            

                        /**
                        * field for Expected_start
                        */

                        
                                    protected java.lang.String localExpected_start ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpected_startTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExpected_start(){
                               return localExpected_start;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Expected_start
                               */
                               public void setExpected_start(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localExpected_startTracker = true;
                                       } else {
                                          localExpected_startTracker = false;
                                              
                                       }
                                   
                                            this.localExpected_start=param;
                                    

                               }
                            

                        /**
                        * field for Follow_up
                        */

                        
                                    protected java.lang.String localFollow_up ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFollow_upTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFollow_up(){
                               return localFollow_up;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Follow_up
                               */
                               public void setFollow_up(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFollow_upTracker = true;
                                       } else {
                                          localFollow_upTracker = false;
                                              
                                       }
                                   
                                            this.localFollow_up=param;
                                    

                               }
                            

                        /**
                        * field for Group_list
                        */

                        
                                    protected java.lang.String localGroup_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGroup_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGroup_list(){
                               return localGroup_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Group_list
                               */
                               public void setGroup_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localGroup_listTracker = true;
                                       } else {
                                          localGroup_listTracker = false;
                                              
                                       }
                                   
                                            this.localGroup_list=param;
                                    

                               }
                            

                        /**
                        * field for Impact
                        */

                        
                                    protected java.math.BigInteger localImpact ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImpactTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getImpact(){
                               return localImpact;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Impact
                               */
                               public void setImpact(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localImpactTracker = true;
                                       } else {
                                          localImpactTracker = false;
                                              
                                       }
                                   
                                            this.localImpact=param;
                                    

                               }
                            

                        /**
                        * field for Incident_state
                        */

                        
                                    protected java.math.BigInteger localIncident_state ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIncident_stateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getIncident_state(){
                               return localIncident_state;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Incident_state
                               */
                               public void setIncident_state(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localIncident_stateTracker = true;
                                       } else {
                                          localIncident_stateTracker = false;
                                              
                                       }
                                   
                                            this.localIncident_state=param;
                                    

                               }
                            

                        /**
                        * field for Knowledge
                        */

                        
                                    protected boolean localKnowledge ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localKnowledgeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getKnowledge(){
                               return localKnowledge;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Knowledge
                               */
                               public void setKnowledge(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localKnowledgeTracker = false;
                                              
                                       } else {
                                          localKnowledgeTracker = true;
                                       }
                                   
                                            this.localKnowledge=param;
                                    

                               }
                            

                        /**
                        * field for Location
                        */

                        
                                    protected java.lang.String localLocation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLocationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLocation(){
                               return localLocation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Location
                               */
                               public void setLocation(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localLocationTracker = true;
                                       } else {
                                          localLocationTracker = false;
                                              
                                       }
                                   
                                            this.localLocation=param;
                                    

                               }
                            

                        /**
                        * field for Made_sla
                        */

                        
                                    protected boolean localMade_sla ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMade_slaTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getMade_sla(){
                               return localMade_sla;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Made_sla
                               */
                               public void setMade_sla(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localMade_slaTracker = false;
                                              
                                       } else {
                                          localMade_slaTracker = true;
                                       }
                                   
                                            this.localMade_sla=param;
                                    

                               }
                            

                        /**
                        * field for Notify
                        */

                        
                                    protected java.math.BigInteger localNotify ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNotifyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getNotify(){
                               return localNotify;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Notify
                               */
                               public void setNotify(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNotifyTracker = true;
                                       } else {
                                          localNotifyTracker = false;
                                              
                                       }
                                   
                                            this.localNotify=param;
                                    

                               }
                            

                        /**
                        * field for Number
                        */

                        
                                    protected java.lang.String localNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumberTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumber(){
                               return localNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Number
                               */
                               public void setNumber(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNumberTracker = true;
                                       } else {
                                          localNumberTracker = false;
                                              
                                       }
                                   
                                            this.localNumber=param;
                                    

                               }
                            

                        /**
                        * field for Opened_at
                        */

                        
                                    protected java.lang.String localOpened_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpened_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpened_at(){
                               return localOpened_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Opened_at
                               */
                               public void setOpened_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOpened_atTracker = true;
                                       } else {
                                          localOpened_atTracker = false;
                                              
                                       }
                                   
                                            this.localOpened_at=param;
                                    

                               }
                            

                        /**
                        * field for Opened_by
                        */

                        
                                    protected java.lang.String localOpened_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpened_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpened_by(){
                               return localOpened_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Opened_by
                               */
                               public void setOpened_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOpened_byTracker = true;
                                       } else {
                                          localOpened_byTracker = false;
                                              
                                       }
                                   
                                            this.localOpened_by=param;
                                    

                               }
                            

                        /**
                        * field for Order
                        */

                        
                                    protected java.math.BigInteger localOrder ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOrderTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getOrder(){
                               return localOrder;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Order
                               */
                               public void setOrder(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOrderTracker = true;
                                       } else {
                                          localOrderTracker = false;
                                              
                                       }
                                   
                                            this.localOrder=param;
                                    

                               }
                            

                        /**
                        * field for Parent
                        */

                        
                                    protected java.lang.String localParent ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localParentTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getParent(){
                               return localParent;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Parent
                               */
                               public void setParent(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localParentTracker = true;
                                       } else {
                                          localParentTracker = false;
                                              
                                       }
                                   
                                            this.localParent=param;
                                    

                               }
                            

                        /**
                        * field for Parent_incident
                        */

                        
                                    protected java.lang.String localParent_incident ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localParent_incidentTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getParent_incident(){
                               return localParent_incident;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Parent_incident
                               */
                               public void setParent_incident(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localParent_incidentTracker = true;
                                       } else {
                                          localParent_incidentTracker = false;
                                              
                                       }
                                   
                                            this.localParent_incident=param;
                                    

                               }
                            

                        /**
                        * field for Priority
                        */

                        
                                    protected java.math.BigInteger localPriority ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPriorityTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getPriority(){
                               return localPriority;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Priority
                               */
                               public void setPriority(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localPriorityTracker = true;
                                       } else {
                                          localPriorityTracker = false;
                                              
                                       }
                                   
                                            this.localPriority=param;
                                    

                               }
                            

                        /**
                        * field for Problem_id
                        */

                        
                                    protected java.lang.String localProblem_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProblem_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProblem_id(){
                               return localProblem_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Problem_id
                               */
                               public void setProblem_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localProblem_idTracker = true;
                                       } else {
                                          localProblem_idTracker = false;
                                              
                                       }
                                   
                                            this.localProblem_id=param;
                                    

                               }
                            

                        /**
                        * field for Reassignment_count
                        */

                        
                                    protected java.math.BigInteger localReassignment_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReassignment_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getReassignment_count(){
                               return localReassignment_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reassignment_count
                               */
                               public void setReassignment_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReassignment_countTracker = true;
                                       } else {
                                          localReassignment_countTracker = false;
                                              
                                       }
                                   
                                            this.localReassignment_count=param;
                                    

                               }
                            

                        /**
                        * field for Reopen_count
                        */

                        
                                    protected java.math.BigInteger localReopen_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReopen_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getReopen_count(){
                               return localReopen_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reopen_count
                               */
                               public void setReopen_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReopen_countTracker = true;
                                       } else {
                                          localReopen_countTracker = false;
                                              
                                       }
                                   
                                            this.localReopen_count=param;
                                    

                               }
                            

                        /**
                        * field for Resolved_at
                        */

                        
                                    protected java.lang.String localResolved_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResolved_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResolved_at(){
                               return localResolved_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Resolved_at
                               */
                               public void setResolved_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localResolved_atTracker = true;
                                       } else {
                                          localResolved_atTracker = false;
                                              
                                       }
                                   
                                            this.localResolved_at=param;
                                    

                               }
                            

                        /**
                        * field for Resolved_by
                        */

                        
                                    protected java.lang.String localResolved_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResolved_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResolved_by(){
                               return localResolved_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Resolved_by
                               */
                               public void setResolved_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localResolved_byTracker = true;
                                       } else {
                                          localResolved_byTracker = false;
                                              
                                       }
                                   
                                            this.localResolved_by=param;
                                    

                               }
                            

                        /**
                        * field for Rfc
                        */

                        
                                    protected java.lang.String localRfc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRfcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRfc(){
                               return localRfc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Rfc
                               */
                               public void setRfc(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localRfcTracker = true;
                                       } else {
                                          localRfcTracker = false;
                                              
                                       }
                                   
                                            this.localRfc=param;
                                    

                               }
                            

                        /**
                        * field for Severity
                        */

                        
                                    protected java.math.BigInteger localSeverity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSeverityTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getSeverity(){
                               return localSeverity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Severity
                               */
                               public void setSeverity(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSeverityTracker = true;
                                       } else {
                                          localSeverityTracker = false;
                                              
                                       }
                                   
                                            this.localSeverity=param;
                                    

                               }
                            

                        /**
                        * field for Short_description
                        */

                        
                                    protected java.lang.String localShort_description ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShort_descriptionTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShort_description(){
                               return localShort_description;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Short_description
                               */
                               public void setShort_description(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localShort_descriptionTracker = true;
                                       } else {
                                          localShort_descriptionTracker = false;
                                              
                                       }
                                   
                                            this.localShort_description=param;
                                    

                               }
                            

                        /**
                        * field for Skills
                        */

                        
                                    protected java.lang.String localSkills ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSkillsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSkills(){
                               return localSkills;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Skills
                               */
                               public void setSkills(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSkillsTracker = true;
                                       } else {
                                          localSkillsTracker = false;
                                              
                                       }
                                   
                                            this.localSkills=param;
                                    

                               }
                            

                        /**
                        * field for Sla_due
                        */

                        
                                    protected java.lang.String localSla_due ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSla_dueTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSla_due(){
                               return localSla_due;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sla_due
                               */
                               public void setSla_due(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSla_dueTracker = true;
                                       } else {
                                          localSla_dueTracker = false;
                                              
                                       }
                                   
                                            this.localSla_due=param;
                                    

                               }
                            

                        /**
                        * field for State
                        */

                        
                                    protected java.math.BigInteger localState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getState(){
                               return localState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param State
                               */
                               public void setState(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localStateTracker = true;
                                       } else {
                                          localStateTracker = false;
                                              
                                       }
                                   
                                            this.localState=param;
                                    

                               }
                            

                        /**
                        * field for Subcategory
                        */

                        
                                    protected java.lang.String localSubcategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSubcategoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSubcategory(){
                               return localSubcategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Subcategory
                               */
                               public void setSubcategory(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSubcategoryTracker = true;
                                       } else {
                                          localSubcategoryTracker = false;
                                              
                                       }
                                   
                                            this.localSubcategory=param;
                                    

                               }
                            

                        /**
                        * field for Sys_class_name
                        */

                        
                                    protected java.lang.String localSys_class_name ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_class_nameTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_class_name(){
                               return localSys_class_name;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_class_name
                               */
                               public void setSys_class_name(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_class_nameTracker = true;
                                       } else {
                                          localSys_class_nameTracker = false;
                                              
                                       }
                                   
                                            this.localSys_class_name=param;
                                    

                               }
                            

                        /**
                        * field for Sys_created_by
                        */

                        
                                    protected java.lang.String localSys_created_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_created_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_created_by(){
                               return localSys_created_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_created_by
                               */
                               public void setSys_created_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_created_byTracker = true;
                                       } else {
                                          localSys_created_byTracker = false;
                                              
                                       }
                                   
                                            this.localSys_created_by=param;
                                    

                               }
                            

                        /**
                        * field for Sys_created_on
                        */

                        
                                    protected java.lang.String localSys_created_on ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_created_onTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_created_on(){
                               return localSys_created_on;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_created_on
                               */
                               public void setSys_created_on(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_created_onTracker = true;
                                       } else {
                                          localSys_created_onTracker = false;
                                              
                                       }
                                   
                                            this.localSys_created_on=param;
                                    

                               }
                            

                        /**
                        * field for Sys_domain
                        */

                        
                                    protected java.lang.String localSys_domain ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_domainTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_domain(){
                               return localSys_domain;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_domain
                               */
                               public void setSys_domain(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_domainTracker = true;
                                       } else {
                                          localSys_domainTracker = false;
                                              
                                       }
                                   
                                            this.localSys_domain=param;
                                    

                               }
                            

                        /**
                        * field for Sys_id
                        */

                        
                                    protected java.lang.String localSys_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_id(){
                               return localSys_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_id
                               */
                               public void setSys_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_idTracker = true;
                                       } else {
                                          localSys_idTracker = false;
                                              
                                       }
                                   
                                            this.localSys_id=param;
                                    

                               }
                            

                        /**
                        * field for Sys_mod_count
                        */

                        
                                    protected java.math.BigInteger localSys_mod_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_mod_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getSys_mod_count(){
                               return localSys_mod_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_mod_count
                               */
                               public void setSys_mod_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_mod_countTracker = true;
                                       } else {
                                          localSys_mod_countTracker = false;
                                              
                                       }
                                   
                                            this.localSys_mod_count=param;
                                    

                               }
                            

                        /**
                        * field for Sys_tags
                        */

                        
                                    protected java.lang.String localSys_tags ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_tagsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_tags(){
                               return localSys_tags;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_tags
                               */
                               public void setSys_tags(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_tagsTracker = true;
                                       } else {
                                          localSys_tagsTracker = false;
                                              
                                       }
                                   
                                            this.localSys_tags=param;
                                    

                               }
                            

                        /**
                        * field for Sys_updated_by
                        */

                        
                                    protected java.lang.String localSys_updated_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_updated_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_updated_by(){
                               return localSys_updated_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_updated_by
                               */
                               public void setSys_updated_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_updated_byTracker = true;
                                       } else {
                                          localSys_updated_byTracker = false;
                                              
                                       }
                                   
                                            this.localSys_updated_by=param;
                                    

                               }
                            

                        /**
                        * field for Sys_updated_on
                        */

                        
                                    protected java.lang.String localSys_updated_on ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_updated_onTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_updated_on(){
                               return localSys_updated_on;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_updated_on
                               */
                               public void setSys_updated_on(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_updated_onTracker = true;
                                       } else {
                                          localSys_updated_onTracker = false;
                                              
                                       }
                                   
                                            this.localSys_updated_on=param;
                                    

                               }
                            

                        /**
                        * field for Time_worked
                        */

                        
                                    protected java.lang.String localTime_worked ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTime_workedTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTime_worked(){
                               return localTime_worked;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Time_worked
                               */
                               public void setTime_worked(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTime_workedTracker = true;
                                       } else {
                                          localTime_workedTracker = false;
                                              
                                       }
                                   
                                            this.localTime_worked=param;
                                    

                               }
                            

                        /**
                        * field for U_actual_elapsed_time
                        */

                        
                                    protected java.math.BigInteger localU_actual_elapsed_time ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localU_actual_elapsed_timeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getU_actual_elapsed_time(){
                               return localU_actual_elapsed_time;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param U_actual_elapsed_time
                               */
                               public void setU_actual_elapsed_time(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localU_actual_elapsed_timeTracker = true;
                                       } else {
                                          localU_actual_elapsed_timeTracker = false;
                                              
                                       }
                                   
                                            this.localU_actual_elapsed_time=param;
                                    

                               }
                            

                        /**
                        * field for U_aging_category
                        */

                        
                                    protected java.lang.String localU_aging_category ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localU_aging_categoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getU_aging_category(){
                               return localU_aging_category;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param U_aging_category
                               */
                               public void setU_aging_category(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localU_aging_categoryTracker = true;
                                       } else {
                                          localU_aging_categoryTracker = false;
                                              
                                       }
                                   
                                            this.localU_aging_category=param;
                                    

                               }
                            

                        /**
                        * field for Upon_approval
                        */

                        
                                    protected java.lang.String localUpon_approval ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUpon_approvalTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUpon_approval(){
                               return localUpon_approval;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Upon_approval
                               */
                               public void setUpon_approval(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUpon_approvalTracker = true;
                                       } else {
                                          localUpon_approvalTracker = false;
                                              
                                       }
                                   
                                            this.localUpon_approval=param;
                                    

                               }
                            

                        /**
                        * field for Upon_reject
                        */

                        
                                    protected java.lang.String localUpon_reject ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUpon_rejectTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUpon_reject(){
                               return localUpon_reject;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Upon_reject
                               */
                               public void setUpon_reject(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUpon_rejectTracker = true;
                                       } else {
                                          localUpon_rejectTracker = false;
                                              
                                       }
                                   
                                            this.localUpon_reject=param;
                                    

                               }
                            

                        /**
                        * field for Urgency
                        */

                        
                                    protected java.math.BigInteger localUrgency ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUrgencyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getUrgency(){
                               return localUrgency;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Urgency
                               */
                               public void setUrgency(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUrgencyTracker = true;
                                       } else {
                                          localUrgencyTracker = false;
                                              
                                       }
                                   
                                            this.localUrgency=param;
                                    

                               }
                            

                        /**
                        * field for User_input
                        */

                        
                                    protected java.lang.String localUser_input ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUser_inputTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUser_input(){
                               return localUser_input;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param User_input
                               */
                               public void setUser_input(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUser_inputTracker = true;
                                       } else {
                                          localUser_inputTracker = false;
                                              
                                       }
                                   
                                            this.localUser_input=param;
                                    

                               }
                            

                        /**
                        * field for Watch_list
                        */

                        
                                    protected java.lang.String localWatch_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWatch_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWatch_list(){
                               return localWatch_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Watch_list
                               */
                               public void setWatch_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWatch_listTracker = true;
                                       } else {
                                          localWatch_listTracker = false;
                                              
                                       }
                                   
                                            this.localWatch_list=param;
                                    

                               }
                            

                        /**
                        * field for Work_end
                        */

                        
                                    protected java.lang.String localWork_end ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_endTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_end(){
                               return localWork_end;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_end
                               */
                               public void setWork_end(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_endTracker = true;
                                       } else {
                                          localWork_endTracker = false;
                                              
                                       }
                                   
                                            this.localWork_end=param;
                                    

                               }
                            

                        /**
                        * field for Work_notes
                        */

                        
                                    protected java.lang.String localWork_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_notes(){
                               return localWork_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_notes
                               */
                               public void setWork_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_notesTracker = true;
                                       } else {
                                          localWork_notesTracker = false;
                                              
                                       }
                                   
                                            this.localWork_notes=param;
                                    

                               }
                            

                        /**
                        * field for Work_notes_list
                        */

                        
                                    protected java.lang.String localWork_notes_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_notes_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_notes_list(){
                               return localWork_notes_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_notes_list
                               */
                               public void setWork_notes_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_notes_listTracker = true;
                                       } else {
                                          localWork_notes_listTracker = false;
                                              
                                       }
                                   
                                            this.localWork_notes_list=param;
                                    

                               }
                            

                        /**
                        * field for Work_start
                        */

                        
                                    protected java.lang.String localWork_start ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_startTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_start(){
                               return localWork_start;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_start
                               */
                               public void setWork_start(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_startTracker = true;
                                       } else {
                                          localWork_startTracker = false;
                                              
                                       }
                                   
                                            this.localWork_start=param;
                                    

                               }
                            

                        /**
                        * field for __use_view
                        */

                        
                                    protected java.lang.String local__use_view ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local__use_viewTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String get__use_view(){
                               return local__use_view;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param __use_view
                               */
                               public void set__use_view(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          local__use_viewTracker = true;
                                       } else {
                                          local__use_viewTracker = false;
                                              
                                       }
                                   
                                            this.local__use_view=param;
                                    

                               }
                            

                        /**
                        * field for __encoded_query
                        */

                        
                                    protected java.lang.String local__encoded_query ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local__encoded_queryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String get__encoded_query(){
                               return local__encoded_query;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param __encoded_query
                               */
                               public void set__encoded_query(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          local__encoded_queryTracker = true;
                                       } else {
                                          local__encoded_queryTracker = false;
                                              
                                       }
                                   
                                            this.local__encoded_query=param;
                                    

                               }
                            

                        /**
                        * field for __limit
                        */

                        
                                    protected java.lang.String local__limit ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local__limitTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String get__limit(){
                               return local__limit;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param __limit
                               */
                               public void set__limit(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          local__limitTracker = true;
                                       } else {
                                          local__limitTracker = false;
                                              
                                       }
                                   
                                            this.local__limit=param;
                                    

                               }
                            

                        /**
                        * field for __first_row
                        */

                        
                                    protected java.lang.String local__first_row ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local__first_rowTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String get__first_row(){
                               return local__first_row;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param __first_row
                               */
                               public void set__first_row(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          local__first_rowTracker = true;
                                       } else {
                                          local__first_rowTracker = false;
                                              
                                       }
                                   
                                            this.local__first_row=param;
                                    

                               }
                            

                        /**
                        * field for __last_row
                        */

                        
                                    protected java.lang.String local__last_row ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local__last_rowTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String get__last_row(){
                               return local__last_row;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param __last_row
                               */
                               public void set__last_row(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          local__last_rowTracker = true;
                                       } else {
                                          local__last_rowTracker = false;
                                              
                                       }
                                   
                                            this.local__last_row=param;
                                    

                               }
                            

                        /**
                        * field for __order_by
                        */

                        
                                    protected java.lang.String local__order_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local__order_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String get__order_by(){
                               return local__order_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param __order_by
                               */
                               public void set__order_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          local__order_byTracker = true;
                                       } else {
                                          local__order_byTracker = false;
                                              
                                       }
                                   
                                            this.local__order_by=param;
                                    

                               }
                            

                        /**
                        * field for __order_by_desc
                        */

                        
                                    protected java.lang.String local__order_by_desc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local__order_by_descTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String get__order_by_desc(){
                               return local__order_by_desc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param __order_by_desc
                               */
                               public void set__order_by_desc(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          local__order_by_descTracker = true;
                                       } else {
                                          local__order_by_descTracker = false;
                                              
                                       }
                                   
                                            this.local__order_by_desc=param;
                                    

                               }
                            

                        /**
                        * field for __exclude_columns
                        */

                        
                                    protected java.lang.String local__exclude_columns ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean local__exclude_columnsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String get__exclude_columns(){
                               return local__exclude_columns;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param __exclude_columns
                               */
                               public void set__exclude_columns(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          local__exclude_columnsTracker = true;
                                       } else {
                                          local__exclude_columnsTracker = false;
                                              
                                       }
                                   
                                            this.local__exclude_columns=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       GetRecords.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":getRecords",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "getRecords",
                           xmlWriter);
                   }

               
                   }
                if (localActiveTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"active", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"active");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("active");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("active cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActive));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localActivity_dueTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"activity_due", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"activity_due");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("activity_due");
                                    }
                                

                                          if (localActivity_due==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("activity_due cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localActivity_due);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApprovalTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval");
                                    }
                                

                                          if (localApproval==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApproval_historyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval_history", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval_history");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval_history");
                                    }
                                

                                          if (localApproval_history==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval_history cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval_history);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApproval_setTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval_set", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval_set");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval_set");
                                    }
                                

                                          if (localApproval_set==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval_set cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval_set);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAssigned_toTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"assigned_to", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"assigned_to");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("assigned_to");
                                    }
                                

                                          if (localAssigned_to==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assigned_to cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssigned_to);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAssignment_groupTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"assignment_group", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"assignment_group");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("assignment_group");
                                    }
                                

                                          if (localAssignment_group==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assignment_group cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssignment_group);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusiness_durationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"business_duration", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"business_duration");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("business_duration");
                                    }
                                

                                          if (localBusiness_duration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("business_duration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBusiness_duration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusiness_stcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"business_stc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"business_stc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("business_stc");
                                    }
                                

                                          if (localBusiness_stc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("business_stc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_stc));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalendar_durationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"calendar_duration", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"calendar_duration");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("calendar_duration");
                                    }
                                

                                          if (localCalendar_duration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("calendar_duration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCalendar_duration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalendar_stcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"calendar_stc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"calendar_stc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("calendar_stc");
                                    }
                                

                                          if (localCalendar_stc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("calendar_stc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_stc));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCaller_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"caller_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"caller_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("caller_id");
                                    }
                                

                                          if (localCaller_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("caller_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCaller_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCategoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"category", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"category");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("category");
                                    }
                                

                                          if (localCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCaused_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"caused_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"caused_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("caused_by");
                                    }
                                

                                          if (localCaused_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("caused_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCaused_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localChild_incidentsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"child_incidents", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"child_incidents");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("child_incidents");
                                    }
                                

                                          if (localChild_incidents==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("child_incidents cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChild_incidents));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClose_codeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"close_code", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"close_code");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("close_code");
                                    }
                                

                                          if (localClose_code==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("close_code cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClose_code);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClose_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"close_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"close_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("close_notes");
                                    }
                                

                                          if (localClose_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("close_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClose_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosed_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"closed_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"closed_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("closed_at");
                                    }
                                

                                          if (localClosed_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closed_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosed_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosed_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"closed_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"closed_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("closed_by");
                                    }
                                

                                          if (localClosed_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closed_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosed_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCmdb_ciTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"cmdb_ci", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"cmdb_ci");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("cmdb_ci");
                                    }
                                

                                          if (localCmdb_ci==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cmdb_ci cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCmdb_ci);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCommentsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"comments", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"comments");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("comments");
                                    }
                                

                                          if (localComments==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("comments cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localComments);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localComments_and_work_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"comments_and_work_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"comments_and_work_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("comments_and_work_notes");
                                    }
                                

                                          if (localComments_and_work_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("comments_and_work_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localComments_and_work_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"company", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"company");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("company");
                                    }
                                

                                          if (localCompany==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("company cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompany);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localContact_typeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"contact_type", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"contact_type");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("contact_type");
                                    }
                                

                                          if (localContact_type==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("contact_type cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localContact_type);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelation_displayTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"correlation_display", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"correlation_display");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("correlation_display");
                                    }
                                

                                          if (localCorrelation_display==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlation_display cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelation_display);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelation_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"correlation_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"correlation_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("correlation_id");
                                    }
                                

                                          if (localCorrelation_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlation_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelation_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelivery_planTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"delivery_plan", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"delivery_plan");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("delivery_plan");
                                    }
                                

                                          if (localDelivery_plan==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delivery_plan cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelivery_plan);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelivery_taskTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"delivery_task", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"delivery_task");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("delivery_task");
                                    }
                                

                                          if (localDelivery_task==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delivery_task cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelivery_task);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDescriptionTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"description", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"description");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("description");
                                    }
                                

                                          if (localDescription==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDescription);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDue_dateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"due_date", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"due_date");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("due_date");
                                    }
                                

                                          if (localDue_date==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDue_date);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEscalationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"escalation", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"escalation");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("escalation");
                                    }
                                

                                          if (localEscalation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("escalation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEscalation));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExpected_startTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"expected_start", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"expected_start");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("expected_start");
                                    }
                                

                                          if (localExpected_start==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("expected_start cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExpected_start);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFollow_upTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"follow_up", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"follow_up");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("follow_up");
                                    }
                                

                                          if (localFollow_up==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("follow_up cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFollow_up);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGroup_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"group_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"group_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("group_list");
                                    }
                                

                                          if (localGroup_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("group_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGroup_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localImpactTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"impact", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"impact");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("impact");
                                    }
                                

                                          if (localImpact==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("impact cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpact));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIncident_stateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"incident_state", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"incident_state");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("incident_state");
                                    }
                                

                                          if (localIncident_state==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("incident_state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIncident_state));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localKnowledgeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"knowledge", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"knowledge");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("knowledge");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("knowledge cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKnowledge));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLocationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"location", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"location");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("location");
                                    }
                                

                                          if (localLocation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("location cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLocation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMade_slaTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"made_sla", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"made_sla");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("made_sla");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("made_sla cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMade_sla));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNotifyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"notify", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"notify");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("notify");
                                    }
                                

                                          if (localNotify==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("notify cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNotify));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNumberTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"number", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"number");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("number");
                                    }
                                

                                          if (localNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpened_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"opened_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"opened_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("opened_at");
                                    }
                                

                                          if (localOpened_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("opened_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpened_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpened_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"opened_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"opened_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("opened_by");
                                    }
                                

                                          if (localOpened_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("opened_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpened_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOrderTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"order", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"order");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("order");
                                    }
                                

                                          if (localOrder==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("order cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrder));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localParentTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"parent", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"parent");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("parent");
                                    }
                                

                                          if (localParent==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("parent cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localParent);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localParent_incidentTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"parent_incident", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"parent_incident");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("parent_incident");
                                    }
                                

                                          if (localParent_incident==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("parent_incident cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localParent_incident);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPriorityTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"priority", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"priority");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("priority");
                                    }
                                

                                          if (localPriority==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("priority cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPriority));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProblem_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"problem_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"problem_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("problem_id");
                                    }
                                

                                          if (localProblem_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("problem_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProblem_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReassignment_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"reassignment_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"reassignment_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("reassignment_count");
                                    }
                                

                                          if (localReassignment_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reassignment_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReassignment_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReopen_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"reopen_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"reopen_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("reopen_count");
                                    }
                                

                                          if (localReopen_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reopen_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReopen_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResolved_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"resolved_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"resolved_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("resolved_at");
                                    }
                                

                                          if (localResolved_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resolved_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResolved_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResolved_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"resolved_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"resolved_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("resolved_by");
                                    }
                                

                                          if (localResolved_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resolved_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResolved_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRfcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"rfc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"rfc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("rfc");
                                    }
                                

                                          if (localRfc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("rfc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRfc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSeverityTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"severity", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"severity");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("severity");
                                    }
                                

                                          if (localSeverity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("severity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeverity));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShort_descriptionTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"short_description", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"short_description");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("short_description");
                                    }
                                

                                          if (localShort_description==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("short_description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShort_description);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSkillsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"skills", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"skills");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("skills");
                                    }
                                

                                          if (localSkills==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("skills cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSkills);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSla_dueTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sla_due", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sla_due");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sla_due");
                                    }
                                

                                          if (localSla_due==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sla_due cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSla_due);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"state", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"state");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("state");
                                    }
                                

                                          if (localState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSubcategoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"subcategory", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"subcategory");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("subcategory");
                                    }
                                

                                          if (localSubcategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("subcategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSubcategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_class_nameTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_class_name", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_class_name");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_class_name");
                                    }
                                

                                          if (localSys_class_name==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_class_name cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_class_name);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_created_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_created_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_created_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_created_by");
                                    }
                                

                                          if (localSys_created_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_created_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_created_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_created_onTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_created_on", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_created_on");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_created_on");
                                    }
                                

                                          if (localSys_created_on==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_created_on cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_created_on);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_domainTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_domain", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_domain");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_domain");
                                    }
                                

                                          if (localSys_domain==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_domain cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_domain);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_id");
                                    }
                                

                                          if (localSys_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_mod_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_mod_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_mod_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_mod_count");
                                    }
                                

                                          if (localSys_mod_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_mod_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_mod_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_tagsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_tags", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_tags");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_tags");
                                    }
                                

                                          if (localSys_tags==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_tags cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_tags);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_updated_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_updated_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_updated_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_updated_by");
                                    }
                                

                                          if (localSys_updated_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_updated_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_updated_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_updated_onTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_updated_on", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_updated_on");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_updated_on");
                                    }
                                

                                          if (localSys_updated_on==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_updated_on cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_updated_on);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTime_workedTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"time_worked", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"time_worked");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("time_worked");
                                    }
                                

                                          if (localTime_worked==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("time_worked cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTime_worked);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localU_actual_elapsed_timeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"u_actual_elapsed_time", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"u_actual_elapsed_time");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("u_actual_elapsed_time");
                                    }
                                

                                          if (localU_actual_elapsed_time==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("u_actual_elapsed_time cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_actual_elapsed_time));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localU_aging_categoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"u_aging_category", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"u_aging_category");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("u_aging_category");
                                    }
                                

                                          if (localU_aging_category==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("u_aging_category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localU_aging_category);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUpon_approvalTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"upon_approval", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"upon_approval");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("upon_approval");
                                    }
                                

                                          if (localUpon_approval==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("upon_approval cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUpon_approval);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUpon_rejectTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"upon_reject", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"upon_reject");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("upon_reject");
                                    }
                                

                                          if (localUpon_reject==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("upon_reject cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUpon_reject);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUrgencyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"urgency", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"urgency");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("urgency");
                                    }
                                

                                          if (localUrgency==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("urgency cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrgency));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUser_inputTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"user_input", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"user_input");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("user_input");
                                    }
                                

                                          if (localUser_input==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("user_input cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUser_input);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWatch_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"watch_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"watch_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("watch_list");
                                    }
                                

                                          if (localWatch_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("watch_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWatch_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_endTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_end", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_end");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_end");
                                    }
                                

                                          if (localWork_end==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_end cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_end);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_notes");
                                    }
                                

                                          if (localWork_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_notes_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_notes_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_notes_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_notes_list");
                                    }
                                

                                          if (localWork_notes_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_notes_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_notes_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_startTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_start", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_start");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_start");
                                    }
                                

                                          if (localWork_start==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_start cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_start);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (local__use_viewTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"__use_view", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"__use_view");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("__use_view");
                                    }
                                

                                          if (local__use_view==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("__use_view cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(local__use_view);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (local__encoded_queryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"__encoded_query", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"__encoded_query");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("__encoded_query");
                                    }
                                

                                          if (local__encoded_query==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("__encoded_query cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(local__encoded_query);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (local__limitTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"__limit", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"__limit");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("__limit");
                                    }
                                

                                          if (local__limit==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("__limit cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(local__limit);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (local__first_rowTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"__first_row", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"__first_row");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("__first_row");
                                    }
                                

                                          if (local__first_row==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("__first_row cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(local__first_row);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (local__last_rowTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"__last_row", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"__last_row");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("__last_row");
                                    }
                                

                                          if (local__last_row==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("__last_row cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(local__last_row);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (local__order_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"__order_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"__order_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("__order_by");
                                    }
                                

                                          if (local__order_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("__order_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(local__order_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (local__order_by_descTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"__order_by_desc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"__order_by_desc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("__order_by_desc");
                                    }
                                

                                          if (local__order_by_desc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("__order_by_desc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(local__order_by_desc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (local__exclude_columnsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"__exclude_columns", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"__exclude_columns");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("__exclude_columns");
                                    }
                                

                                          if (local__exclude_columns==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("__exclude_columns cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(local__exclude_columns);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localActiveTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "active"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActive));
                            } if (localActivity_dueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "activity_due"));
                                 
                                        if (localActivity_due != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActivity_due));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("activity_due cannot be null!!");
                                        }
                                    } if (localApprovalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval"));
                                 
                                        if (localApproval != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval cannot be null!!");
                                        }
                                    } if (localApproval_historyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval_history"));
                                 
                                        if (localApproval_history != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval_history));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval_history cannot be null!!");
                                        }
                                    } if (localApproval_setTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval_set"));
                                 
                                        if (localApproval_set != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval_set));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval_set cannot be null!!");
                                        }
                                    } if (localAssigned_toTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "assigned_to"));
                                 
                                        if (localAssigned_to != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssigned_to));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assigned_to cannot be null!!");
                                        }
                                    } if (localAssignment_groupTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "assignment_group"));
                                 
                                        if (localAssignment_group != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssignment_group));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assignment_group cannot be null!!");
                                        }
                                    } if (localBusiness_durationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "business_duration"));
                                 
                                        if (localBusiness_duration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_duration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("business_duration cannot be null!!");
                                        }
                                    } if (localBusiness_stcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "business_stc"));
                                 
                                        if (localBusiness_stc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_stc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("business_stc cannot be null!!");
                                        }
                                    } if (localCalendar_durationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "calendar_duration"));
                                 
                                        if (localCalendar_duration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_duration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("calendar_duration cannot be null!!");
                                        }
                                    } if (localCalendar_stcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "calendar_stc"));
                                 
                                        if (localCalendar_stc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_stc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("calendar_stc cannot be null!!");
                                        }
                                    } if (localCaller_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "caller_id"));
                                 
                                        if (localCaller_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCaller_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("caller_id cannot be null!!");
                                        }
                                    } if (localCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "category"));
                                 
                                        if (localCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                        }
                                    } if (localCaused_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "caused_by"));
                                 
                                        if (localCaused_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCaused_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("caused_by cannot be null!!");
                                        }
                                    } if (localChild_incidentsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "child_incidents"));
                                 
                                        if (localChild_incidents != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChild_incidents));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("child_incidents cannot be null!!");
                                        }
                                    } if (localClose_codeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "close_code"));
                                 
                                        if (localClose_code != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClose_code));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("close_code cannot be null!!");
                                        }
                                    } if (localClose_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "close_notes"));
                                 
                                        if (localClose_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClose_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("close_notes cannot be null!!");
                                        }
                                    } if (localClosed_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "closed_at"));
                                 
                                        if (localClosed_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosed_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closed_at cannot be null!!");
                                        }
                                    } if (localClosed_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "closed_by"));
                                 
                                        if (localClosed_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosed_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closed_by cannot be null!!");
                                        }
                                    } if (localCmdb_ciTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "cmdb_ci"));
                                 
                                        if (localCmdb_ci != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCmdb_ci));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cmdb_ci cannot be null!!");
                                        }
                                    } if (localCommentsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "comments"));
                                 
                                        if (localComments != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComments));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("comments cannot be null!!");
                                        }
                                    } if (localComments_and_work_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "comments_and_work_notes"));
                                 
                                        if (localComments_and_work_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComments_and_work_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("comments_and_work_notes cannot be null!!");
                                        }
                                    } if (localCompanyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "company"));
                                 
                                        if (localCompany != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompany));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("company cannot be null!!");
                                        }
                                    } if (localContact_typeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "contact_type"));
                                 
                                        if (localContact_type != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localContact_type));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("contact_type cannot be null!!");
                                        }
                                    } if (localCorrelation_displayTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "correlation_display"));
                                 
                                        if (localCorrelation_display != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelation_display));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlation_display cannot be null!!");
                                        }
                                    } if (localCorrelation_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "correlation_id"));
                                 
                                        if (localCorrelation_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelation_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlation_id cannot be null!!");
                                        }
                                    } if (localDelivery_planTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "delivery_plan"));
                                 
                                        if (localDelivery_plan != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelivery_plan));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delivery_plan cannot be null!!");
                                        }
                                    } if (localDelivery_taskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "delivery_task"));
                                 
                                        if (localDelivery_task != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelivery_task));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delivery_task cannot be null!!");
                                        }
                                    } if (localDescriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "description"));
                                 
                                        if (localDescription != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescription));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                        }
                                    } if (localDue_dateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "due_date"));
                                 
                                        if (localDue_date != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDue_date));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                        }
                                    } if (localEscalationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "escalation"));
                                 
                                        if (localEscalation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEscalation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("escalation cannot be null!!");
                                        }
                                    } if (localExpected_startTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "expected_start"));
                                 
                                        if (localExpected_start != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExpected_start));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("expected_start cannot be null!!");
                                        }
                                    } if (localFollow_upTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "follow_up"));
                                 
                                        if (localFollow_up != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFollow_up));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("follow_up cannot be null!!");
                                        }
                                    } if (localGroup_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "group_list"));
                                 
                                        if (localGroup_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGroup_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("group_list cannot be null!!");
                                        }
                                    } if (localImpactTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "impact"));
                                 
                                        if (localImpact != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpact));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("impact cannot be null!!");
                                        }
                                    } if (localIncident_stateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "incident_state"));
                                 
                                        if (localIncident_state != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIncident_state));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("incident_state cannot be null!!");
                                        }
                                    } if (localKnowledgeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "knowledge"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKnowledge));
                            } if (localLocationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "location"));
                                 
                                        if (localLocation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLocation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("location cannot be null!!");
                                        }
                                    } if (localMade_slaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "made_sla"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMade_sla));
                            } if (localNotifyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "notify"));
                                 
                                        if (localNotify != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNotify));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("notify cannot be null!!");
                                        }
                                    } if (localNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "number"));
                                 
                                        if (localNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                        }
                                    } if (localOpened_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "opened_at"));
                                 
                                        if (localOpened_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpened_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("opened_at cannot be null!!");
                                        }
                                    } if (localOpened_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "opened_by"));
                                 
                                        if (localOpened_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpened_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("opened_by cannot be null!!");
                                        }
                                    } if (localOrderTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "order"));
                                 
                                        if (localOrder != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrder));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("order cannot be null!!");
                                        }
                                    } if (localParentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "parent"));
                                 
                                        if (localParent != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParent));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("parent cannot be null!!");
                                        }
                                    } if (localParent_incidentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "parent_incident"));
                                 
                                        if (localParent_incident != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParent_incident));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("parent_incident cannot be null!!");
                                        }
                                    } if (localPriorityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "priority"));
                                 
                                        if (localPriority != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPriority));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("priority cannot be null!!");
                                        }
                                    } if (localProblem_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "problem_id"));
                                 
                                        if (localProblem_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProblem_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("problem_id cannot be null!!");
                                        }
                                    } if (localReassignment_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "reassignment_count"));
                                 
                                        if (localReassignment_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReassignment_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reassignment_count cannot be null!!");
                                        }
                                    } if (localReopen_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "reopen_count"));
                                 
                                        if (localReopen_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReopen_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reopen_count cannot be null!!");
                                        }
                                    } if (localResolved_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "resolved_at"));
                                 
                                        if (localResolved_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResolved_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resolved_at cannot be null!!");
                                        }
                                    } if (localResolved_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "resolved_by"));
                                 
                                        if (localResolved_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResolved_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resolved_by cannot be null!!");
                                        }
                                    } if (localRfcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "rfc"));
                                 
                                        if (localRfc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRfc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("rfc cannot be null!!");
                                        }
                                    } if (localSeverityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "severity"));
                                 
                                        if (localSeverity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeverity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("severity cannot be null!!");
                                        }
                                    } if (localShort_descriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "short_description"));
                                 
                                        if (localShort_description != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShort_description));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("short_description cannot be null!!");
                                        }
                                    } if (localSkillsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "skills"));
                                 
                                        if (localSkills != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSkills));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("skills cannot be null!!");
                                        }
                                    } if (localSla_dueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sla_due"));
                                 
                                        if (localSla_due != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSla_due));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sla_due cannot be null!!");
                                        }
                                    } if (localStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "state"));
                                 
                                        if (localState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                        }
                                    } if (localSubcategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "subcategory"));
                                 
                                        if (localSubcategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSubcategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("subcategory cannot be null!!");
                                        }
                                    } if (localSys_class_nameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_class_name"));
                                 
                                        if (localSys_class_name != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_class_name));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_class_name cannot be null!!");
                                        }
                                    } if (localSys_created_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_created_by"));
                                 
                                        if (localSys_created_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_created_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_created_by cannot be null!!");
                                        }
                                    } if (localSys_created_onTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_created_on"));
                                 
                                        if (localSys_created_on != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_created_on));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_created_on cannot be null!!");
                                        }
                                    } if (localSys_domainTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_domain"));
                                 
                                        if (localSys_domain != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_domain));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_domain cannot be null!!");
                                        }
                                    } if (localSys_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_id"));
                                 
                                        if (localSys_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                        }
                                    } if (localSys_mod_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_mod_count"));
                                 
                                        if (localSys_mod_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_mod_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_mod_count cannot be null!!");
                                        }
                                    } if (localSys_tagsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_tags"));
                                 
                                        if (localSys_tags != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_tags));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_tags cannot be null!!");
                                        }
                                    } if (localSys_updated_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_updated_by"));
                                 
                                        if (localSys_updated_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_updated_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_updated_by cannot be null!!");
                                        }
                                    } if (localSys_updated_onTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_updated_on"));
                                 
                                        if (localSys_updated_on != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_updated_on));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_updated_on cannot be null!!");
                                        }
                                    } if (localTime_workedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "time_worked"));
                                 
                                        if (localTime_worked != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTime_worked));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("time_worked cannot be null!!");
                                        }
                                    } if (localU_actual_elapsed_timeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "u_actual_elapsed_time"));
                                 
                                        if (localU_actual_elapsed_time != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_actual_elapsed_time));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("u_actual_elapsed_time cannot be null!!");
                                        }
                                    } if (localU_aging_categoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "u_aging_category"));
                                 
                                        if (localU_aging_category != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_aging_category));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("u_aging_category cannot be null!!");
                                        }
                                    } if (localUpon_approvalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "upon_approval"));
                                 
                                        if (localUpon_approval != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUpon_approval));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("upon_approval cannot be null!!");
                                        }
                                    } if (localUpon_rejectTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "upon_reject"));
                                 
                                        if (localUpon_reject != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUpon_reject));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("upon_reject cannot be null!!");
                                        }
                                    } if (localUrgencyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "urgency"));
                                 
                                        if (localUrgency != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrgency));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("urgency cannot be null!!");
                                        }
                                    } if (localUser_inputTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "user_input"));
                                 
                                        if (localUser_input != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUser_input));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("user_input cannot be null!!");
                                        }
                                    } if (localWatch_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "watch_list"));
                                 
                                        if (localWatch_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWatch_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("watch_list cannot be null!!");
                                        }
                                    } if (localWork_endTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_end"));
                                 
                                        if (localWork_end != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_end));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_end cannot be null!!");
                                        }
                                    } if (localWork_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_notes"));
                                 
                                        if (localWork_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_notes cannot be null!!");
                                        }
                                    } if (localWork_notes_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_notes_list"));
                                 
                                        if (localWork_notes_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_notes_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_notes_list cannot be null!!");
                                        }
                                    } if (localWork_startTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_start"));
                                 
                                        if (localWork_start != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_start));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_start cannot be null!!");
                                        }
                                    } if (local__use_viewTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "__use_view"));
                                 
                                        if (local__use_view != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(local__use_view));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("__use_view cannot be null!!");
                                        }
                                    } if (local__encoded_queryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "__encoded_query"));
                                 
                                        if (local__encoded_query != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(local__encoded_query));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("__encoded_query cannot be null!!");
                                        }
                                    } if (local__limitTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "__limit"));
                                 
                                        if (local__limit != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(local__limit));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("__limit cannot be null!!");
                                        }
                                    } if (local__first_rowTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "__first_row"));
                                 
                                        if (local__first_row != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(local__first_row));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("__first_row cannot be null!!");
                                        }
                                    } if (local__last_rowTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "__last_row"));
                                 
                                        if (local__last_row != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(local__last_row));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("__last_row cannot be null!!");
                                        }
                                    } if (local__order_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "__order_by"));
                                 
                                        if (local__order_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(local__order_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("__order_by cannot be null!!");
                                        }
                                    } if (local__order_by_descTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "__order_by_desc"));
                                 
                                        if (local__order_by_desc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(local__order_by_desc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("__order_by_desc cannot be null!!");
                                        }
                                    } if (local__exclude_columnsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "__exclude_columns"));
                                 
                                        if (local__exclude_columns != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(local__exclude_columns));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("__exclude_columns cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static GetRecords parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            GetRecords object =
                new GetRecords();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"getRecords".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (GetRecords)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","active").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActive(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","activity_due").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActivity_due(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval_history").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval_history(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval_set").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval_set(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","assigned_to").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssigned_to(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","assignment_group").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssignment_group(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","business_duration").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusiness_duration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","business_stc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusiness_stc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","calendar_duration").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalendar_duration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","calendar_stc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalendar_stc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","caller_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCaller_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","category").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","caused_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCaused_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","child_incidents").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setChild_incidents(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","close_code").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClose_code(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","close_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClose_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","closed_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosed_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","closed_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosed_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","cmdb_ci").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCmdb_ci(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","comments").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setComments(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","comments_and_work_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setComments_and_work_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","company").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompany(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","contact_type").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setContact_type(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","correlation_display").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelation_display(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","correlation_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelation_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","delivery_plan").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelivery_plan(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","delivery_task").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelivery_task(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","description").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDescription(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","due_date").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDue_date(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","escalation").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEscalation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","expected_start").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExpected_start(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","follow_up").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFollow_up(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","group_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGroup_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","impact").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImpact(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","incident_state").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIncident_state(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","knowledge").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setKnowledge(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","location").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLocation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","made_sla").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMade_sla(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","notify").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNotify(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","number").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","opened_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpened_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","opened_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpened_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","order").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOrder(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","parent").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setParent(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","parent_incident").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setParent_incident(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","priority").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPriority(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","problem_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProblem_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","reassignment_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReassignment_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","reopen_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReopen_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","resolved_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResolved_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","resolved_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResolved_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","rfc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRfc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","severity").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSeverity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","short_description").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShort_description(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","skills").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSkills(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sla_due").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSla_due(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","state").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","subcategory").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSubcategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_class_name").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_class_name(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_created_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_created_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_created_on").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_created_on(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_domain").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_domain(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_mod_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_mod_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_tags").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_tags(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_updated_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_updated_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_updated_on").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_updated_on(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","time_worked").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTime_worked(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","u_actual_elapsed_time").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setU_actual_elapsed_time(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","u_aging_category").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setU_aging_category(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","upon_approval").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUpon_approval(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","upon_reject").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUpon_reject(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","urgency").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUrgency(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","user_input").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUser_input(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","watch_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWatch_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_end").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_end(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_notes_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_notes_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_start").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_start(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","__use_view").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.set__use_view(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","__encoded_query").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.set__encoded_query(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","__limit").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.set__limit(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","__first_row").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.set__first_row(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","__last_row").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.set__last_row(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","__order_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.set__order_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","__order_by_desc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.set__order_by_desc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","__exclude_columns").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.set__exclude_columns(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class ExtensionMapper{

          public static java.lang.Object getTypeObject(java.lang.String namespaceURI,
                                                       java.lang.String typeName,
                                                       javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{

              
                  if (
                  "http://www.service-now.com/incident".equals(namespaceURI) &&
                  "getRecordsResult_type0".equals(typeName)){
                   
                            return  GetRecordsResult_type0.Factory.parse(reader);
                        

                  }

              
             throw new org.apache.axis2.databinding.ADBException("Unsupported type " + namespaceURI + " " + typeName);
          }

        }
    
        public static class UpdateResponse
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.service-now.com/incident",
                "updateResponse",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for Sys_id
                        */

                        
                                    protected java.lang.String localSys_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_id(){
                               return localSys_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_id
                               */
                               public void setSys_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_idTracker = true;
                                       } else {
                                          localSys_idTracker = false;
                                              
                                       }
                                   
                                            this.localSys_id=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       UpdateResponse.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":updateResponse",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "updateResponse",
                           xmlWriter);
                   }

               
                   }
                if (localSys_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_id");
                                    }
                                

                                          if (localSys_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localSys_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_id"));
                                 
                                        if (localSys_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static UpdateResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            UpdateResponse object =
                new UpdateResponse();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"updateResponse".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (UpdateResponse)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class GetRecordsResult_type0
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = getRecordsResult_type0
                Namespace URI = http://www.service-now.com/incident
                Namespace Prefix = ns1
                */
            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for Active
                        */

                        
                                    protected boolean localActive ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActiveTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getActive(){
                               return localActive;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Active
                               */
                               public void setActive(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localActiveTracker = false;
                                              
                                       } else {
                                          localActiveTracker = true;
                                       }
                                   
                                            this.localActive=param;
                                    

                               }
                            

                        /**
                        * field for Activity_due
                        */

                        
                                    protected java.lang.String localActivity_due ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localActivity_dueTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getActivity_due(){
                               return localActivity_due;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Activity_due
                               */
                               public void setActivity_due(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localActivity_dueTracker = true;
                                       } else {
                                          localActivity_dueTracker = false;
                                              
                                       }
                                   
                                            this.localActivity_due=param;
                                    

                               }
                            

                        /**
                        * field for Approval
                        */

                        
                                    protected java.lang.String localApproval ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApprovalTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval(){
                               return localApproval;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval
                               */
                               public void setApproval(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApprovalTracker = true;
                                       } else {
                                          localApprovalTracker = false;
                                              
                                       }
                                   
                                            this.localApproval=param;
                                    

                               }
                            

                        /**
                        * field for Approval_set
                        */

                        
                                    protected java.lang.String localApproval_set ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localApproval_setTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getApproval_set(){
                               return localApproval_set;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Approval_set
                               */
                               public void setApproval_set(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localApproval_setTracker = true;
                                       } else {
                                          localApproval_setTracker = false;
                                              
                                       }
                                   
                                            this.localApproval_set=param;
                                    

                               }
                            

                        /**
                        * field for Assigned_to
                        */

                        
                                    protected java.lang.String localAssigned_to ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAssigned_toTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssigned_to(){
                               return localAssigned_to;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Assigned_to
                               */
                               public void setAssigned_to(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAssigned_toTracker = true;
                                       } else {
                                          localAssigned_toTracker = false;
                                              
                                       }
                                   
                                            this.localAssigned_to=param;
                                    

                               }
                            

                        /**
                        * field for Assignment_group
                        */

                        
                                    protected java.lang.String localAssignment_group ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAssignment_groupTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAssignment_group(){
                               return localAssignment_group;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Assignment_group
                               */
                               public void setAssignment_group(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAssignment_groupTracker = true;
                                       } else {
                                          localAssignment_groupTracker = false;
                                              
                                       }
                                   
                                            this.localAssignment_group=param;
                                    

                               }
                            

                        /**
                        * field for Business_duration
                        */

                        
                                    protected java.lang.String localBusiness_duration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusiness_durationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBusiness_duration(){
                               return localBusiness_duration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Business_duration
                               */
                               public void setBusiness_duration(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBusiness_durationTracker = true;
                                       } else {
                                          localBusiness_durationTracker = false;
                                              
                                       }
                                   
                                            this.localBusiness_duration=param;
                                    

                               }
                            

                        /**
                        * field for Business_stc
                        */

                        
                                    protected java.math.BigInteger localBusiness_stc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBusiness_stcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getBusiness_stc(){
                               return localBusiness_stc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Business_stc
                               */
                               public void setBusiness_stc(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBusiness_stcTracker = true;
                                       } else {
                                          localBusiness_stcTracker = false;
                                              
                                       }
                                   
                                            this.localBusiness_stc=param;
                                    

                               }
                            

                        /**
                        * field for Calendar_duration
                        */

                        
                                    protected java.lang.String localCalendar_duration ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalendar_durationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCalendar_duration(){
                               return localCalendar_duration;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calendar_duration
                               */
                               public void setCalendar_duration(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCalendar_durationTracker = true;
                                       } else {
                                          localCalendar_durationTracker = false;
                                              
                                       }
                                   
                                            this.localCalendar_duration=param;
                                    

                               }
                            

                        /**
                        * field for Calendar_stc
                        */

                        
                                    protected java.math.BigInteger localCalendar_stc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCalendar_stcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getCalendar_stc(){
                               return localCalendar_stc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Calendar_stc
                               */
                               public void setCalendar_stc(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCalendar_stcTracker = true;
                                       } else {
                                          localCalendar_stcTracker = false;
                                              
                                       }
                                   
                                            this.localCalendar_stc=param;
                                    

                               }
                            

                        /**
                        * field for Caller_id
                        */

                        
                                    protected java.lang.String localCaller_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCaller_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCaller_id(){
                               return localCaller_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Caller_id
                               */
                               public void setCaller_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCaller_idTracker = true;
                                       } else {
                                          localCaller_idTracker = false;
                                              
                                       }
                                   
                                            this.localCaller_id=param;
                                    

                               }
                            

                        /**
                        * field for Category
                        */

                        
                                    protected java.lang.String localCategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCategoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCategory(){
                               return localCategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Category
                               */
                               public void setCategory(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCategoryTracker = true;
                                       } else {
                                          localCategoryTracker = false;
                                              
                                       }
                                   
                                            this.localCategory=param;
                                    

                               }
                            

                        /**
                        * field for Caused_by
                        */

                        
                                    protected java.lang.String localCaused_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCaused_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCaused_by(){
                               return localCaused_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Caused_by
                               */
                               public void setCaused_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCaused_byTracker = true;
                                       } else {
                                          localCaused_byTracker = false;
                                              
                                       }
                                   
                                            this.localCaused_by=param;
                                    

                               }
                            

                        /**
                        * field for Child_incidents
                        */

                        
                                    protected java.math.BigInteger localChild_incidents ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChild_incidentsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getChild_incidents(){
                               return localChild_incidents;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Child_incidents
                               */
                               public void setChild_incidents(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localChild_incidentsTracker = true;
                                       } else {
                                          localChild_incidentsTracker = false;
                                              
                                       }
                                   
                                            this.localChild_incidents=param;
                                    

                               }
                            

                        /**
                        * field for Close_code
                        */

                        
                                    protected java.lang.String localClose_code ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClose_codeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClose_code(){
                               return localClose_code;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Close_code
                               */
                               public void setClose_code(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClose_codeTracker = true;
                                       } else {
                                          localClose_codeTracker = false;
                                              
                                       }
                                   
                                            this.localClose_code=param;
                                    

                               }
                            

                        /**
                        * field for Close_notes
                        */

                        
                                    protected java.lang.String localClose_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClose_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClose_notes(){
                               return localClose_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Close_notes
                               */
                               public void setClose_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClose_notesTracker = true;
                                       } else {
                                          localClose_notesTracker = false;
                                              
                                       }
                                   
                                            this.localClose_notes=param;
                                    

                               }
                            

                        /**
                        * field for Closed_at
                        */

                        
                                    protected java.lang.String localClosed_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosed_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosed_at(){
                               return localClosed_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Closed_at
                               */
                               public void setClosed_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClosed_atTracker = true;
                                       } else {
                                          localClosed_atTracker = false;
                                              
                                       }
                                   
                                            this.localClosed_at=param;
                                    

                               }
                            

                        /**
                        * field for Closed_by
                        */

                        
                                    protected java.lang.String localClosed_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localClosed_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getClosed_by(){
                               return localClosed_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Closed_by
                               */
                               public void setClosed_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localClosed_byTracker = true;
                                       } else {
                                          localClosed_byTracker = false;
                                              
                                       }
                                   
                                            this.localClosed_by=param;
                                    

                               }
                            

                        /**
                        * field for Cmdb_ci
                        */

                        
                                    protected java.lang.String localCmdb_ci ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCmdb_ciTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCmdb_ci(){
                               return localCmdb_ci;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Cmdb_ci
                               */
                               public void setCmdb_ci(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCmdb_ciTracker = true;
                                       } else {
                                          localCmdb_ciTracker = false;
                                              
                                       }
                                   
                                            this.localCmdb_ci=param;
                                    

                               }
                            

                        /**
                        * field for Comments_and_work_notes
                        */

                        
                                    protected java.lang.String localComments_and_work_notes ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localComments_and_work_notesTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getComments_and_work_notes(){
                               return localComments_and_work_notes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Comments_and_work_notes
                               */
                               public void setComments_and_work_notes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localComments_and_work_notesTracker = true;
                                       } else {
                                          localComments_and_work_notesTracker = false;
                                              
                                       }
                                   
                                            this.localComments_and_work_notes=param;
                                    

                               }
                            

                        /**
                        * field for Company
                        */

                        
                                    protected java.lang.String localCompany ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCompanyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCompany(){
                               return localCompany;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Company
                               */
                               public void setCompany(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCompanyTracker = true;
                                       } else {
                                          localCompanyTracker = false;
                                              
                                       }
                                   
                                            this.localCompany=param;
                                    

                               }
                            

                        /**
                        * field for Contact_type
                        */

                        
                                    protected java.lang.String localContact_type ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localContact_typeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getContact_type(){
                               return localContact_type;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Contact_type
                               */
                               public void setContact_type(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localContact_typeTracker = true;
                                       } else {
                                          localContact_typeTracker = false;
                                              
                                       }
                                   
                                            this.localContact_type=param;
                                    

                               }
                            

                        /**
                        * field for Correlation_display
                        */

                        
                                    protected java.lang.String localCorrelation_display ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelation_displayTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelation_display(){
                               return localCorrelation_display;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Correlation_display
                               */
                               public void setCorrelation_display(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCorrelation_displayTracker = true;
                                       } else {
                                          localCorrelation_displayTracker = false;
                                              
                                       }
                                   
                                            this.localCorrelation_display=param;
                                    

                               }
                            

                        /**
                        * field for Correlation_id
                        */

                        
                                    protected java.lang.String localCorrelation_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCorrelation_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCorrelation_id(){
                               return localCorrelation_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Correlation_id
                               */
                               public void setCorrelation_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCorrelation_idTracker = true;
                                       } else {
                                          localCorrelation_idTracker = false;
                                              
                                       }
                                   
                                            this.localCorrelation_id=param;
                                    

                               }
                            

                        /**
                        * field for Delivery_plan
                        */

                        
                                    protected java.lang.String localDelivery_plan ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelivery_planTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelivery_plan(){
                               return localDelivery_plan;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Delivery_plan
                               */
                               public void setDelivery_plan(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDelivery_planTracker = true;
                                       } else {
                                          localDelivery_planTracker = false;
                                              
                                       }
                                   
                                            this.localDelivery_plan=param;
                                    

                               }
                            

                        /**
                        * field for Delivery_task
                        */

                        
                                    protected java.lang.String localDelivery_task ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDelivery_taskTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDelivery_task(){
                               return localDelivery_task;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Delivery_task
                               */
                               public void setDelivery_task(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDelivery_taskTracker = true;
                                       } else {
                                          localDelivery_taskTracker = false;
                                              
                                       }
                                   
                                            this.localDelivery_task=param;
                                    

                               }
                            

                        /**
                        * field for Description
                        */

                        
                                    protected java.lang.String localDescription ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDescriptionTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDescription(){
                               return localDescription;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Description
                               */
                               public void setDescription(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDescriptionTracker = true;
                                       } else {
                                          localDescriptionTracker = false;
                                              
                                       }
                                   
                                            this.localDescription=param;
                                    

                               }
                            

                        /**
                        * field for Due_date
                        */

                        
                                    protected java.lang.String localDue_date ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDue_dateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDue_date(){
                               return localDue_date;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Due_date
                               */
                               public void setDue_date(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDue_dateTracker = true;
                                       } else {
                                          localDue_dateTracker = false;
                                              
                                       }
                                   
                                            this.localDue_date=param;
                                    

                               }
                            

                        /**
                        * field for Escalation
                        */

                        
                                    protected java.math.BigInteger localEscalation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEscalationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getEscalation(){
                               return localEscalation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Escalation
                               */
                               public void setEscalation(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localEscalationTracker = true;
                                       } else {
                                          localEscalationTracker = false;
                                              
                                       }
                                   
                                            this.localEscalation=param;
                                    

                               }
                            

                        /**
                        * field for Expected_start
                        */

                        
                                    protected java.lang.String localExpected_start ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localExpected_startTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getExpected_start(){
                               return localExpected_start;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Expected_start
                               */
                               public void setExpected_start(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localExpected_startTracker = true;
                                       } else {
                                          localExpected_startTracker = false;
                                              
                                       }
                                   
                                            this.localExpected_start=param;
                                    

                               }
                            

                        /**
                        * field for Follow_up
                        */

                        
                                    protected java.lang.String localFollow_up ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFollow_upTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFollow_up(){
                               return localFollow_up;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Follow_up
                               */
                               public void setFollow_up(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFollow_upTracker = true;
                                       } else {
                                          localFollow_upTracker = false;
                                              
                                       }
                                   
                                            this.localFollow_up=param;
                                    

                               }
                            

                        /**
                        * field for Group_list
                        */

                        
                                    protected java.lang.String localGroup_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGroup_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGroup_list(){
                               return localGroup_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Group_list
                               */
                               public void setGroup_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localGroup_listTracker = true;
                                       } else {
                                          localGroup_listTracker = false;
                                              
                                       }
                                   
                                            this.localGroup_list=param;
                                    

                               }
                            

                        /**
                        * field for Impact
                        */

                        
                                    protected java.math.BigInteger localImpact ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localImpactTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getImpact(){
                               return localImpact;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Impact
                               */
                               public void setImpact(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localImpactTracker = true;
                                       } else {
                                          localImpactTracker = false;
                                              
                                       }
                                   
                                            this.localImpact=param;
                                    

                               }
                            

                        /**
                        * field for Incident_state
                        */

                        
                                    protected java.math.BigInteger localIncident_state ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIncident_stateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getIncident_state(){
                               return localIncident_state;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Incident_state
                               */
                               public void setIncident_state(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localIncident_stateTracker = true;
                                       } else {
                                          localIncident_stateTracker = false;
                                              
                                       }
                                   
                                            this.localIncident_state=param;
                                    

                               }
                            

                        /**
                        * field for Knowledge
                        */

                        
                                    protected boolean localKnowledge ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localKnowledgeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getKnowledge(){
                               return localKnowledge;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Knowledge
                               */
                               public void setKnowledge(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localKnowledgeTracker = false;
                                              
                                       } else {
                                          localKnowledgeTracker = true;
                                       }
                                   
                                            this.localKnowledge=param;
                                    

                               }
                            

                        /**
                        * field for Location
                        */

                        
                                    protected java.lang.String localLocation ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLocationTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLocation(){
                               return localLocation;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Location
                               */
                               public void setLocation(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localLocationTracker = true;
                                       } else {
                                          localLocationTracker = false;
                                              
                                       }
                                   
                                            this.localLocation=param;
                                    

                               }
                            

                        /**
                        * field for Made_sla
                        */

                        
                                    protected boolean localMade_sla ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMade_slaTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return boolean
                           */
                           public  boolean getMade_sla(){
                               return localMade_sla;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Made_sla
                               */
                               public void setMade_sla(boolean param){
                            
                                       // setting primitive attribute tracker to true
                                       
                                               if (false) {
                                           localMade_slaTracker = false;
                                              
                                       } else {
                                          localMade_slaTracker = true;
                                       }
                                   
                                            this.localMade_sla=param;
                                    

                               }
                            

                        /**
                        * field for Notify
                        */

                        
                                    protected java.math.BigInteger localNotify ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNotifyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getNotify(){
                               return localNotify;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Notify
                               */
                               public void setNotify(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNotifyTracker = true;
                                       } else {
                                          localNotifyTracker = false;
                                              
                                       }
                                   
                                            this.localNotify=param;
                                    

                               }
                            

                        /**
                        * field for Number
                        */

                        
                                    protected java.lang.String localNumber ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNumberTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNumber(){
                               return localNumber;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Number
                               */
                               public void setNumber(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNumberTracker = true;
                                       } else {
                                          localNumberTracker = false;
                                              
                                       }
                                   
                                            this.localNumber=param;
                                    

                               }
                            

                        /**
                        * field for Opened_at
                        */

                        
                                    protected java.lang.String localOpened_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpened_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpened_at(){
                               return localOpened_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Opened_at
                               */
                               public void setOpened_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOpened_atTracker = true;
                                       } else {
                                          localOpened_atTracker = false;
                                              
                                       }
                                   
                                            this.localOpened_at=param;
                                    

                               }
                            

                        /**
                        * field for Opened_by
                        */

                        
                                    protected java.lang.String localOpened_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOpened_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOpened_by(){
                               return localOpened_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Opened_by
                               */
                               public void setOpened_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOpened_byTracker = true;
                                       } else {
                                          localOpened_byTracker = false;
                                              
                                       }
                                   
                                            this.localOpened_by=param;
                                    

                               }
                            

                        /**
                        * field for Order
                        */

                        
                                    protected java.math.BigInteger localOrder ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOrderTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getOrder(){
                               return localOrder;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Order
                               */
                               public void setOrder(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOrderTracker = true;
                                       } else {
                                          localOrderTracker = false;
                                              
                                       }
                                   
                                            this.localOrder=param;
                                    

                               }
                            

                        /**
                        * field for Parent
                        */

                        
                                    protected java.lang.String localParent ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localParentTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getParent(){
                               return localParent;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Parent
                               */
                               public void setParent(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localParentTracker = true;
                                       } else {
                                          localParentTracker = false;
                                              
                                       }
                                   
                                            this.localParent=param;
                                    

                               }
                            

                        /**
                        * field for Parent_incident
                        */

                        
                                    protected java.lang.String localParent_incident ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localParent_incidentTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getParent_incident(){
                               return localParent_incident;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Parent_incident
                               */
                               public void setParent_incident(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localParent_incidentTracker = true;
                                       } else {
                                          localParent_incidentTracker = false;
                                              
                                       }
                                   
                                            this.localParent_incident=param;
                                    

                               }
                            

                        /**
                        * field for Priority
                        */

                        
                                    protected java.math.BigInteger localPriority ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPriorityTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getPriority(){
                               return localPriority;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Priority
                               */
                               public void setPriority(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localPriorityTracker = true;
                                       } else {
                                          localPriorityTracker = false;
                                              
                                       }
                                   
                                            this.localPriority=param;
                                    

                               }
                            

                        /**
                        * field for Problem_id
                        */

                        
                                    protected java.lang.String localProblem_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localProblem_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getProblem_id(){
                               return localProblem_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Problem_id
                               */
                               public void setProblem_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localProblem_idTracker = true;
                                       } else {
                                          localProblem_idTracker = false;
                                              
                                       }
                                   
                                            this.localProblem_id=param;
                                    

                               }
                            

                        /**
                        * field for Reassignment_count
                        */

                        
                                    protected java.math.BigInteger localReassignment_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReassignment_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getReassignment_count(){
                               return localReassignment_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reassignment_count
                               */
                               public void setReassignment_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReassignment_countTracker = true;
                                       } else {
                                          localReassignment_countTracker = false;
                                              
                                       }
                                   
                                            this.localReassignment_count=param;
                                    

                               }
                            

                        /**
                        * field for Reopen_count
                        */

                        
                                    protected java.math.BigInteger localReopen_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReopen_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getReopen_count(){
                               return localReopen_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Reopen_count
                               */
                               public void setReopen_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReopen_countTracker = true;
                                       } else {
                                          localReopen_countTracker = false;
                                              
                                       }
                                   
                                            this.localReopen_count=param;
                                    

                               }
                            

                        /**
                        * field for Resolved_at
                        */

                        
                                    protected java.lang.String localResolved_at ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResolved_atTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResolved_at(){
                               return localResolved_at;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Resolved_at
                               */
                               public void setResolved_at(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localResolved_atTracker = true;
                                       } else {
                                          localResolved_atTracker = false;
                                              
                                       }
                                   
                                            this.localResolved_at=param;
                                    

                               }
                            

                        /**
                        * field for Resolved_by
                        */

                        
                                    protected java.lang.String localResolved_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localResolved_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getResolved_by(){
                               return localResolved_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Resolved_by
                               */
                               public void setResolved_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localResolved_byTracker = true;
                                       } else {
                                          localResolved_byTracker = false;
                                              
                                       }
                                   
                                            this.localResolved_by=param;
                                    

                               }
                            

                        /**
                        * field for Rfc
                        */

                        
                                    protected java.lang.String localRfc ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRfcTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRfc(){
                               return localRfc;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Rfc
                               */
                               public void setRfc(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localRfcTracker = true;
                                       } else {
                                          localRfcTracker = false;
                                              
                                       }
                                   
                                            this.localRfc=param;
                                    

                               }
                            

                        /**
                        * field for Severity
                        */

                        
                                    protected java.math.BigInteger localSeverity ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSeverityTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getSeverity(){
                               return localSeverity;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Severity
                               */
                               public void setSeverity(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSeverityTracker = true;
                                       } else {
                                          localSeverityTracker = false;
                                              
                                       }
                                   
                                            this.localSeverity=param;
                                    

                               }
                            

                        /**
                        * field for Short_description
                        */

                        
                                    protected java.lang.String localShort_description ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localShort_descriptionTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getShort_description(){
                               return localShort_description;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Short_description
                               */
                               public void setShort_description(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localShort_descriptionTracker = true;
                                       } else {
                                          localShort_descriptionTracker = false;
                                              
                                       }
                                   
                                            this.localShort_description=param;
                                    

                               }
                            

                        /**
                        * field for Skills
                        */

                        
                                    protected java.lang.String localSkills ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSkillsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSkills(){
                               return localSkills;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Skills
                               */
                               public void setSkills(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSkillsTracker = true;
                                       } else {
                                          localSkillsTracker = false;
                                              
                                       }
                                   
                                            this.localSkills=param;
                                    

                               }
                            

                        /**
                        * field for Sla_due
                        */

                        
                                    protected java.lang.String localSla_due ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSla_dueTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSla_due(){
                               return localSla_due;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sla_due
                               */
                               public void setSla_due(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSla_dueTracker = true;
                                       } else {
                                          localSla_dueTracker = false;
                                              
                                       }
                                   
                                            this.localSla_due=param;
                                    

                               }
                            

                        /**
                        * field for State
                        */

                        
                                    protected java.math.BigInteger localState ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localStateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getState(){
                               return localState;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param State
                               */
                               public void setState(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localStateTracker = true;
                                       } else {
                                          localStateTracker = false;
                                              
                                       }
                                   
                                            this.localState=param;
                                    

                               }
                            

                        /**
                        * field for Subcategory
                        */

                        
                                    protected java.lang.String localSubcategory ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSubcategoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSubcategory(){
                               return localSubcategory;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Subcategory
                               */
                               public void setSubcategory(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSubcategoryTracker = true;
                                       } else {
                                          localSubcategoryTracker = false;
                                              
                                       }
                                   
                                            this.localSubcategory=param;
                                    

                               }
                            

                        /**
                        * field for Sys_class_name
                        */

                        
                                    protected java.lang.String localSys_class_name ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_class_nameTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_class_name(){
                               return localSys_class_name;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_class_name
                               */
                               public void setSys_class_name(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_class_nameTracker = true;
                                       } else {
                                          localSys_class_nameTracker = false;
                                              
                                       }
                                   
                                            this.localSys_class_name=param;
                                    

                               }
                            

                        /**
                        * field for Sys_created_by
                        */

                        
                                    protected java.lang.String localSys_created_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_created_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_created_by(){
                               return localSys_created_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_created_by
                               */
                               public void setSys_created_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_created_byTracker = true;
                                       } else {
                                          localSys_created_byTracker = false;
                                              
                                       }
                                   
                                            this.localSys_created_by=param;
                                    

                               }
                            

                        /**
                        * field for Sys_created_on
                        */

                        
                                    protected java.lang.String localSys_created_on ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_created_onTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_created_on(){
                               return localSys_created_on;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_created_on
                               */
                               public void setSys_created_on(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_created_onTracker = true;
                                       } else {
                                          localSys_created_onTracker = false;
                                              
                                       }
                                   
                                            this.localSys_created_on=param;
                                    

                               }
                            

                        /**
                        * field for Sys_domain
                        */

                        
                                    protected java.lang.String localSys_domain ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_domainTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_domain(){
                               return localSys_domain;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_domain
                               */
                               public void setSys_domain(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_domainTracker = true;
                                       } else {
                                          localSys_domainTracker = false;
                                              
                                       }
                                   
                                            this.localSys_domain=param;
                                    

                               }
                            

                        /**
                        * field for Sys_id
                        */

                        
                                    protected java.lang.String localSys_id ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_idTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_id(){
                               return localSys_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_id
                               */
                               public void setSys_id(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_idTracker = true;
                                       } else {
                                          localSys_idTracker = false;
                                              
                                       }
                                   
                                            this.localSys_id=param;
                                    

                               }
                            

                        /**
                        * field for Sys_mod_count
                        */

                        
                                    protected java.math.BigInteger localSys_mod_count ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_mod_countTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getSys_mod_count(){
                               return localSys_mod_count;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_mod_count
                               */
                               public void setSys_mod_count(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_mod_countTracker = true;
                                       } else {
                                          localSys_mod_countTracker = false;
                                              
                                       }
                                   
                                            this.localSys_mod_count=param;
                                    

                               }
                            

                        /**
                        * field for Sys_tags
                        */

                        
                                    protected java.lang.String localSys_tags ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_tagsTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_tags(){
                               return localSys_tags;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_tags
                               */
                               public void setSys_tags(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_tagsTracker = true;
                                       } else {
                                          localSys_tagsTracker = false;
                                              
                                       }
                                   
                                            this.localSys_tags=param;
                                    

                               }
                            

                        /**
                        * field for Sys_updated_by
                        */

                        
                                    protected java.lang.String localSys_updated_by ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_updated_byTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_updated_by(){
                               return localSys_updated_by;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_updated_by
                               */
                               public void setSys_updated_by(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_updated_byTracker = true;
                                       } else {
                                          localSys_updated_byTracker = false;
                                              
                                       }
                                   
                                            this.localSys_updated_by=param;
                                    

                               }
                            

                        /**
                        * field for Sys_updated_on
                        */

                        
                                    protected java.lang.String localSys_updated_on ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSys_updated_onTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_updated_on(){
                               return localSys_updated_on;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_updated_on
                               */
                               public void setSys_updated_on(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSys_updated_onTracker = true;
                                       } else {
                                          localSys_updated_onTracker = false;
                                              
                                       }
                                   
                                            this.localSys_updated_on=param;
                                    

                               }
                            

                        /**
                        * field for Time_worked
                        */

                        
                                    protected java.lang.String localTime_worked ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTime_workedTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTime_worked(){
                               return localTime_worked;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Time_worked
                               */
                               public void setTime_worked(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTime_workedTracker = true;
                                       } else {
                                          localTime_workedTracker = false;
                                              
                                       }
                                   
                                            this.localTime_worked=param;
                                    

                               }
                            

                        /**
                        * field for U_actual_elapsed_time
                        */

                        
                                    protected java.math.BigInteger localU_actual_elapsed_time ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localU_actual_elapsed_timeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getU_actual_elapsed_time(){
                               return localU_actual_elapsed_time;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param U_actual_elapsed_time
                               */
                               public void setU_actual_elapsed_time(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localU_actual_elapsed_timeTracker = true;
                                       } else {
                                          localU_actual_elapsed_timeTracker = false;
                                              
                                       }
                                   
                                            this.localU_actual_elapsed_time=param;
                                    

                               }
                            

                        /**
                        * field for U_aging_category
                        */

                        
                                    protected java.lang.String localU_aging_category ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localU_aging_categoryTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getU_aging_category(){
                               return localU_aging_category;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param U_aging_category
                               */
                               public void setU_aging_category(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localU_aging_categoryTracker = true;
                                       } else {
                                          localU_aging_categoryTracker = false;
                                              
                                       }
                                   
                                            this.localU_aging_category=param;
                                    

                               }
                            

                        /**
                        * field for Upon_approval
                        */

                        
                                    protected java.lang.String localUpon_approval ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUpon_approvalTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUpon_approval(){
                               return localUpon_approval;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Upon_approval
                               */
                               public void setUpon_approval(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUpon_approvalTracker = true;
                                       } else {
                                          localUpon_approvalTracker = false;
                                              
                                       }
                                   
                                            this.localUpon_approval=param;
                                    

                               }
                            

                        /**
                        * field for Upon_reject
                        */

                        
                                    protected java.lang.String localUpon_reject ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUpon_rejectTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUpon_reject(){
                               return localUpon_reject;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Upon_reject
                               */
                               public void setUpon_reject(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUpon_rejectTracker = true;
                                       } else {
                                          localUpon_rejectTracker = false;
                                              
                                       }
                                   
                                            this.localUpon_reject=param;
                                    

                               }
                            

                        /**
                        * field for Urgency
                        */

                        
                                    protected java.math.BigInteger localUrgency ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUrgencyTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getUrgency(){
                               return localUrgency;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Urgency
                               */
                               public void setUrgency(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUrgencyTracker = true;
                                       } else {
                                          localUrgencyTracker = false;
                                              
                                       }
                                   
                                            this.localUrgency=param;
                                    

                               }
                            

                        /**
                        * field for User_input
                        */

                        
                                    protected java.lang.String localUser_input ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUser_inputTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUser_input(){
                               return localUser_input;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param User_input
                               */
                               public void setUser_input(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUser_inputTracker = true;
                                       } else {
                                          localUser_inputTracker = false;
                                              
                                       }
                                   
                                            this.localUser_input=param;
                                    

                               }
                            

                        /**
                        * field for Watch_list
                        */

                        
                                    protected java.lang.String localWatch_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWatch_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWatch_list(){
                               return localWatch_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Watch_list
                               */
                               public void setWatch_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWatch_listTracker = true;
                                       } else {
                                          localWatch_listTracker = false;
                                              
                                       }
                                   
                                            this.localWatch_list=param;
                                    

                               }
                            

                        /**
                        * field for Work_end
                        */

                        
                                    protected java.lang.String localWork_end ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_endTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_end(){
                               return localWork_end;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_end
                               */
                               public void setWork_end(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_endTracker = true;
                                       } else {
                                          localWork_endTracker = false;
                                              
                                       }
                                   
                                            this.localWork_end=param;
                                    

                               }
                            

                        /**
                        * field for Work_notes_list
                        */

                        
                                    protected java.lang.String localWork_notes_list ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_notes_listTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_notes_list(){
                               return localWork_notes_list;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_notes_list
                               */
                               public void setWork_notes_list(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_notes_listTracker = true;
                                       } else {
                                          localWork_notes_listTracker = false;
                                              
                                       }
                                   
                                            this.localWork_notes_list=param;
                                    

                               }
                            

                        /**
                        * field for Work_start
                        */

                        
                                    protected java.lang.String localWork_start ;
                                
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localWork_startTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getWork_start(){
                               return localWork_start;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Work_start
                               */
                               public void setWork_start(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localWork_startTracker = true;
                                       } else {
                                          localWork_startTracker = false;
                                              
                                       }
                                   
                                            this.localWork_start=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       GetRecordsResult_type0.this.serialize(parentQName,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               parentQName,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":getRecordsResult_type0",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "getRecordsResult_type0",
                           xmlWriter);
                   }

               
                   }
                if (localActiveTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"active", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"active");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("active");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("active cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActive));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localActivity_dueTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"activity_due", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"activity_due");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("activity_due");
                                    }
                                

                                          if (localActivity_due==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("activity_due cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localActivity_due);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApprovalTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval");
                                    }
                                

                                          if (localApproval==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localApproval_setTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"approval_set", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"approval_set");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("approval_set");
                                    }
                                

                                          if (localApproval_set==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("approval_set cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localApproval_set);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAssigned_toTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"assigned_to", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"assigned_to");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("assigned_to");
                                    }
                                

                                          if (localAssigned_to==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assigned_to cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssigned_to);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAssignment_groupTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"assignment_group", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"assignment_group");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("assignment_group");
                                    }
                                

                                          if (localAssignment_group==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("assignment_group cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAssignment_group);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusiness_durationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"business_duration", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"business_duration");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("business_duration");
                                    }
                                

                                          if (localBusiness_duration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("business_duration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBusiness_duration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBusiness_stcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"business_stc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"business_stc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("business_stc");
                                    }
                                

                                          if (localBusiness_stc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("business_stc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_stc));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalendar_durationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"calendar_duration", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"calendar_duration");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("calendar_duration");
                                    }
                                

                                          if (localCalendar_duration==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("calendar_duration cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCalendar_duration);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCalendar_stcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"calendar_stc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"calendar_stc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("calendar_stc");
                                    }
                                

                                          if (localCalendar_stc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("calendar_stc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_stc));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCaller_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"caller_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"caller_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("caller_id");
                                    }
                                

                                          if (localCaller_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("caller_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCaller_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCategoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"category", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"category");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("category");
                                    }
                                

                                          if (localCategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCaused_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"caused_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"caused_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("caused_by");
                                    }
                                

                                          if (localCaused_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("caused_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCaused_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localChild_incidentsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"child_incidents", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"child_incidents");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("child_incidents");
                                    }
                                

                                          if (localChild_incidents==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("child_incidents cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChild_incidents));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClose_codeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"close_code", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"close_code");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("close_code");
                                    }
                                

                                          if (localClose_code==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("close_code cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClose_code);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClose_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"close_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"close_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("close_notes");
                                    }
                                

                                          if (localClose_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("close_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClose_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosed_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"closed_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"closed_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("closed_at");
                                    }
                                

                                          if (localClosed_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closed_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosed_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localClosed_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"closed_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"closed_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("closed_by");
                                    }
                                

                                          if (localClosed_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("closed_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localClosed_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCmdb_ciTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"cmdb_ci", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"cmdb_ci");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("cmdb_ci");
                                    }
                                

                                          if (localCmdb_ci==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("cmdb_ci cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCmdb_ci);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localComments_and_work_notesTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"comments_and_work_notes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"comments_and_work_notes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("comments_and_work_notes");
                                    }
                                

                                          if (localComments_and_work_notes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("comments_and_work_notes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localComments_and_work_notes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCompanyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"company", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"company");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("company");
                                    }
                                

                                          if (localCompany==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("company cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCompany);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localContact_typeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"contact_type", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"contact_type");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("contact_type");
                                    }
                                

                                          if (localContact_type==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("contact_type cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localContact_type);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelation_displayTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"correlation_display", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"correlation_display");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("correlation_display");
                                    }
                                

                                          if (localCorrelation_display==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlation_display cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelation_display);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCorrelation_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"correlation_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"correlation_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("correlation_id");
                                    }
                                

                                          if (localCorrelation_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("correlation_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCorrelation_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelivery_planTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"delivery_plan", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"delivery_plan");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("delivery_plan");
                                    }
                                

                                          if (localDelivery_plan==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delivery_plan cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelivery_plan);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDelivery_taskTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"delivery_task", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"delivery_task");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("delivery_task");
                                    }
                                

                                          if (localDelivery_task==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("delivery_task cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDelivery_task);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDescriptionTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"description", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"description");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("description");
                                    }
                                

                                          if (localDescription==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDescription);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDue_dateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"due_date", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"due_date");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("due_date");
                                    }
                                

                                          if (localDue_date==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDue_date);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEscalationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"escalation", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"escalation");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("escalation");
                                    }
                                

                                          if (localEscalation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("escalation cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEscalation));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localExpected_startTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"expected_start", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"expected_start");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("expected_start");
                                    }
                                

                                          if (localExpected_start==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("expected_start cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localExpected_start);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFollow_upTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"follow_up", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"follow_up");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("follow_up");
                                    }
                                

                                          if (localFollow_up==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("follow_up cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFollow_up);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGroup_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"group_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"group_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("group_list");
                                    }
                                

                                          if (localGroup_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("group_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGroup_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localImpactTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"impact", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"impact");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("impact");
                                    }
                                

                                          if (localImpact==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("impact cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpact));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIncident_stateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"incident_state", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"incident_state");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("incident_state");
                                    }
                                

                                          if (localIncident_state==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("incident_state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIncident_state));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localKnowledgeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"knowledge", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"knowledge");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("knowledge");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("knowledge cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKnowledge));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLocationTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"location", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"location");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("location");
                                    }
                                

                                          if (localLocation==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("location cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLocation);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMade_slaTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"made_sla", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"made_sla");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("made_sla");
                                    }
                                
                                               if (false) {
                                           
                                                         throw new org.apache.axis2.databinding.ADBException("made_sla cannot be null!!");
                                                      
                                               } else {
                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMade_sla));
                                               }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNotifyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"notify", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"notify");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("notify");
                                    }
                                

                                          if (localNotify==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("notify cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNotify));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNumberTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"number", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"number");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("number");
                                    }
                                

                                          if (localNumber==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNumber);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpened_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"opened_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"opened_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("opened_at");
                                    }
                                

                                          if (localOpened_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("opened_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpened_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOpened_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"opened_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"opened_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("opened_by");
                                    }
                                

                                          if (localOpened_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("opened_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOpened_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOrderTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"order", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"order");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("order");
                                    }
                                

                                          if (localOrder==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("order cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrder));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localParentTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"parent", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"parent");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("parent");
                                    }
                                

                                          if (localParent==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("parent cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localParent);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localParent_incidentTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"parent_incident", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"parent_incident");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("parent_incident");
                                    }
                                

                                          if (localParent_incident==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("parent_incident cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localParent_incident);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPriorityTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"priority", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"priority");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("priority");
                                    }
                                

                                          if (localPriority==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("priority cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPriority));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localProblem_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"problem_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"problem_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("problem_id");
                                    }
                                

                                          if (localProblem_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("problem_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localProblem_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReassignment_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"reassignment_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"reassignment_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("reassignment_count");
                                    }
                                

                                          if (localReassignment_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reassignment_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReassignment_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReopen_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"reopen_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"reopen_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("reopen_count");
                                    }
                                

                                          if (localReopen_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("reopen_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReopen_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResolved_atTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"resolved_at", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"resolved_at");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("resolved_at");
                                    }
                                

                                          if (localResolved_at==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resolved_at cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResolved_at);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localResolved_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"resolved_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"resolved_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("resolved_by");
                                    }
                                

                                          if (localResolved_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("resolved_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localResolved_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRfcTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"rfc", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"rfc");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("rfc");
                                    }
                                

                                          if (localRfc==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("rfc cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRfc);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSeverityTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"severity", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"severity");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("severity");
                                    }
                                

                                          if (localSeverity==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("severity cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeverity));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localShort_descriptionTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"short_description", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"short_description");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("short_description");
                                    }
                                

                                          if (localShort_description==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("short_description cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localShort_description);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSkillsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"skills", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"skills");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("skills");
                                    }
                                

                                          if (localSkills==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("skills cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSkills);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSla_dueTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sla_due", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sla_due");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sla_due");
                                    }
                                

                                          if (localSla_due==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sla_due cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSla_due);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localStateTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"state", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"state");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("state");
                                    }
                                

                                          if (localState==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSubcategoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"subcategory", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"subcategory");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("subcategory");
                                    }
                                

                                          if (localSubcategory==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("subcategory cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSubcategory);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_class_nameTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_class_name", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_class_name");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_class_name");
                                    }
                                

                                          if (localSys_class_name==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_class_name cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_class_name);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_created_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_created_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_created_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_created_by");
                                    }
                                

                                          if (localSys_created_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_created_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_created_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_created_onTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_created_on", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_created_on");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_created_on");
                                    }
                                

                                          if (localSys_created_on==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_created_on cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_created_on);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_domainTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_domain", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_domain");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_domain");
                                    }
                                

                                          if (localSys_domain==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_domain cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_domain);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_idTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_id");
                                    }
                                

                                          if (localSys_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_mod_countTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_mod_count", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_mod_count");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_mod_count");
                                    }
                                

                                          if (localSys_mod_count==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_mod_count cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_mod_count));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_tagsTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_tags", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_tags");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_tags");
                                    }
                                

                                          if (localSys_tags==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_tags cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_tags);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_updated_byTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_updated_by", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_updated_by");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_updated_by");
                                    }
                                

                                          if (localSys_updated_by==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_updated_by cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_updated_by);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSys_updated_onTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_updated_on", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_updated_on");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_updated_on");
                                    }
                                

                                          if (localSys_updated_on==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_updated_on cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_updated_on);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTime_workedTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"time_worked", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"time_worked");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("time_worked");
                                    }
                                

                                          if (localTime_worked==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("time_worked cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTime_worked);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localU_actual_elapsed_timeTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"u_actual_elapsed_time", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"u_actual_elapsed_time");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("u_actual_elapsed_time");
                                    }
                                

                                          if (localU_actual_elapsed_time==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("u_actual_elapsed_time cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_actual_elapsed_time));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localU_aging_categoryTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"u_aging_category", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"u_aging_category");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("u_aging_category");
                                    }
                                

                                          if (localU_aging_category==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("u_aging_category cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localU_aging_category);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUpon_approvalTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"upon_approval", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"upon_approval");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("upon_approval");
                                    }
                                

                                          if (localUpon_approval==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("upon_approval cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUpon_approval);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUpon_rejectTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"upon_reject", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"upon_reject");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("upon_reject");
                                    }
                                

                                          if (localUpon_reject==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("upon_reject cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUpon_reject);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUrgencyTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"urgency", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"urgency");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("urgency");
                                    }
                                

                                          if (localUrgency==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("urgency cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrgency));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUser_inputTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"user_input", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"user_input");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("user_input");
                                    }
                                

                                          if (localUser_input==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("user_input cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUser_input);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWatch_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"watch_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"watch_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("watch_list");
                                    }
                                

                                          if (localWatch_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("watch_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWatch_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_endTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_end", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_end");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_end");
                                    }
                                

                                          if (localWork_end==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_end cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_end);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_notes_listTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_notes_list", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_notes_list");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_notes_list");
                                    }
                                

                                          if (localWork_notes_list==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_notes_list cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_notes_list);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localWork_startTracker){
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"work_start", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"work_start");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("work_start");
                                    }
                                

                                          if (localWork_start==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("work_start cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localWork_start);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localActiveTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "active"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActive));
                            } if (localActivity_dueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "activity_due"));
                                 
                                        if (localActivity_due != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localActivity_due));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("activity_due cannot be null!!");
                                        }
                                    } if (localApprovalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval"));
                                 
                                        if (localApproval != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval cannot be null!!");
                                        }
                                    } if (localApproval_setTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "approval_set"));
                                 
                                        if (localApproval_set != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localApproval_set));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("approval_set cannot be null!!");
                                        }
                                    } if (localAssigned_toTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "assigned_to"));
                                 
                                        if (localAssigned_to != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssigned_to));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assigned_to cannot be null!!");
                                        }
                                    } if (localAssignment_groupTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "assignment_group"));
                                 
                                        if (localAssignment_group != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAssignment_group));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("assignment_group cannot be null!!");
                                        }
                                    } if (localBusiness_durationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "business_duration"));
                                 
                                        if (localBusiness_duration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_duration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("business_duration cannot be null!!");
                                        }
                                    } if (localBusiness_stcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "business_stc"));
                                 
                                        if (localBusiness_stc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBusiness_stc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("business_stc cannot be null!!");
                                        }
                                    } if (localCalendar_durationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "calendar_duration"));
                                 
                                        if (localCalendar_duration != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_duration));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("calendar_duration cannot be null!!");
                                        }
                                    } if (localCalendar_stcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "calendar_stc"));
                                 
                                        if (localCalendar_stc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCalendar_stc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("calendar_stc cannot be null!!");
                                        }
                                    } if (localCaller_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "caller_id"));
                                 
                                        if (localCaller_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCaller_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("caller_id cannot be null!!");
                                        }
                                    } if (localCategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "category"));
                                 
                                        if (localCategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("category cannot be null!!");
                                        }
                                    } if (localCaused_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "caused_by"));
                                 
                                        if (localCaused_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCaused_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("caused_by cannot be null!!");
                                        }
                                    } if (localChild_incidentsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "child_incidents"));
                                 
                                        if (localChild_incidents != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChild_incidents));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("child_incidents cannot be null!!");
                                        }
                                    } if (localClose_codeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "close_code"));
                                 
                                        if (localClose_code != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClose_code));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("close_code cannot be null!!");
                                        }
                                    } if (localClose_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "close_notes"));
                                 
                                        if (localClose_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClose_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("close_notes cannot be null!!");
                                        }
                                    } if (localClosed_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "closed_at"));
                                 
                                        if (localClosed_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosed_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closed_at cannot be null!!");
                                        }
                                    } if (localClosed_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "closed_by"));
                                 
                                        if (localClosed_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localClosed_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("closed_by cannot be null!!");
                                        }
                                    } if (localCmdb_ciTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "cmdb_ci"));
                                 
                                        if (localCmdb_ci != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCmdb_ci));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("cmdb_ci cannot be null!!");
                                        }
                                    } if (localComments_and_work_notesTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "comments_and_work_notes"));
                                 
                                        if (localComments_and_work_notes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localComments_and_work_notes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("comments_and_work_notes cannot be null!!");
                                        }
                                    } if (localCompanyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "company"));
                                 
                                        if (localCompany != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCompany));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("company cannot be null!!");
                                        }
                                    } if (localContact_typeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "contact_type"));
                                 
                                        if (localContact_type != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localContact_type));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("contact_type cannot be null!!");
                                        }
                                    } if (localCorrelation_displayTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "correlation_display"));
                                 
                                        if (localCorrelation_display != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelation_display));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlation_display cannot be null!!");
                                        }
                                    } if (localCorrelation_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "correlation_id"));
                                 
                                        if (localCorrelation_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCorrelation_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("correlation_id cannot be null!!");
                                        }
                                    } if (localDelivery_planTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "delivery_plan"));
                                 
                                        if (localDelivery_plan != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelivery_plan));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delivery_plan cannot be null!!");
                                        }
                                    } if (localDelivery_taskTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "delivery_task"));
                                 
                                        if (localDelivery_task != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDelivery_task));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("delivery_task cannot be null!!");
                                        }
                                    } if (localDescriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "description"));
                                 
                                        if (localDescription != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDescription));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("description cannot be null!!");
                                        }
                                    } if (localDue_dateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "due_date"));
                                 
                                        if (localDue_date != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDue_date));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("due_date cannot be null!!");
                                        }
                                    } if (localEscalationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "escalation"));
                                 
                                        if (localEscalation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEscalation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("escalation cannot be null!!");
                                        }
                                    } if (localExpected_startTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "expected_start"));
                                 
                                        if (localExpected_start != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localExpected_start));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("expected_start cannot be null!!");
                                        }
                                    } if (localFollow_upTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "follow_up"));
                                 
                                        if (localFollow_up != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFollow_up));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("follow_up cannot be null!!");
                                        }
                                    } if (localGroup_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "group_list"));
                                 
                                        if (localGroup_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGroup_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("group_list cannot be null!!");
                                        }
                                    } if (localImpactTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "impact"));
                                 
                                        if (localImpact != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localImpact));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("impact cannot be null!!");
                                        }
                                    } if (localIncident_stateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "incident_state"));
                                 
                                        if (localIncident_state != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIncident_state));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("incident_state cannot be null!!");
                                        }
                                    } if (localKnowledgeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "knowledge"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKnowledge));
                            } if (localLocationTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "location"));
                                 
                                        if (localLocation != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLocation));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("location cannot be null!!");
                                        }
                                    } if (localMade_slaTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "made_sla"));
                                 
                                elementList.add(
                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMade_sla));
                            } if (localNotifyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "notify"));
                                 
                                        if (localNotify != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNotify));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("notify cannot be null!!");
                                        }
                                    } if (localNumberTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "number"));
                                 
                                        if (localNumber != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNumber));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("number cannot be null!!");
                                        }
                                    } if (localOpened_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "opened_at"));
                                 
                                        if (localOpened_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpened_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("opened_at cannot be null!!");
                                        }
                                    } if (localOpened_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "opened_by"));
                                 
                                        if (localOpened_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOpened_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("opened_by cannot be null!!");
                                        }
                                    } if (localOrderTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "order"));
                                 
                                        if (localOrder != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrder));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("order cannot be null!!");
                                        }
                                    } if (localParentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "parent"));
                                 
                                        if (localParent != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParent));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("parent cannot be null!!");
                                        }
                                    } if (localParent_incidentTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "parent_incident"));
                                 
                                        if (localParent_incident != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localParent_incident));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("parent_incident cannot be null!!");
                                        }
                                    } if (localPriorityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "priority"));
                                 
                                        if (localPriority != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPriority));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("priority cannot be null!!");
                                        }
                                    } if (localProblem_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "problem_id"));
                                 
                                        if (localProblem_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localProblem_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("problem_id cannot be null!!");
                                        }
                                    } if (localReassignment_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "reassignment_count"));
                                 
                                        if (localReassignment_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReassignment_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reassignment_count cannot be null!!");
                                        }
                                    } if (localReopen_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "reopen_count"));
                                 
                                        if (localReopen_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReopen_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("reopen_count cannot be null!!");
                                        }
                                    } if (localResolved_atTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "resolved_at"));
                                 
                                        if (localResolved_at != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResolved_at));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resolved_at cannot be null!!");
                                        }
                                    } if (localResolved_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "resolved_by"));
                                 
                                        if (localResolved_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localResolved_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("resolved_by cannot be null!!");
                                        }
                                    } if (localRfcTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "rfc"));
                                 
                                        if (localRfc != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRfc));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("rfc cannot be null!!");
                                        }
                                    } if (localSeverityTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "severity"));
                                 
                                        if (localSeverity != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSeverity));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("severity cannot be null!!");
                                        }
                                    } if (localShort_descriptionTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "short_description"));
                                 
                                        if (localShort_description != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localShort_description));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("short_description cannot be null!!");
                                        }
                                    } if (localSkillsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "skills"));
                                 
                                        if (localSkills != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSkills));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("skills cannot be null!!");
                                        }
                                    } if (localSla_dueTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sla_due"));
                                 
                                        if (localSla_due != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSla_due));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sla_due cannot be null!!");
                                        }
                                    } if (localStateTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "state"));
                                 
                                        if (localState != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localState));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("state cannot be null!!");
                                        }
                                    } if (localSubcategoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "subcategory"));
                                 
                                        if (localSubcategory != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSubcategory));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("subcategory cannot be null!!");
                                        }
                                    } if (localSys_class_nameTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_class_name"));
                                 
                                        if (localSys_class_name != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_class_name));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_class_name cannot be null!!");
                                        }
                                    } if (localSys_created_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_created_by"));
                                 
                                        if (localSys_created_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_created_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_created_by cannot be null!!");
                                        }
                                    } if (localSys_created_onTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_created_on"));
                                 
                                        if (localSys_created_on != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_created_on));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_created_on cannot be null!!");
                                        }
                                    } if (localSys_domainTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_domain"));
                                 
                                        if (localSys_domain != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_domain));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_domain cannot be null!!");
                                        }
                                    } if (localSys_idTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_id"));
                                 
                                        if (localSys_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                        }
                                    } if (localSys_mod_countTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_mod_count"));
                                 
                                        if (localSys_mod_count != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_mod_count));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_mod_count cannot be null!!");
                                        }
                                    } if (localSys_tagsTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_tags"));
                                 
                                        if (localSys_tags != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_tags));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_tags cannot be null!!");
                                        }
                                    } if (localSys_updated_byTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_updated_by"));
                                 
                                        if (localSys_updated_by != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_updated_by));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_updated_by cannot be null!!");
                                        }
                                    } if (localSys_updated_onTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_updated_on"));
                                 
                                        if (localSys_updated_on != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_updated_on));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_updated_on cannot be null!!");
                                        }
                                    } if (localTime_workedTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "time_worked"));
                                 
                                        if (localTime_worked != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTime_worked));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("time_worked cannot be null!!");
                                        }
                                    } if (localU_actual_elapsed_timeTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "u_actual_elapsed_time"));
                                 
                                        if (localU_actual_elapsed_time != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_actual_elapsed_time));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("u_actual_elapsed_time cannot be null!!");
                                        }
                                    } if (localU_aging_categoryTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "u_aging_category"));
                                 
                                        if (localU_aging_category != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localU_aging_category));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("u_aging_category cannot be null!!");
                                        }
                                    } if (localUpon_approvalTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "upon_approval"));
                                 
                                        if (localUpon_approval != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUpon_approval));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("upon_approval cannot be null!!");
                                        }
                                    } if (localUpon_rejectTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "upon_reject"));
                                 
                                        if (localUpon_reject != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUpon_reject));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("upon_reject cannot be null!!");
                                        }
                                    } if (localUrgencyTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "urgency"));
                                 
                                        if (localUrgency != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUrgency));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("urgency cannot be null!!");
                                        }
                                    } if (localUser_inputTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "user_input"));
                                 
                                        if (localUser_input != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUser_input));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("user_input cannot be null!!");
                                        }
                                    } if (localWatch_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "watch_list"));
                                 
                                        if (localWatch_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWatch_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("watch_list cannot be null!!");
                                        }
                                    } if (localWork_endTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_end"));
                                 
                                        if (localWork_end != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_end));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_end cannot be null!!");
                                        }
                                    } if (localWork_notes_listTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_notes_list"));
                                 
                                        if (localWork_notes_list != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_notes_list));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_notes_list cannot be null!!");
                                        }
                                    } if (localWork_startTracker){
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "work_start"));
                                 
                                        if (localWork_start != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWork_start));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("work_start cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static GetRecordsResult_type0 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            GetRecordsResult_type0 object =
                new GetRecordsResult_type0();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"getRecordsResult_type0".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (GetRecordsResult_type0)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","active").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActive(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","activity_due").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setActivity_due(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","approval_set").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setApproval_set(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","assigned_to").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssigned_to(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","assignment_group").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAssignment_group(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","business_duration").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusiness_duration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","business_stc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBusiness_stc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","calendar_duration").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalendar_duration(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","calendar_stc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCalendar_stc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","caller_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCaller_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","category").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","caused_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCaused_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","child_incidents").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setChild_incidents(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","close_code").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClose_code(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","close_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClose_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","closed_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosed_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","closed_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setClosed_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","cmdb_ci").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCmdb_ci(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","comments_and_work_notes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setComments_and_work_notes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","company").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCompany(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","contact_type").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setContact_type(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","correlation_display").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelation_display(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","correlation_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCorrelation_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","delivery_plan").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelivery_plan(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","delivery_task").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDelivery_task(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","description").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDescription(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","due_date").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDue_date(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","escalation").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEscalation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","expected_start").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setExpected_start(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","follow_up").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFollow_up(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","group_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGroup_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","impact").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setImpact(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","incident_state").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIncident_state(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","knowledge").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setKnowledge(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","location").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLocation(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","made_sla").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMade_sla(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","notify").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNotify(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","number").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNumber(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","opened_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpened_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","opened_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOpened_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","order").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOrder(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","parent").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setParent(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","parent_incident").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setParent_incident(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","priority").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPriority(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","problem_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setProblem_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","reassignment_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReassignment_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","reopen_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReopen_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","resolved_at").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResolved_at(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","resolved_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setResolved_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","rfc").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRfc(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","severity").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSeverity(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","short_description").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setShort_description(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","skills").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSkills(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sla_due").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSla_due(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","state").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setState(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","subcategory").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSubcategory(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_class_name").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_class_name(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_created_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_created_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_created_on").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_created_on(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_domain").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_domain(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_mod_count").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_mod_count(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_tags").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_tags(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_updated_by").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_updated_by(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_updated_on").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_updated_on(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","time_worked").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTime_worked(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","u_actual_elapsed_time").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setU_actual_elapsed_time(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","u_aging_category").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setU_aging_category(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","upon_approval").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUpon_approval(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","upon_reject").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUpon_reject(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","urgency").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUrgency(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","user_input").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUser_input(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","watch_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWatch_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_end").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_end(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_notes_list").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_notes_list(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","work_start").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setWork_start(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class DeleteRecord
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.service-now.com/incident",
                "deleteRecord",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.service-now.com/incident")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for Sys_id
                        */

                        
                                    protected java.lang.String localSys_id ;
                                

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSys_id(){
                               return localSys_id;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Sys_id
                               */
                               public void setSys_id(java.lang.String param){
                            
                                            this.localSys_id=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       DeleteRecord.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }

         public void serialize(final javax.xml.namespace.QName parentQName,
                                       final org.apache.axiom.om.OMFactory factory,
                                       org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
                           serialize(parentQName,factory,xmlWriter,false);
         }

         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter,
                               boolean serializeType)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if ((namespace != null) && (namespace.trim().length() > 0)) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                  if (serializeType){
               

                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://www.service-now.com/incident");
                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           namespacePrefix+":deleteRecord",
                           xmlWriter);
                   } else {
                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
                           "deleteRecord",
                           xmlWriter);
                   }

               
                   }
               
                                    namespace = "http://www.service-now.com/incident";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"sys_id", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"sys_id");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("sys_id");
                                    }
                                

                                          if (localSys_id==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSys_id);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                                      elementList.add(new javax.xml.namespace.QName("http://www.service-now.com/incident",
                                                                      "sys_id"));
                                 
                                        if (localSys_id != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSys_id));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("sys_id cannot be null!!");
                                        }
                                    

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static DeleteRecord parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            DeleteRecord object =
                new DeleteRecord();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"deleteRecord".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (DeleteRecord)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }
                

                }

                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://www.service-now.com/incident","sys_id").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSys_id(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                                }
                              
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
            private  org.apache.axiom.om.OMElement  toOM(com.service_now.www.incident.ServiceNow_incidentStub.GetKeys param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.GetKeys.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.service_now.www.incident.ServiceNow_incidentStub.GetKeysResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.GetKeysResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.service_now.www.incident.ServiceNow_incidentStub.Update param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.Update.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.service_now.www.incident.ServiceNow_incidentStub.UpdateResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.UpdateResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.service_now.www.incident.ServiceNow_incidentStub.GetRecords param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.GetRecords.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.service_now.www.incident.ServiceNow_incidentStub.GetRecordsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.GetRecordsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultiple param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultiple.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultipleResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultipleResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.service_now.www.incident.ServiceNow_incidentStub.Get param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.Get.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.service_now.www.incident.ServiceNow_incidentStub.GetResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.GetResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.service_now.www.incident.ServiceNow_incidentStub.Insert param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.Insert.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.service_now.www.incident.ServiceNow_incidentStub.InsertResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.InsertResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecord param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecord.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecordResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecordResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.service_now.www.incident.ServiceNow_incidentStub.GetKeys param, boolean optimizeContent)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.GetKeys.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.service_now.www.incident.ServiceNow_incidentStub.Update param, boolean optimizeContent)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.Update.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.service_now.www.incident.ServiceNow_incidentStub.GetRecords param, boolean optimizeContent)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.GetRecords.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultiple param, boolean optimizeContent)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultiple.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.service_now.www.incident.ServiceNow_incidentStub.Get param, boolean optimizeContent)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.Get.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.service_now.www.incident.ServiceNow_incidentStub.Insert param, boolean optimizeContent)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.Insert.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecord param, boolean optimizeContent)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecord.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             


        /**
        *  get the default envelope
        */
        private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory){
        return factory.getDefaultEnvelope();
        }


        private  java.lang.Object fromOM(
        org.apache.axiom.om.OMElement param,
        java.lang.Class type,
        java.util.Map extraNamespaces) throws org.apache.axis2.AxisFault{

        try {
        
                if (com.service_now.www.incident.ServiceNow_incidentStub.GetKeys.class.equals(type)){
                
                           return com.service_now.www.incident.ServiceNow_incidentStub.GetKeys.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.service_now.www.incident.ServiceNow_incidentStub.GetKeysResponse.class.equals(type)){
                
                           return com.service_now.www.incident.ServiceNow_incidentStub.GetKeysResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.service_now.www.incident.ServiceNow_incidentStub.Update.class.equals(type)){
                
                           return com.service_now.www.incident.ServiceNow_incidentStub.Update.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.service_now.www.incident.ServiceNow_incidentStub.UpdateResponse.class.equals(type)){
                
                           return com.service_now.www.incident.ServiceNow_incidentStub.UpdateResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.service_now.www.incident.ServiceNow_incidentStub.GetRecords.class.equals(type)){
                
                           return com.service_now.www.incident.ServiceNow_incidentStub.GetRecords.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.service_now.www.incident.ServiceNow_incidentStub.GetRecordsResponse.class.equals(type)){
                
                           return com.service_now.www.incident.ServiceNow_incidentStub.GetRecordsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultiple.class.equals(type)){
                
                           return com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultiple.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultipleResponse.class.equals(type)){
                
                           return com.service_now.www.incident.ServiceNow_incidentStub.DeleteMultipleResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.service_now.www.incident.ServiceNow_incidentStub.Get.class.equals(type)){
                
                           return com.service_now.www.incident.ServiceNow_incidentStub.Get.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.service_now.www.incident.ServiceNow_incidentStub.GetResponse.class.equals(type)){
                
                           return com.service_now.www.incident.ServiceNow_incidentStub.GetResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.service_now.www.incident.ServiceNow_incidentStub.Insert.class.equals(type)){
                
                           return com.service_now.www.incident.ServiceNow_incidentStub.Insert.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.service_now.www.incident.ServiceNow_incidentStub.InsertResponse.class.equals(type)){
                
                           return com.service_now.www.incident.ServiceNow_incidentStub.InsertResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecord.class.equals(type)){
                
                           return com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecord.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecordResponse.class.equals(type)){
                
                           return com.service_now.www.incident.ServiceNow_incidentStub.DeleteRecordResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
        } catch (java.lang.Exception e) {
        throw org.apache.axis2.AxisFault.makeFault(e);
        }
           return null;
        }



    
   }
   